<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="630" onload="init(evt)" viewBox="0 0 1200 630" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="630" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="613.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="613.00"> </text><svg id="frames" x="10" width="1180" total_samples="77666"><g><title>libsystem_kernel.dylib`madvise (18 samples, 0.02%)</title><rect x="0.0206%" y="453" width="0.0232%" height="15" fill="rgb(227,0,7)" fg:x="16" fg:w="18"/><text x="0.2706%" y="463.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (25 samples, 0.03%)</title><rect x="0.0541%" y="421" width="0.0322%" height="15" fill="rgb(217,0,24)" fg:x="42" fg:w="25"/><text x="0.3041%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_large (27 samples, 0.03%)</title><rect x="0.0528%" y="453" width="0.0348%" height="15" fill="rgb(221,193,54)" fg:x="41" fg:w="27"/><text x="0.3028%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`mvm_deallocate_pages (26 samples, 0.03%)</title><rect x="0.0541%" y="437" width="0.0335%" height="15" fill="rgb(248,212,6)" fg:x="42" fg:w="26"/><text x="0.3041%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="0.0901%" y="453" width="0.0103%" height="15" fill="rgb(208,68,35)" fg:x="70" fg:w="8"/><text x="0.3401%" y="463.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.01%)</title><rect x="0.0901%" y="437" width="0.0103%" height="15" fill="rgb(232,128,0)" fg:x="70" fg:w="8"/><text x="0.3401%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="0.0901%" y="421" width="0.0103%" height="15" fill="rgb(207,160,47)" fg:x="70" fg:w="8"/><text x="0.3401%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (10 samples, 0.01%)</title><rect x="0.1094%" y="437" width="0.0129%" height="15" fill="rgb(228,23,34)" fg:x="85" fg:w="10"/><text x="0.3594%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="0.1223%" y="437" width="0.0116%" height="15" fill="rgb(218,30,26)" fg:x="95" fg:w="9"/><text x="0.3723%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (12 samples, 0.02%)</title><rect x="0.1339%" y="437" width="0.0155%" height="15" fill="rgb(220,122,19)" fg:x="104" fg:w="12"/><text x="0.3839%" y="447.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (14 samples, 0.02%)</title><rect x="0.2176%" y="421" width="0.0180%" height="15" fill="rgb(250,228,42)" fg:x="169" fg:w="14"/><text x="0.4676%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="0.2987%" y="405" width="0.0103%" height="15" fill="rgb(240,193,28)" fg:x="232" fg:w="8"/><text x="0.5487%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free (166 samples, 0.21%)</title><rect x="0.2356%" y="421" width="0.2137%" height="15" fill="rgb(216,20,37)" fg:x="183" fg:w="166"/><text x="0.4856%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (109 samples, 0.14%)</title><rect x="0.3090%" y="405" width="0.1403%" height="15" fill="rgb(206,188,39)" fg:x="240" fg:w="109"/><text x="0.5590%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="0.6335%" y="405" width="0.0155%" height="15" fill="rgb(217,207,13)" fg:x="492" fg:w="12"/><text x="0.8835%" y="415.50"></text></g><g><title>libsystem_kernel.dylib`madvise (114 samples, 0.15%)</title><rect x="0.9052%" y="389" width="0.1468%" height="15" fill="rgb(231,73,38)" fg:x="703" fg:w="114"/><text x="1.1552%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (11 samples, 0.01%)</title><rect x="1.0571%" y="389" width="0.0142%" height="15" fill="rgb(225,20,46)" fg:x="821" fg:w="11"/><text x="1.3071%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (100 samples, 0.13%)</title><rect x="1.0713%" y="389" width="0.1288%" height="15" fill="rgb(210,31,41)" fg:x="832" fg:w="100"/><text x="1.3213%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (8 samples, 0.01%)</title><rect x="1.2000%" y="389" width="0.0103%" height="15" fill="rgb(221,200,47)" fg:x="932" fg:w="8"/><text x="1.4500%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (14 samples, 0.02%)</title><rect x="1.2270%" y="373" width="0.0180%" height="15" fill="rgb(226,26,5)" fg:x="953" fg:w="14"/><text x="1.4770%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (615 samples, 0.79%)</title><rect x="0.4545%" y="421" width="0.7919%" height="15" fill="rgb(249,33,26)" fg:x="353" fg:w="615"/><text x="0.7045%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (461 samples, 0.59%)</title><rect x="0.6528%" y="405" width="0.5936%" height="15" fill="rgb(235,183,28)" fg:x="507" fg:w="461"/><text x="0.9028%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (28 samples, 0.04%)</title><rect x="1.2103%" y="389" width="0.0361%" height="15" fill="rgb(221,5,38)" fg:x="940" fg:w="28"/><text x="1.4603%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (32 samples, 0.04%)</title><rect x="1.2515%" y="421" width="0.0412%" height="15" fill="rgb(247,18,42)" fg:x="972" fg:w="32"/><text x="1.5015%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (42 samples, 0.05%)</title><rect x="1.4974%" y="405" width="0.0541%" height="15" fill="rgb(241,131,45)" fg:x="1163" fg:w="42"/><text x="1.7474%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (31 samples, 0.04%)</title><rect x="1.7086%" y="389" width="0.0399%" height="15" fill="rgb(249,31,29)" fg:x="1327" fg:w="31"/><text x="1.9586%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (408 samples, 0.53%)</title><rect x="1.5515%" y="405" width="0.5253%" height="15" fill="rgb(225,111,53)" fg:x="1205" fg:w="408"/><text x="1.8015%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (255 samples, 0.33%)</title><rect x="1.7485%" y="389" width="0.3283%" height="15" fill="rgb(238,160,17)" fg:x="1358" fg:w="255"/><text x="1.9985%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (54 samples, 0.07%)</title><rect x="2.7631%" y="389" width="0.0695%" height="15" fill="rgb(214,148,48)" fg:x="2146" fg:w="54"/><text x="3.0131%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="2.8326%" y="389" width="0.0103%" height="15" fill="rgb(232,36,49)" fg:x="2200" fg:w="8"/><text x="3.0826%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (226 samples, 0.29%)</title><rect x="3.4687%" y="373" width="0.2910%" height="15" fill="rgb(209,103,24)" fg:x="2694" fg:w="226"/><text x="3.7187%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free (11 samples, 0.01%)</title><rect x="3.7597%" y="373" width="0.0142%" height="15" fill="rgb(229,88,8)" fg:x="2920" fg:w="11"/><text x="4.0097%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (103 samples, 0.13%)</title><rect x="3.7739%" y="373" width="0.1326%" height="15" fill="rgb(213,181,19)" fg:x="2931" fg:w="103"/><text x="4.0239%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="3.8872%" y="357" width="0.0193%" height="15" fill="rgb(254,191,54)" fg:x="3019" fg:w="15"/><text x="4.1372%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (214 samples, 0.28%)</title><rect x="3.9129%" y="373" width="0.2755%" height="15" fill="rgb(241,83,37)" fg:x="3039" fg:w="214"/><text x="4.1629%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (64 samples, 0.08%)</title><rect x="4.1884%" y="373" width="0.0824%" height="15" fill="rgb(233,36,39)" fg:x="3253" fg:w="64"/><text x="4.4384%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (173 samples, 0.22%)</title><rect x="4.3996%" y="357" width="0.2227%" height="15" fill="rgb(226,3,54)" fg:x="3417" fg:w="173"/><text x="4.6496%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,982 samples, 2.55%)</title><rect x="2.0768%" y="405" width="2.5520%" height="15" fill="rgb(245,192,40)" fg:x="1613" fg:w="1982"/><text x="2.3268%" y="415.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,387 samples, 1.79%)</title><rect x="2.8429%" y="389" width="1.7859%" height="15" fill="rgb(238,167,29)" fg:x="2208" fg:w="1387"/><text x="3.0929%" y="399.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (278 samples, 0.36%)</title><rect x="4.2709%" y="373" width="0.3579%" height="15" fill="rgb(232,182,51)" fg:x="3317" fg:w="278"/><text x="4.5209%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="4.6288%" y="405" width="0.0155%" height="15" fill="rgb(231,60,39)" fg:x="3595" fg:w="12"/><text x="4.8788%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.01%)</title><rect x="4.6442%" y="405" width="0.0142%" height="15" fill="rgb(208,69,12)" fg:x="3607" fg:w="11"/><text x="4.8942%" y="415.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (145 samples, 0.19%)</title><rect x="4.6610%" y="405" width="0.1867%" height="15" fill="rgb(235,93,37)" fg:x="3620" fg:w="145"/><text x="4.9110%" y="415.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,926 samples, 3.77%)</title><rect x="1.3030%" y="421" width="3.7674%" height="15" fill="rgb(213,116,39)" fg:x="1012" fg:w="2926"/><text x="1.5530%" y="431.50">rust..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (173 samples, 0.22%)</title><rect x="4.8477%" y="405" width="0.2227%" height="15" fill="rgb(222,207,29)" fg:x="3765" fg:w="173"/><text x="5.0977%" y="415.50"></text></g><g><title>rust_edit_history`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="5.0498%" y="389" width="0.0206%" height="15" fill="rgb(206,96,30)" fg:x="3922" fg:w="16"/><text x="5.2998%" y="399.50"></text></g><g><title>rust_edit_history`__rdl_dealloc (17 samples, 0.02%)</title><rect x="5.0717%" y="421" width="0.0219%" height="15" fill="rgb(218,138,4)" fg:x="3939" fg:w="17"/><text x="5.3217%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (17 samples, 0.02%)</title><rect x="5.1734%" y="405" width="0.0219%" height="15" fill="rgb(250,191,14)" fg:x="4018" fg:w="17"/><text x="5.4234%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (11 samples, 0.01%)</title><rect x="5.1812%" y="389" width="0.0142%" height="15" fill="rgb(239,60,40)" fg:x="4024" fg:w="11"/><text x="5.4312%" y="399.50"></text></g><g><title>libsystem_kernel.dylib`madvise (66 samples, 0.08%)</title><rect x="5.2417%" y="373" width="0.0850%" height="15" fill="rgb(206,27,48)" fg:x="4071" fg:w="66"/><text x="5.4917%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (8 samples, 0.01%)</title><rect x="5.3305%" y="373" width="0.0103%" height="15" fill="rgb(225,35,8)" fg:x="4140" fg:w="8"/><text x="5.5805%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="5.3421%" y="373" width="0.0103%" height="15" fill="rgb(250,213,24)" fg:x="4149" fg:w="8"/><text x="5.5921%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (15 samples, 0.02%)</title><rect x="5.3524%" y="373" width="0.0193%" height="15" fill="rgb(247,123,22)" fg:x="4157" fg:w="15"/><text x="5.6024%" y="383.50"></text></g><g><title>libsystem_kernel.dylib`madvise (21 samples, 0.03%)</title><rect x="5.3833%" y="357" width="0.0270%" height="15" fill="rgb(231,138,38)" fg:x="4181" fg:w="21"/><text x="5.6333%" y="367.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (244 samples, 0.31%)</title><rect x="5.0988%" y="421" width="0.3142%" height="15" fill="rgb(231,145,46)" fg:x="3960" fg:w="244"/><text x="5.3488%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (169 samples, 0.22%)</title><rect x="5.1953%" y="405" width="0.2176%" height="15" fill="rgb(251,118,11)" fg:x="4035" fg:w="169"/><text x="5.4453%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (158 samples, 0.20%)</title><rect x="5.2095%" y="389" width="0.2034%" height="15" fill="rgb(217,147,25)" fg:x="4046" fg:w="158"/><text x="5.4595%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (32 samples, 0.04%)</title><rect x="5.3717%" y="373" width="0.0412%" height="15" fill="rgb(247,81,37)" fg:x="4172" fg:w="32"/><text x="5.6217%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (25 samples, 0.03%)</title><rect x="5.5867%" y="389" width="0.0322%" height="15" fill="rgb(209,12,38)" fg:x="4339" fg:w="25"/><text x="5.8367%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (11 samples, 0.01%)</title><rect x="5.6189%" y="389" width="0.0142%" height="15" fill="rgb(227,1,9)" fg:x="4364" fg:w="11"/><text x="5.8689%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (27 samples, 0.03%)</title><rect x="5.6331%" y="389" width="0.0348%" height="15" fill="rgb(248,47,43)" fg:x="4375" fg:w="27"/><text x="5.8831%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (50 samples, 0.06%)</title><rect x="5.8610%" y="373" width="0.0644%" height="15" fill="rgb(221,10,30)" fg:x="4552" fg:w="50"/><text x="6.1110%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (27 samples, 0.03%)</title><rect x="6.1159%" y="357" width="0.0348%" height="15" fill="rgb(210,229,1)" fg:x="4750" fg:w="27"/><text x="6.3659%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (462 samples, 0.59%)</title><rect x="5.9254%" y="373" width="0.5949%" height="15" fill="rgb(222,148,37)" fg:x="4602" fg:w="462"/><text x="6.1754%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (287 samples, 0.37%)</title><rect x="6.1507%" y="357" width="0.3695%" height="15" fill="rgb(234,67,33)" fg:x="4777" fg:w="287"/><text x="6.4007%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (72 samples, 0.09%)</title><rect x="7.4009%" y="357" width="0.0927%" height="15" fill="rgb(247,98,35)" fg:x="5748" fg:w="72"/><text x="7.6509%" y="367.50"></text></g><g><title>libsystem_kernel.dylib`madvise (321 samples, 0.41%)</title><rect x="8.4065%" y="341" width="0.4133%" height="15" fill="rgb(247,138,52)" fg:x="6529" fg:w="321"/><text x="8.6565%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free (8 samples, 0.01%)</title><rect x="8.8198%" y="341" width="0.0103%" height="15" fill="rgb(213,79,30)" fg:x="6850" fg:w="8"/><text x="9.0698%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (105 samples, 0.14%)</title><rect x="8.8301%" y="341" width="0.1352%" height="15" fill="rgb(246,177,23)" fg:x="6858" fg:w="105"/><text x="9.0801%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (16 samples, 0.02%)</title><rect x="8.9447%" y="325" width="0.0206%" height="15" fill="rgb(230,62,27)" fg:x="6947" fg:w="16"/><text x="9.1947%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (298 samples, 0.38%)</title><rect x="8.9666%" y="341" width="0.3837%" height="15" fill="rgb(216,154,8)" fg:x="6964" fg:w="298"/><text x="9.2166%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (88 samples, 0.11%)</title><rect x="9.3503%" y="341" width="0.1133%" height="15" fill="rgb(244,35,45)" fg:x="7262" fg:w="88"/><text x="9.6003%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (153 samples, 0.20%)</title><rect x="9.5936%" y="325" width="0.1970%" height="15" fill="rgb(251,115,12)" fg:x="7451" fg:w="153"/><text x="9.8436%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,545 samples, 3.28%)</title><rect x="6.5202%" y="373" width="3.2769%" height="15" fill="rgb(240,54,50)" fg:x="5064" fg:w="2545"/><text x="6.7702%" y="383.50">lib..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,784 samples, 2.30%)</title><rect x="7.5001%" y="357" width="2.2970%" height="15" fill="rgb(233,84,52)" fg:x="5825" fg:w="1784"/><text x="7.7501%" y="367.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (259 samples, 0.33%)</title><rect x="9.4636%" y="341" width="0.3335%" height="15" fill="rgb(207,117,47)" fg:x="7350" fg:w="259"/><text x="9.7136%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (18 samples, 0.02%)</title><rect x="9.7971%" y="373" width="0.0232%" height="15" fill="rgb(249,43,39)" fg:x="7609" fg:w="18"/><text x="10.0471%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.03%)</title><rect x="9.8203%" y="373" width="0.0258%" height="15" fill="rgb(209,38,44)" fg:x="7627" fg:w="20"/><text x="10.0703%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (16 samples, 0.02%)</title><rect x="9.8460%" y="373" width="0.0206%" height="15" fill="rgb(236,212,23)" fg:x="7647" fg:w="16"/><text x="10.0960%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (41 samples, 0.05%)</title><rect x="10.0494%" y="357" width="0.0528%" height="15" fill="rgb(242,79,21)" fg:x="7805" fg:w="41"/><text x="10.2994%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (33 samples, 0.04%)</title><rect x="10.2979%" y="341" width="0.0425%" height="15" fill="rgb(211,96,35)" fg:x="7998" fg:w="33"/><text x="10.5479%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`free (403 samples, 0.52%)</title><rect x="10.1022%" y="357" width="0.5189%" height="15" fill="rgb(253,215,40)" fg:x="7846" fg:w="403"/><text x="10.3522%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (218 samples, 0.28%)</title><rect x="10.3404%" y="341" width="0.2807%" height="15" fill="rgb(211,81,21)" fg:x="8031" fg:w="218"/><text x="10.5904%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (47 samples, 0.06%)</title><rect x="11.3460%" y="341" width="0.0605%" height="15" fill="rgb(208,190,38)" fg:x="8812" fg:w="47"/><text x="11.5960%" y="351.50"></text></g><g><title>libsystem_kernel.dylib`madvise (188 samples, 0.24%)</title><rect x="12.1958%" y="325" width="0.2421%" height="15" fill="rgb(235,213,38)" fg:x="9472" fg:w="188"/><text x="12.4458%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`mvm_madvise_free (10 samples, 0.01%)</title><rect x="12.4379%" y="325" width="0.0129%" height="15" fill="rgb(237,122,38)" fg:x="9660" fg:w="10"/><text x="12.6879%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (112 samples, 0.14%)</title><rect x="12.4508%" y="325" width="0.1442%" height="15" fill="rgb(244,218,35)" fg:x="9670" fg:w="112"/><text x="12.7008%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (18 samples, 0.02%)</title><rect x="12.5718%" y="309" width="0.0232%" height="15" fill="rgb(240,68,47)" fg:x="9764" fg:w="18"/><text x="12.8218%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (251 samples, 0.32%)</title><rect x="12.5950%" y="325" width="0.3232%" height="15" fill="rgb(210,16,53)" fg:x="9782" fg:w="251"/><text x="12.8450%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (106 samples, 0.14%)</title><rect x="12.9181%" y="325" width="0.1365%" height="15" fill="rgb(235,124,12)" fg:x="10033" fg:w="106"/><text x="13.1681%" y="335.50"></text></g><g><title>libsystem_kernel.dylib`madvise (186 samples, 0.24%)</title><rect x="13.1615%" y="309" width="0.2395%" height="15" fill="rgb(224,169,11)" fg:x="10222" fg:w="186"/><text x="13.4115%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (2,163 samples, 2.79%)</title><rect x="10.6211%" y="357" width="2.7850%" height="15" fill="rgb(250,166,2)" fg:x="8249" fg:w="2163"/><text x="10.8711%" y="367.50">li..</text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (1,549 samples, 1.99%)</title><rect x="11.4117%" y="341" width="1.9944%" height="15" fill="rgb(242,216,29)" fg:x="8863" fg:w="1549"/><text x="11.6617%" y="351.50">l..</text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (273 samples, 0.35%)</title><rect x="13.0546%" y="325" width="0.3515%" height="15" fill="rgb(230,116,27)" fg:x="10139" fg:w="273"/><text x="13.3046%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.01%)</title><rect x="13.4061%" y="357" width="0.0116%" height="15" fill="rgb(228,99,48)" fg:x="10412" fg:w="9"/><text x="13.6561%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.01%)</title><rect x="13.4177%" y="357" width="0.0142%" height="15" fill="rgb(253,11,6)" fg:x="10421" fg:w="11"/><text x="13.6677%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (17 samples, 0.02%)</title><rect x="13.4319%" y="357" width="0.0219%" height="15" fill="rgb(247,143,39)" fg:x="10432" fg:w="17"/><text x="13.6819%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (26 samples, 0.03%)</title><rect x="13.6211%" y="341" width="0.0335%" height="15" fill="rgb(236,97,10)" fg:x="10579" fg:w="26"/><text x="13.8711%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (14 samples, 0.02%)</title><rect x="13.7383%" y="325" width="0.0180%" height="15" fill="rgb(233,208,19)" fg:x="10670" fg:w="14"/><text x="13.9883%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (180 samples, 0.23%)</title><rect x="13.6546%" y="341" width="0.2318%" height="15" fill="rgb(216,164,2)" fg:x="10605" fg:w="180"/><text x="13.9046%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (101 samples, 0.13%)</title><rect x="13.7563%" y="325" width="0.1300%" height="15" fill="rgb(220,129,5)" fg:x="10684" fg:w="101"/><text x="14.0063%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (30 samples, 0.04%)</title><rect x="14.1941%" y="325" width="0.0386%" height="15" fill="rgb(242,17,10)" fg:x="11024" fg:w="30"/><text x="14.4441%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (59 samples, 0.08%)</title><rect x="14.5572%" y="309" width="0.0760%" height="15" fill="rgb(242,107,0)" fg:x="11306" fg:w="59"/><text x="14.8072%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="14.6229%" y="293" width="0.0103%" height="15" fill="rgb(251,28,31)" fg:x="11357" fg:w="8"/><text x="14.8729%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (61 samples, 0.08%)</title><rect x="14.6332%" y="309" width="0.0785%" height="15" fill="rgb(233,223,10)" fg:x="11365" fg:w="61"/><text x="14.8832%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (67 samples, 0.09%)</title><rect x="14.7117%" y="309" width="0.0863%" height="15" fill="rgb(215,21,27)" fg:x="11426" fg:w="67"/><text x="14.9617%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (103 samples, 0.13%)</title><rect x="14.8714%" y="293" width="0.1326%" height="15" fill="rgb(232,23,21)" fg:x="11550" fg:w="103"/><text x="15.1214%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (872 samples, 1.12%)</title><rect x="13.8864%" y="341" width="1.1228%" height="15" fill="rgb(244,5,23)" fg:x="10785" fg:w="872"/><text x="14.1364%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (601 samples, 0.77%)</title><rect x="14.2353%" y="325" width="0.7738%" height="15" fill="rgb(226,81,46)" fg:x="11056" fg:w="601"/><text x="14.4853%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (164 samples, 0.21%)</title><rect x="14.7980%" y="309" width="0.2112%" height="15" fill="rgb(247,70,30)" fg:x="11493" fg:w="164"/><text x="15.0480%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (8 samples, 0.01%)</title><rect x="15.0091%" y="341" width="0.0103%" height="15" fill="rgb(212,68,19)" fg:x="11657" fg:w="8"/><text x="15.2591%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="15.0194%" y="341" width="0.0103%" height="15" fill="rgb(240,187,13)" fg:x="11665" fg:w="8"/><text x="15.2694%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (20 samples, 0.03%)</title><rect x="15.1508%" y="325" width="0.0258%" height="15" fill="rgb(223,113,26)" fg:x="11767" fg:w="20"/><text x="15.4008%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (16 samples, 0.02%)</title><rect x="15.2576%" y="309" width="0.0206%" height="15" fill="rgb(206,192,2)" fg:x="11850" fg:w="16"/><text x="15.5076%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (180 samples, 0.23%)</title><rect x="15.1765%" y="325" width="0.2318%" height="15" fill="rgb(241,108,4)" fg:x="11787" fg:w="180"/><text x="15.4265%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (101 samples, 0.13%)</title><rect x="15.2782%" y="309" width="0.1300%" height="15" fill="rgb(247,173,49)" fg:x="11866" fg:w="101"/><text x="15.5282%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (37 samples, 0.05%)</title><rect x="15.7160%" y="309" width="0.0476%" height="15" fill="rgb(224,114,35)" fg:x="12206" fg:w="37"/><text x="15.9660%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (42 samples, 0.05%)</title><rect x="16.0456%" y="293" width="0.0541%" height="15" fill="rgb(245,159,27)" fg:x="12462" fg:w="42"/><text x="16.2956%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (10 samples, 0.01%)</title><rect x="16.0868%" y="277" width="0.0129%" height="15" fill="rgb(245,172,44)" fg:x="12494" fg:w="10"/><text x="16.3368%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (92 samples, 0.12%)</title><rect x="16.0997%" y="293" width="0.1185%" height="15" fill="rgb(236,23,11)" fg:x="12504" fg:w="92"/><text x="16.3497%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (48 samples, 0.06%)</title><rect x="16.2182%" y="293" width="0.0618%" height="15" fill="rgb(205,117,38)" fg:x="12596" fg:w="48"/><text x="16.4682%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (87 samples, 0.11%)</title><rect x="16.3315%" y="277" width="0.1120%" height="15" fill="rgb(237,72,25)" fg:x="12684" fg:w="87"/><text x="16.5815%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (808 samples, 1.04%)</title><rect x="15.4083%" y="325" width="1.0404%" height="15" fill="rgb(244,70,9)" fg:x="11967" fg:w="808"/><text x="15.6583%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (528 samples, 0.68%)</title><rect x="15.7688%" y="309" width="0.6798%" height="15" fill="rgb(217,125,39)" fg:x="12247" fg:w="528"/><text x="16.0188%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (131 samples, 0.17%)</title><rect x="16.2800%" y="293" width="0.1687%" height="15" fill="rgb(235,36,10)" fg:x="12644" fg:w="131"/><text x="16.5300%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="16.4486%" y="325" width="0.0167%" height="15" fill="rgb(251,123,47)" fg:x="12775" fg:w="13"/><text x="16.6986%" y="335.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (55 samples, 0.07%)</title><rect x="16.4692%" y="325" width="0.0708%" height="15" fill="rgb(221,13,13)" fg:x="12791" fg:w="55"/><text x="16.7192%" y="335.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,239 samples, 1.60%)</title><rect x="15.0362%" y="341" width="1.5953%" height="15" fill="rgb(238,131,9)" fg:x="11678" fg:w="1239"/><text x="15.2862%" y="351.50"></text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (71 samples, 0.09%)</title><rect x="16.5401%" y="325" width="0.0914%" height="15" fill="rgb(211,50,8)" fg:x="12846" fg:w="71"/><text x="16.7901%" y="335.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (57 samples, 0.07%)</title><rect x="16.6418%" y="341" width="0.0734%" height="15" fill="rgb(245,182,24)" fg:x="12925" fg:w="57"/><text x="16.8918%" y="351.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,641 samples, 3.40%)</title><rect x="13.4538%" y="357" width="3.4005%" height="15" fill="rgb(242,14,37)" fg:x="10449" fg:w="2641"/><text x="13.7038%" y="367.50">rus..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (108 samples, 0.14%)</title><rect x="16.7152%" y="341" width="0.1391%" height="15" fill="rgb(246,228,12)" fg:x="12982" fg:w="108"/><text x="16.9652%" y="351.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (264 samples, 0.34%)</title><rect x="16.8619%" y="357" width="0.3399%" height="15" fill="rgb(213,55,15)" fg:x="13096" fg:w="264"/><text x="17.1119%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (8 samples, 0.01%)</title><rect x="17.5856%" y="325" width="0.0103%" height="15" fill="rgb(209,9,3)" fg:x="13658" fg:w="8"/><text x="17.8356%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (9 samples, 0.01%)</title><rect x="17.6023%" y="325" width="0.0116%" height="15" fill="rgb(230,59,30)" fg:x="13671" fg:w="9"/><text x="17.8523%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (22 samples, 0.03%)</title><rect x="17.7027%" y="309" width="0.0283%" height="15" fill="rgb(209,121,21)" fg:x="13749" fg:w="22"/><text x="17.9527%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (15 samples, 0.02%)</title><rect x="17.8057%" y="293" width="0.0193%" height="15" fill="rgb(220,109,13)" fg:x="13829" fg:w="15"/><text x="18.0557%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (178 samples, 0.23%)</title><rect x="17.7311%" y="309" width="0.2292%" height="15" fill="rgb(232,18,1)" fg:x="13771" fg:w="178"/><text x="17.9811%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (105 samples, 0.14%)</title><rect x="17.8250%" y="293" width="0.1352%" height="15" fill="rgb(215,41,42)" fg:x="13844" fg:w="105"/><text x="18.0750%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (31 samples, 0.04%)</title><rect x="18.3517%" y="293" width="0.0399%" height="15" fill="rgb(224,123,36)" fg:x="14253" fg:w="31"/><text x="18.6017%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (57 samples, 0.07%)</title><rect x="18.8100%" y="277" width="0.0734%" height="15" fill="rgb(240,125,3)" fg:x="14609" fg:w="57"/><text x="19.0600%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (13 samples, 0.02%)</title><rect x="18.8667%" y="261" width="0.0167%" height="15" fill="rgb(205,98,50)" fg:x="14653" fg:w="13"/><text x="19.1167%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (107 samples, 0.14%)</title><rect x="18.8847%" y="277" width="0.1378%" height="15" fill="rgb(205,185,37)" fg:x="14667" fg:w="107"/><text x="19.1347%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (50 samples, 0.06%)</title><rect x="19.0225%" y="277" width="0.0644%" height="15" fill="rgb(238,207,15)" fg:x="14774" fg:w="50"/><text x="19.2725%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (90 samples, 0.12%)</title><rect x="19.1448%" y="261" width="0.1159%" height="15" fill="rgb(213,199,42)" fg:x="14869" fg:w="90"/><text x="19.3948%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,012 samples, 1.30%)</title><rect x="17.9602%" y="309" width="1.3030%" height="15" fill="rgb(235,201,11)" fg:x="13949" fg:w="1012"/><text x="18.2102%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (673 samples, 0.87%)</title><rect x="18.3967%" y="293" width="0.8665%" height="15" fill="rgb(207,46,11)" fg:x="14288" fg:w="673"/><text x="18.6467%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (137 samples, 0.18%)</title><rect x="19.0869%" y="277" width="0.1764%" height="15" fill="rgb(241,35,35)" fg:x="14824" fg:w="137"/><text x="19.3369%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.01%)</title><rect x="19.2658%" y="309" width="0.0142%" height="15" fill="rgb(243,32,47)" fg:x="14963" fg:w="11"/><text x="19.5158%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (9 samples, 0.01%)</title><rect x="19.4680%" y="293" width="0.0116%" height="15" fill="rgb(247,202,23)" fg:x="15120" fg:w="9"/><text x="19.7180%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (103 samples, 0.13%)</title><rect x="19.4796%" y="293" width="0.1326%" height="15" fill="rgb(219,102,11)" fg:x="15129" fg:w="103"/><text x="19.7296%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (56 samples, 0.07%)</title><rect x="19.5401%" y="277" width="0.0721%" height="15" fill="rgb(243,110,44)" fg:x="15176" fg:w="56"/><text x="19.7901%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (24 samples, 0.03%)</title><rect x="19.7924%" y="277" width="0.0309%" height="15" fill="rgb(222,74,54)" fg:x="15372" fg:w="24"/><text x="20.0424%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (60 samples, 0.08%)</title><rect x="20.0384%" y="261" width="0.0773%" height="15" fill="rgb(216,99,12)" fg:x="15563" fg:w="60"/><text x="20.2884%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (39 samples, 0.05%)</title><rect x="20.1156%" y="261" width="0.0502%" height="15" fill="rgb(226,22,26)" fg:x="15623" fg:w="39"/><text x="20.3656%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (36 samples, 0.05%)</title><rect x="20.1658%" y="261" width="0.0464%" height="15" fill="rgb(217,163,10)" fg:x="15662" fg:w="36"/><text x="20.4158%" y="271.50"></text></g><g><title>libsystem_kernel.dylib`madvise (70 samples, 0.09%)</title><rect x="20.2598%" y="245" width="0.0901%" height="15" fill="rgb(213,25,53)" fg:x="15735" fg:w="70"/><text x="20.5098%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (576 samples, 0.74%)</title><rect x="19.6122%" y="293" width="0.7416%" height="15" fill="rgb(252,105,26)" fg:x="15232" fg:w="576"/><text x="19.8622%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (410 samples, 0.53%)</title><rect x="19.8259%" y="277" width="0.5279%" height="15" fill="rgb(220,39,43)" fg:x="15398" fg:w="410"/><text x="20.0759%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (110 samples, 0.14%)</title><rect x="20.2122%" y="261" width="0.1416%" height="15" fill="rgb(229,68,48)" fg:x="15698" fg:w="110"/><text x="20.4622%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (13 samples, 0.02%)</title><rect x="20.3538%" y="293" width="0.0167%" height="15" fill="rgb(252,8,32)" fg:x="15808" fg:w="13"/><text x="20.6038%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (30 samples, 0.04%)</title><rect x="20.5173%" y="277" width="0.0386%" height="15" fill="rgb(223,20,43)" fg:x="15935" fg:w="30"/><text x="20.7673%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (12 samples, 0.02%)</title><rect x="20.6229%" y="261" width="0.0155%" height="15" fill="rgb(229,81,49)" fg:x="16017" fg:w="12"/><text x="20.8729%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (188 samples, 0.24%)</title><rect x="20.5560%" y="277" width="0.2421%" height="15" fill="rgb(236,28,36)" fg:x="15965" fg:w="188"/><text x="20.8060%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (124 samples, 0.16%)</title><rect x="20.6384%" y="261" width="0.1597%" height="15" fill="rgb(249,185,26)" fg:x="16029" fg:w="124"/><text x="20.8884%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (37 samples, 0.05%)</title><rect x="21.1470%" y="261" width="0.0476%" height="15" fill="rgb(249,174,33)" fg:x="16424" fg:w="37"/><text x="21.3970%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (50 samples, 0.06%)</title><rect x="21.4598%" y="245" width="0.0644%" height="15" fill="rgb(233,201,37)" fg:x="16667" fg:w="50"/><text x="21.7098%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="21.5139%" y="229" width="0.0103%" height="15" fill="rgb(221,78,26)" fg:x="16709" fg:w="8"/><text x="21.7639%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (122 samples, 0.16%)</title><rect x="21.5242%" y="245" width="0.1571%" height="15" fill="rgb(250,127,30)" fg:x="16717" fg:w="122"/><text x="21.7742%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (41 samples, 0.05%)</title><rect x="21.6813%" y="245" width="0.0528%" height="15" fill="rgb(230,49,44)" fg:x="16839" fg:w="41"/><text x="21.9313%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (76 samples, 0.10%)</title><rect x="21.7830%" y="229" width="0.0979%" height="15" fill="rgb(229,67,23)" fg:x="16918" fg:w="76"/><text x="22.0330%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (844 samples, 1.09%)</title><rect x="20.7980%" y="277" width="1.0867%" height="15" fill="rgb(249,83,47)" fg:x="16153" fg:w="844"/><text x="21.0480%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (534 samples, 0.69%)</title><rect x="21.1972%" y="261" width="0.6876%" height="15" fill="rgb(215,43,3)" fg:x="16463" fg:w="534"/><text x="21.4472%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (117 samples, 0.15%)</title><rect x="21.7341%" y="245" width="0.1506%" height="15" fill="rgb(238,154,13)" fg:x="16880" fg:w="117"/><text x="21.9841%" y="255.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (91 samples, 0.12%)</title><rect x="21.9028%" y="277" width="0.1172%" height="15" fill="rgb(219,56,2)" fg:x="17011" fg:w="91"/><text x="22.1528%" y="287.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,426 samples, 1.84%)</title><rect x="20.3783%" y="293" width="1.8361%" height="15" fill="rgb(233,0,4)" fg:x="15827" fg:w="1426"/><text x="20.6283%" y="303.50">r..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (151 samples, 0.19%)</title><rect x="22.0199%" y="277" width="0.1944%" height="15" fill="rgb(235,30,7)" fg:x="17102" fg:w="151"/><text x="22.2699%" y="287.50"></text></g><g><title>rust_edit_history`__rdl_dealloc (20 samples, 0.03%)</title><rect x="22.2144%" y="293" width="0.0258%" height="15" fill="rgb(250,79,13)" fg:x="17253" fg:w="20"/><text x="22.4644%" y="303.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (52 samples, 0.07%)</title><rect x="22.2401%" y="293" width="0.0670%" height="15" fill="rgb(211,146,34)" fg:x="17273" fg:w="52"/><text x="22.4901%" y="303.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,440 samples, 3.14%)</title><rect x="19.2877%" y="309" width="3.1417%" height="15" fill="rgb(228,22,38)" fg:x="14980" fg:w="2440"/><text x="19.5377%" y="319.50">rus..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (95 samples, 0.12%)</title><rect x="22.3071%" y="293" width="0.1223%" height="15" fill="rgb(235,168,5)" fg:x="17325" fg:w="95"/><text x="22.5571%" y="303.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (115 samples, 0.15%)</title><rect x="22.4332%" y="309" width="0.1481%" height="15" fill="rgb(221,155,16)" fg:x="17423" fg:w="115"/><text x="22.6832%" y="319.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (3,972 samples, 5.11%)</title><rect x="17.6139%" y="325" width="5.1142%" height="15" fill="rgb(215,215,53)" fg:x="13680" fg:w="3972"/><text x="17.8639%" y="335.50">rust_e..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (114 samples, 0.15%)</title><rect x="22.5813%" y="309" width="0.1468%" height="15" fill="rgb(223,4,10)" fg:x="17538" fg:w="114"/><text x="22.8313%" y="319.50"></text></g><g><title>rust_edit_history`__rdl_dealloc (11 samples, 0.01%)</title><rect x="22.7281%" y="325" width="0.0142%" height="15" fill="rgb(234,103,6)" fg:x="17652" fg:w="11"/><text x="22.9781%" y="335.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (10,007 samples, 12.88%)</title><rect x="9.8666%" y="373" width="12.8847%" height="15" fill="rgb(227,97,0)" fg:x="7663" fg:w="10007"/><text x="10.1166%" y="383.50">rust_edit_history`&lt;..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,310 samples, 5.55%)</title><rect x="17.2019%" y="357" width="5.5494%" height="15" fill="rgb(234,150,53)" fg:x="13360" fg:w="4310"/><text x="17.4519%" y="367.50">rust_ed..</text></g><g><title>rust_edit_history`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,090 samples, 5.27%)</title><rect x="17.4851%" y="341" width="5.2661%" height="15" fill="rgb(228,201,54)" fg:x="13580" fg:w="4090"/><text x="17.7351%" y="351.50">rust_e..</text></g><g><title>rust_edit_history`__rdl_dealloc (28 samples, 0.04%)</title><rect x="22.7538%" y="373" width="0.0361%" height="15" fill="rgb(222,22,37)" fg:x="17672" fg:w="28"/><text x="23.0038%" y="383.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (247 samples, 0.32%)</title><rect x="22.7899%" y="373" width="0.3180%" height="15" fill="rgb(237,53,32)" fg:x="17700" fg:w="247"/><text x="23.0399%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free (36 samples, 0.05%)</title><rect x="23.5508%" y="341" width="0.0464%" height="15" fill="rgb(233,25,53)" fg:x="18291" fg:w="36"/><text x="23.8008%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (18 samples, 0.02%)</title><rect x="23.5740%" y="325" width="0.0232%" height="15" fill="rgb(210,40,34)" fg:x="18309" fg:w="18"/><text x="23.8240%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (17 samples, 0.02%)</title><rect x="23.6886%" y="309" width="0.0219%" height="15" fill="rgb(241,220,44)" fg:x="18398" fg:w="17"/><text x="23.9386%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (91 samples, 0.12%)</title><rect x="23.5972%" y="341" width="0.1172%" height="15" fill="rgb(235,28,35)" fg:x="18327" fg:w="91"/><text x="23.8472%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (50 samples, 0.06%)</title><rect x="23.6500%" y="325" width="0.0644%" height="15" fill="rgb(210,56,17)" fg:x="18368" fg:w="50"/><text x="23.9000%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (13 samples, 0.02%)</title><rect x="23.7826%" y="325" width="0.0167%" height="15" fill="rgb(224,130,29)" fg:x="18471" fg:w="13"/><text x="24.0326%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="23.8315%" y="309" width="0.0103%" height="15" fill="rgb(235,212,8)" fg:x="18509" fg:w="8"/><text x="24.0815%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free (80 samples, 0.10%)</title><rect x="23.7993%" y="325" width="0.1030%" height="15" fill="rgb(223,33,50)" fg:x="18484" fg:w="80"/><text x="24.0493%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (47 samples, 0.06%)</title><rect x="23.8418%" y="309" width="0.0605%" height="15" fill="rgb(219,149,13)" fg:x="18517" fg:w="47"/><text x="24.0918%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (13 samples, 0.02%)</title><rect x="24.0813%" y="309" width="0.0167%" height="15" fill="rgb(250,156,29)" fg:x="18703" fg:w="13"/><text x="24.3313%" y="319.50"></text></g><g><title>libsystem_kernel.dylib`madvise (143 samples, 0.18%)</title><rect x="24.2745%" y="293" width="0.1841%" height="15" fill="rgb(216,193,19)" fg:x="18853" fg:w="143"/><text x="24.5245%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (27 samples, 0.03%)</title><rect x="24.4663%" y="293" width="0.0348%" height="15" fill="rgb(216,135,14)" fg:x="19002" fg:w="27"/><text x="24.7163%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (91 samples, 0.12%)</title><rect x="24.5024%" y="293" width="0.1172%" height="15" fill="rgb(241,47,5)" fg:x="19030" fg:w="91"/><text x="24.7524%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (23 samples, 0.03%)</title><rect x="24.6195%" y="293" width="0.0296%" height="15" fill="rgb(233,42,35)" fg:x="19121" fg:w="23"/><text x="24.8695%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (53 samples, 0.07%)</title><rect x="24.6839%" y="277" width="0.0682%" height="15" fill="rgb(231,13,6)" fg:x="19171" fg:w="53"/><text x="24.9339%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (662 samples, 0.85%)</title><rect x="23.9024%" y="325" width="0.8524%" height="15" fill="rgb(207,181,40)" fg:x="18564" fg:w="662"/><text x="24.1524%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (510 samples, 0.66%)</title><rect x="24.0981%" y="309" width="0.6567%" height="15" fill="rgb(254,173,49)" fg:x="18716" fg:w="510"/><text x="24.3481%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (82 samples, 0.11%)</title><rect x="24.6491%" y="293" width="0.1056%" height="15" fill="rgb(221,1,38)" fg:x="19144" fg:w="82"/><text x="24.8991%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (11 samples, 0.01%)</title><rect x="24.8551%" y="293" width="0.0142%" height="15" fill="rgb(206,124,46)" fg:x="19304" fg:w="11"/><text x="25.1051%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`free (95 samples, 0.12%)</title><rect x="24.8204%" y="309" width="0.1223%" height="15" fill="rgb(249,21,11)" fg:x="19277" fg:w="95"/><text x="25.0704%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (57 samples, 0.07%)</title><rect x="24.8693%" y="293" width="0.0734%" height="15" fill="rgb(222,201,40)" fg:x="19315" fg:w="57"/><text x="25.1193%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="25.0895%" y="293" width="0.0116%" height="15" fill="rgb(235,61,29)" fg:x="19486" fg:w="9"/><text x="25.3395%" y="303.50"></text></g><g><title>libsystem_kernel.dylib`madvise (71 samples, 0.09%)</title><rect x="25.2697%" y="277" width="0.0914%" height="15" fill="rgb(219,207,3)" fg:x="19626" fg:w="71"/><text x="25.5197%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (36 samples, 0.05%)</title><rect x="25.3663%" y="277" width="0.0464%" height="15" fill="rgb(222,56,46)" fg:x="19701" fg:w="36"/><text x="25.6163%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (50 samples, 0.06%)</title><rect x="25.4140%" y="277" width="0.0644%" height="15" fill="rgb(239,76,54)" fg:x="19738" fg:w="50"/><text x="25.6640%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (30 samples, 0.04%)</title><rect x="25.4783%" y="277" width="0.0386%" height="15" fill="rgb(231,124,27)" fg:x="19788" fg:w="30"/><text x="25.7283%" y="287.50"></text></g><g><title>libsystem_kernel.dylib`madvise (36 samples, 0.05%)</title><rect x="25.5491%" y="261" width="0.0464%" height="15" fill="rgb(249,195,6)" fg:x="19843" fg:w="36"/><text x="25.7991%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (508 samples, 0.65%)</title><rect x="24.9427%" y="309" width="0.6541%" height="15" fill="rgb(237,174,47)" fg:x="19372" fg:w="508"/><text x="25.1927%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (384 samples, 0.49%)</title><rect x="25.1024%" y="293" width="0.4944%" height="15" fill="rgb(206,201,31)" fg:x="19496" fg:w="384"/><text x="25.3524%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (62 samples, 0.08%)</title><rect x="25.5170%" y="277" width="0.0798%" height="15" fill="rgb(231,57,52)" fg:x="19818" fg:w="62"/><text x="25.7670%" y="287.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (85 samples, 0.11%)</title><rect x="25.6097%" y="309" width="0.1094%" height="15" fill="rgb(248,177,22)" fg:x="19890" fg:w="85"/><text x="25.8597%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (8 samples, 0.01%)</title><rect x="26.0049%" y="277" width="0.0103%" height="15" fill="rgb(215,211,37)" fg:x="20197" fg:w="8"/><text x="26.2549%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (20 samples, 0.03%)</title><rect x="26.0152%" y="277" width="0.0258%" height="15" fill="rgb(241,128,51)" fg:x="20205" fg:w="20"/><text x="26.2652%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (29 samples, 0.04%)</title><rect x="26.1517%" y="261" width="0.0373%" height="15" fill="rgb(227,165,31)" fg:x="20311" fg:w="29"/><text x="26.4017%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (20 samples, 0.03%)</title><rect x="26.3075%" y="245" width="0.0258%" height="15" fill="rgb(228,167,24)" fg:x="20432" fg:w="20"/><text x="26.5575%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (269 samples, 0.35%)</title><rect x="26.1891%" y="261" width="0.3464%" height="15" fill="rgb(228,143,12)" fg:x="20340" fg:w="269"/><text x="26.4391%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (157 samples, 0.20%)</title><rect x="26.3333%" y="245" width="0.2021%" height="15" fill="rgb(249,149,8)" fg:x="20452" fg:w="157"/><text x="26.5833%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (35 samples, 0.05%)</title><rect x="26.9964%" y="245" width="0.0451%" height="15" fill="rgb(243,35,44)" fg:x="20967" fg:w="35"/><text x="27.2464%" y="255.50"></text></g><g><title>libsystem_kernel.dylib`madvise (8 samples, 0.01%)</title><rect x="27.5758%" y="229" width="0.0103%" height="15" fill="rgb(246,89,9)" fg:x="21417" fg:w="8"/><text x="27.8258%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (66 samples, 0.08%)</title><rect x="27.5874%" y="229" width="0.0850%" height="15" fill="rgb(233,213,13)" fg:x="21426" fg:w="66"/><text x="27.8374%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (14 samples, 0.02%)</title><rect x="27.6543%" y="213" width="0.0180%" height="15" fill="rgb(233,141,41)" fg:x="21478" fg:w="14"/><text x="27.9043%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (163 samples, 0.21%)</title><rect x="27.6723%" y="229" width="0.2099%" height="15" fill="rgb(239,167,4)" fg:x="21492" fg:w="163"/><text x="27.9223%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (64 samples, 0.08%)</title><rect x="27.8822%" y="229" width="0.0824%" height="15" fill="rgb(209,217,16)" fg:x="21655" fg:w="64"/><text x="28.1322%" y="239.50"></text></g><g><title>libsystem_kernel.dylib`madvise (113 samples, 0.15%)</title><rect x="28.0354%" y="213" width="0.1455%" height="15" fill="rgb(219,88,35)" fg:x="21774" fg:w="113"/><text x="28.2854%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (1,279 samples, 1.65%)</title><rect x="26.5354%" y="261" width="1.6468%" height="15" fill="rgb(220,193,23)" fg:x="20609" fg:w="1279"/><text x="26.7854%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (881 samples, 1.13%)</title><rect x="27.0479%" y="245" width="1.1343%" height="15" fill="rgb(230,90,52)" fg:x="21007" fg:w="881"/><text x="27.2979%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (169 samples, 0.22%)</title><rect x="27.9646%" y="229" width="0.2176%" height="15" fill="rgb(252,106,19)" fg:x="21719" fg:w="169"/><text x="28.2146%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (15 samples, 0.02%)</title><rect x="28.1822%" y="261" width="0.0193%" height="15" fill="rgb(206,74,20)" fg:x="21888" fg:w="15"/><text x="28.4322%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (13 samples, 0.02%)</title><rect x="28.2093%" y="261" width="0.0167%" height="15" fill="rgb(230,138,44)" fg:x="21909" fg:w="13"/><text x="28.4593%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (29 samples, 0.04%)</title><rect x="28.3934%" y="245" width="0.0373%" height="15" fill="rgb(235,182,43)" fg:x="22052" fg:w="29"/><text x="28.6434%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (13 samples, 0.02%)</title><rect x="28.5002%" y="229" width="0.0167%" height="15" fill="rgb(242,16,51)" fg:x="22135" fg:w="13"/><text x="28.7502%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (180 samples, 0.23%)</title><rect x="28.4307%" y="245" width="0.2318%" height="15" fill="rgb(248,9,4)" fg:x="22081" fg:w="180"/><text x="28.6807%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (113 samples, 0.15%)</title><rect x="28.5170%" y="229" width="0.1455%" height="15" fill="rgb(210,31,22)" fg:x="22148" fg:w="113"/><text x="28.7670%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (12 samples, 0.02%)</title><rect x="28.9689%" y="229" width="0.0155%" height="15" fill="rgb(239,54,39)" fg:x="22499" fg:w="12"/><text x="29.2189%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (81 samples, 0.10%)</title><rect x="29.2998%" y="213" width="0.1043%" height="15" fill="rgb(230,99,41)" fg:x="22756" fg:w="81"/><text x="29.5498%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (9 samples, 0.01%)</title><rect x="29.3925%" y="197" width="0.0116%" height="15" fill="rgb(253,106,12)" fg:x="22828" fg:w="9"/><text x="29.6425%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (62 samples, 0.08%)</title><rect x="29.4054%" y="213" width="0.0798%" height="15" fill="rgb(213,46,41)" fg:x="22838" fg:w="62"/><text x="29.6554%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (57 samples, 0.07%)</title><rect x="29.4852%" y="213" width="0.0734%" height="15" fill="rgb(215,133,35)" fg:x="22900" fg:w="57"/><text x="29.7352%" y="223.50"></text></g><g><title>libsystem_kernel.dylib`madvise (91 samples, 0.12%)</title><rect x="29.6191%" y="197" width="0.1172%" height="15" fill="rgb(213,28,5)" fg:x="23004" fg:w="91"/><text x="29.8691%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (839 samples, 1.08%)</title><rect x="28.6625%" y="245" width="1.0803%" height="15" fill="rgb(215,77,49)" fg:x="22261" fg:w="839"/><text x="28.9125%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (587 samples, 0.76%)</title><rect x="28.9869%" y="229" width="0.7558%" height="15" fill="rgb(248,100,22)" fg:x="22513" fg:w="587"/><text x="29.2369%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (143 samples, 0.18%)</title><rect x="29.5586%" y="213" width="0.1841%" height="15" fill="rgb(208,67,9)" fg:x="22957" fg:w="143"/><text x="29.8086%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_free_definite_size (8 samples, 0.01%)</title><rect x="29.7427%" y="245" width="0.0103%" height="15" fill="rgb(219,133,21)" fg:x="23100" fg:w="8"/><text x="29.9927%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (8 samples, 0.01%)</title><rect x="29.7530%" y="245" width="0.0103%" height="15" fill="rgb(246,46,29)" fg:x="23108" fg:w="8"/><text x="30.0030%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (8 samples, 0.01%)</title><rect x="29.7633%" y="245" width="0.0103%" height="15" fill="rgb(246,185,52)" fg:x="23116" fg:w="8"/><text x="30.0133%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_free_definite_size (19 samples, 0.02%)</title><rect x="29.8857%" y="229" width="0.0245%" height="15" fill="rgb(252,136,11)" fg:x="23211" fg:w="19"/><text x="30.1357%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (9 samples, 0.01%)</title><rect x="29.9591%" y="213" width="0.0116%" height="15" fill="rgb(219,138,53)" fg:x="23268" fg:w="9"/><text x="30.2091%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (142 samples, 0.18%)</title><rect x="29.9101%" y="229" width="0.1828%" height="15" fill="rgb(211,51,23)" fg:x="23230" fg:w="142"/><text x="30.1601%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (95 samples, 0.12%)</title><rect x="29.9706%" y="213" width="0.1223%" height="15" fill="rgb(247,221,28)" fg:x="23277" fg:w="95"/><text x="30.2206%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (26 samples, 0.03%)</title><rect x="30.3608%" y="213" width="0.0335%" height="15" fill="rgb(251,222,45)" fg:x="23580" fg:w="26"/><text x="30.6108%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (50 samples, 0.06%)</title><rect x="30.6286%" y="197" width="0.0644%" height="15" fill="rgb(217,162,53)" fg:x="23788" fg:w="50"/><text x="30.8786%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (72 samples, 0.09%)</title><rect x="30.6943%" y="197" width="0.0927%" height="15" fill="rgb(229,93,14)" fg:x="23839" fg:w="72"/><text x="30.9443%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (26 samples, 0.03%)</title><rect x="30.7870%" y="197" width="0.0335%" height="15" fill="rgb(209,67,49)" fg:x="23911" fg:w="26"/><text x="31.0370%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (662 samples, 0.85%)</title><rect x="30.0930%" y="229" width="0.8524%" height="15" fill="rgb(213,87,29)" fg:x="23372" fg:w="662"/><text x="30.3430%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (428 samples, 0.55%)</title><rect x="30.3943%" y="213" width="0.5511%" height="15" fill="rgb(205,151,52)" fg:x="23606" fg:w="428"/><text x="30.6443%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_scan_madvise_free (97 samples, 0.12%)</title><rect x="30.8204%" y="197" width="0.1249%" height="15" fill="rgb(253,215,39)" fg:x="23937" fg:w="97"/><text x="31.0704%" y="207.50"></text></g><g><title>libsystem_kernel.dylib`madvise (59 samples, 0.08%)</title><rect x="30.8694%" y="181" width="0.0760%" height="15" fill="rgb(221,220,41)" fg:x="23975" fg:w="59"/><text x="31.1194%" y="191.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (56 samples, 0.07%)</title><rect x="30.9543%" y="229" width="0.0721%" height="15" fill="rgb(218,133,21)" fg:x="24041" fg:w="56"/><text x="31.2043%" y="239.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1,066 samples, 1.37%)</title><rect x="29.7736%" y="245" width="1.3725%" height="15" fill="rgb(221,193,43)" fg:x="23124" fg:w="1066"/><text x="30.0236%" y="255.50"></text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (93 samples, 0.12%)</title><rect x="31.0264%" y="229" width="0.1197%" height="15" fill="rgb(240,128,52)" fg:x="24097" fg:w="93"/><text x="31.2764%" y="239.50"></text></g><g><title>rust_edit_history`__rdl_dealloc (9 samples, 0.01%)</title><rect x="31.1462%" y="245" width="0.0116%" height="15" fill="rgb(253,114,12)" fg:x="24190" fg:w="9"/><text x="31.3962%" y="255.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (64 samples, 0.08%)</title><rect x="31.1604%" y="245" width="0.0824%" height="15" fill="rgb(215,223,47)" fg:x="24201" fg:w="64"/><text x="31.4104%" y="255.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (2,447 samples, 3.15%)</title><rect x="28.2260%" y="261" width="3.1507%" height="15" fill="rgb(248,225,23)" fg:x="21922" fg:w="2447"/><text x="28.4760%" y="271.50">rus..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (104 samples, 0.13%)</title><rect x="31.2428%" y="245" width="0.1339%" height="15" fill="rgb(250,108,0)" fg:x="24265" fg:w="104"/><text x="31.4928%" y="255.50"></text></g><g><title>rust_edit_history`__rdl_dealloc (8 samples, 0.01%)</title><rect x="31.3767%" y="261" width="0.0103%" height="15" fill="rgb(228,208,7)" fg:x="24369" fg:w="8"/><text x="31.6267%" y="271.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (126 samples, 0.16%)</title><rect x="31.3883%" y="261" width="0.1622%" height="15" fill="rgb(244,45,10)" fg:x="24378" fg:w="126"/><text x="31.6383%" y="271.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (4,425 samples, 5.70%)</title><rect x="26.0410%" y="277" width="5.6975%" height="15" fill="rgb(207,125,25)" fg:x="20225" fg:w="4425"/><text x="26.2910%" y="287.50">rust_ed..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (146 samples, 0.19%)</title><rect x="31.5505%" y="261" width="0.1880%" height="15" fill="rgb(210,195,18)" fg:x="24504" fg:w="146"/><text x="31.8005%" y="271.50"></text></g><g><title>rust_edit_history`__rdl_dealloc (8 samples, 0.01%)</title><rect x="31.7385%" y="277" width="0.0103%" height="15" fill="rgb(249,80,12)" fg:x="24650" fg:w="8"/><text x="31.9885%" y="287.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (5,429 samples, 6.99%)</title><rect x="24.7650%" y="325" width="6.9902%" height="15" fill="rgb(221,65,9)" fg:x="19234" fg:w="5429"/><text x="25.0150%" y="335.50">rust_edit..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (4,688 samples, 6.04%)</title><rect x="25.7191%" y="309" width="6.0361%" height="15" fill="rgb(235,49,36)" fg:x="19975" fg:w="4688"/><text x="25.9691%" y="319.50">rust_edi..</text></g><g><title>rust_edit_history`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,601 samples, 5.92%)</title><rect x="25.8311%" y="293" width="5.9241%" height="15" fill="rgb(225,32,20)" fg:x="20062" fg:w="4601"/><text x="26.0811%" y="303.50">rust_edi..</text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (58 samples, 0.07%)</title><rect x="31.7642%" y="325" width="0.0747%" height="15" fill="rgb(215,141,46)" fg:x="24670" fg:w="58"/><text x="32.0142%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.04%)</title><rect x="31.9432%" y="293" width="0.0438%" height="15" fill="rgb(250,160,47)" fg:x="24809" fg:w="34"/><text x="32.1932%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (13 samples, 0.02%)</title><rect x="31.9702%" y="277" width="0.0167%" height="15" fill="rgb(216,222,40)" fg:x="24830" fg:w="13"/><text x="32.2202%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (22 samples, 0.03%)</title><rect x="32.0874%" y="261" width="0.0283%" height="15" fill="rgb(234,217,39)" fg:x="24921" fg:w="22"/><text x="32.3374%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (102 samples, 0.13%)</title><rect x="31.9870%" y="293" width="0.1313%" height="15" fill="rgb(207,178,40)" fg:x="24843" fg:w="102"/><text x="32.2370%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (61 samples, 0.08%)</title><rect x="32.0398%" y="277" width="0.0785%" height="15" fill="rgb(221,136,13)" fg:x="24884" fg:w="61"/><text x="32.2898%" y="287.50"></text></g><g><title>rust_edit_history`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (169 samples, 0.22%)</title><rect x="31.9046%" y="309" width="0.2176%" height="15" fill="rgb(249,199,10)" fg:x="24779" fg:w="169"/><text x="32.1546%" y="319.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (6,524 samples, 8.40%)</title><rect x="23.7247%" y="341" width="8.4001%" height="15" fill="rgb(249,222,13)" fg:x="18426" fg:w="6524"/><text x="23.9747%" y="351.50">rust_edit_hi..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (222 samples, 0.29%)</title><rect x="31.8389%" y="325" width="0.2858%" height="15" fill="rgb(244,185,38)" fg:x="24728" fg:w="222"/><text x="32.0889%" y="335.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (20,557 samples, 26.47%)</title><rect x="5.6679%" y="389" width="26.4685%" height="15" fill="rgb(236,202,9)" fg:x="4402" fg:w="20557"/><text x="5.9179%" y="399.50">rust_edit_history`&lt;alloc::collections::btr..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (7,012 samples, 9.03%)</title><rect x="23.1079%" y="373" width="9.0284%" height="15" fill="rgb(250,229,37)" fg:x="17947" fg:w="7012"/><text x="23.3579%" y="383.50">rust_edit_his..</text></g><g><title>rust_edit_history`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,791 samples, 8.74%)</title><rect x="23.3925%" y="357" width="8.7439%" height="15" fill="rgb(206,174,23)" fg:x="18168" fg:w="6791"/><text x="23.6425%" y="367.50">rust_edit_hi..</text></g><g><title>rust_edit_history`__rdl_dealloc (27 samples, 0.03%)</title><rect x="32.1389%" y="389" width="0.0348%" height="15" fill="rgb(211,33,43)" fg:x="24961" fg:w="27"/><text x="32.3889%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24,889 samples, 32.05%)</title><rect x="0.1494%" y="437" width="32.0462%" height="15" fill="rgb(245,58,50)" fg:x="116" fg:w="24889"/><text x="0.3994%" y="447.50">rust_edit_history`&lt;alloc::collections::btree::map::B..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (20,801 samples, 26.78%)</title><rect x="5.4129%" y="421" width="26.7826%" height="15" fill="rgb(244,68,36)" fg:x="4204" fg:w="20801"/><text x="5.6629%" y="431.50">rust_edit_history`core::mem::maybe_uninit::..</text></g><g><title>rust_edit_history`&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,745 samples, 26.71%)</title><rect x="5.4850%" y="405" width="26.7105%" height="15" fill="rgb(232,229,15)" fg:x="4260" fg:w="20745"/><text x="5.7350%" y="415.50">rust_edit_history`&lt;alloc::vec::Vec&lt;T,A&gt; as ..</text></g><g><title>rust_edit_history`core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init_drop (8 samples, 0.01%)</title><rect x="32.1853%" y="389" width="0.0103%" height="15" fill="rgb(254,30,23)" fg:x="24997" fg:w="8"/><text x="32.4353%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (24,943 samples, 32.12%)</title><rect x="0.1030%" y="453" width="32.1157%" height="15" fill="rgb(235,160,14)" fg:x="80" fg:w="24943"/><text x="0.3530%" y="463.50">rust_edit_history`&lt;alloc::collections::btree::map::B..</text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.02%)</title><rect x="32.2368%" y="437" width="0.0155%" height="15" fill="rgb(212,155,44)" fg:x="25037" fg:w="12"/><text x="32.4868%" y="447.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.01%)</title><rect x="32.2586%" y="405" width="0.0116%" height="15" fill="rgb(226,2,50)" fg:x="25054" fg:w="9"/><text x="32.5086%" y="415.50"></text></g><g><title>rust_edit_history`alloc::vec::Vec&lt;T,A&gt;::truncate (37 samples, 0.05%)</title><rect x="32.2252%" y="453" width="0.0476%" height="15" fill="rgb(234,177,6)" fg:x="25028" fg:w="37"/><text x="32.4752%" y="463.50"></text></g><g><title>rust_edit_history`core::ptr::drop_in_place&lt;serde_json::value::Value&gt; (14 samples, 0.02%)</title><rect x="32.2548%" y="437" width="0.0180%" height="15" fill="rgb(217,24,9)" fg:x="25051" fg:w="14"/><text x="32.5048%" y="447.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.02%)</title><rect x="32.2561%" y="421" width="0.0167%" height="15" fill="rgb(220,13,46)" fg:x="25052" fg:w="13"/><text x="32.5061%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (70 samples, 0.09%)</title><rect x="32.3398%" y="389" width="0.0901%" height="15" fill="rgb(239,221,27)" fg:x="25117" fg:w="70"/><text x="32.5898%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (202 samples, 0.26%)</title><rect x="32.9076%" y="373" width="0.2601%" height="15" fill="rgb(222,198,25)" fg:x="25558" fg:w="202"/><text x="33.1576%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (140 samples, 0.18%)</title><rect x="33.7123%" y="357" width="0.1803%" height="15" fill="rgb(211,99,13)" fg:x="26183" fg:w="140"/><text x="33.9623%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (130 samples, 0.17%)</title><rect x="34.3767%" y="341" width="0.1674%" height="15" fill="rgb(232,111,31)" fg:x="26699" fg:w="130"/><text x="34.6267%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (161 samples, 0.21%)</title><rect x="35.0707%" y="325" width="0.2073%" height="15" fill="rgb(245,82,37)" fg:x="27238" fg:w="161"/><text x="35.3207%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (93 samples, 0.12%)</title><rect x="35.6488%" y="309" width="0.1197%" height="15" fill="rgb(227,149,46)" fg:x="27687" fg:w="93"/><text x="35.8988%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (26 samples, 0.03%)</title><rect x="35.9115%" y="293" width="0.0335%" height="15" fill="rgb(218,36,50)" fg:x="27891" fg:w="26"/><text x="36.1615%" y="303.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (146 samples, 0.19%)</title><rect x="35.7685%" y="309" width="0.1880%" height="15" fill="rgb(226,80,48)" fg:x="27780" fg:w="146"/><text x="36.0185%" y="319.50"></text></g><g><title>rust_edit_history`&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (9 samples, 0.01%)</title><rect x="35.9449%" y="293" width="0.0116%" height="15" fill="rgb(238,224,15)" fg:x="27917" fg:w="9"/><text x="36.1949%" y="303.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (535 samples, 0.69%)</title><rect x="35.2780%" y="325" width="0.6888%" height="15" fill="rgb(241,136,10)" fg:x="27399" fg:w="535"/><text x="35.5280%" y="335.50"></text></g><g><title>rust_edit_history`&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="35.9565%" y="309" width="0.0103%" height="15" fill="rgb(208,32,45)" fg:x="27926" fg:w="8"/><text x="36.2065%" y="319.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (1,111 samples, 1.43%)</title><rect x="34.5441%" y="341" width="1.4305%" height="15" fill="rgb(207,135,9)" fg:x="26829" fg:w="1111"/><text x="34.7941%" y="351.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (74 samples, 0.10%)</title><rect x="35.9746%" y="341" width="0.0953%" height="15" fill="rgb(206,86,44)" fg:x="27940" fg:w="74"/><text x="36.2246%" y="351.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (1,695 samples, 2.18%)</title><rect x="33.8926%" y="357" width="2.1824%" height="15" fill="rgb(245,177,15)" fg:x="26323" fg:w="1695"/><text x="34.1426%" y="367.50">r..</text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (70 samples, 0.09%)</title><rect x="36.0750%" y="357" width="0.0901%" height="15" fill="rgb(206,64,50)" fg:x="28018" fg:w="70"/><text x="36.3250%" y="367.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (2,329 samples, 3.00%)</title><rect x="33.1677%" y="373" width="2.9987%" height="15" fill="rgb(234,36,40)" fg:x="25760" fg:w="2329"/><text x="33.4177%" y="383.50">rus..</text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (2,977 samples, 3.83%)</title><rect x="32.4299%" y="389" width="3.8331%" height="15" fill="rgb(213,64,8)" fg:x="25187" fg:w="2977"/><text x="32.6799%" y="399.50">rust..</text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (75 samples, 0.10%)</title><rect x="36.1664%" y="373" width="0.0966%" height="15" fill="rgb(210,75,36)" fg:x="28089" fg:w="75"/><text x="36.4164%" y="383.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (45 samples, 0.06%)</title><rect x="36.2630%" y="389" width="0.0579%" height="15" fill="rgb(229,88,21)" fg:x="28164" fg:w="45"/><text x="36.5130%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (3,136 samples, 4.04%)</title><rect x="32.2883%" y="421" width="4.0378%" height="15" fill="rgb(252,204,47)" fg:x="25077" fg:w="3136"/><text x="32.5383%" y="431.50">rust..</text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (3,132 samples, 4.03%)</title><rect x="32.2934%" y="405" width="4.0327%" height="15" fill="rgb(208,77,27)" fg:x="25081" fg:w="3132"/><text x="32.5434%" y="415.50">rust..</text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.02%)</title><rect x="36.3261%" y="421" width="0.0193%" height="15" fill="rgb(221,76,26)" fg:x="28213" fg:w="15"/><text x="36.5761%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.01%)</title><rect x="36.3325%" y="405" width="0.0129%" height="15" fill="rgb(225,139,18)" fg:x="28218" fg:w="10"/><text x="36.5825%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`malloc (8 samples, 0.01%)</title><rect x="36.3570%" y="389" width="0.0103%" height="15" fill="rgb(230,137,11)" fg:x="28237" fg:w="8"/><text x="36.6070%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (8 samples, 0.01%)</title><rect x="36.3570%" y="373" width="0.0103%" height="15" fill="rgb(212,28,1)" fg:x="28237" fg:w="8"/><text x="36.6070%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (8 samples, 0.01%)</title><rect x="36.3570%" y="357" width="0.0103%" height="15" fill="rgb(248,164,17)" fg:x="28237" fg:w="8"/><text x="36.6070%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (8 samples, 0.01%)</title><rect x="36.3570%" y="341" width="0.0103%" height="15" fill="rgb(222,171,42)" fg:x="28237" fg:w="8"/><text x="36.6070%" y="351.50"></text></g><g><title>rust_edit_history`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.02%)</title><rect x="36.3518%" y="421" width="0.0180%" height="15" fill="rgb(243,84,45)" fg:x="28233" fg:w="14"/><text x="36.6018%" y="431.50"></text></g><g><title>rust_edit_history`&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.01%)</title><rect x="36.3570%" y="405" width="0.0129%" height="15" fill="rgb(252,49,23)" fg:x="28237" fg:w="10"/><text x="36.6070%" y="415.50"></text></g><g><title>rust_edit_history`&lt;json_patch::diff::PatchDiffer as treediff::traitdef::Delegate&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt;::push (10 samples, 0.01%)</title><rect x="36.3750%" y="421" width="0.0129%" height="15" fill="rgb(215,19,7)" fg:x="28251" fg:w="10"/><text x="36.6250%" y="431.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (8 samples, 0.01%)</title><rect x="36.3892%" y="421" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="28262" fg:w="8"/><text x="36.6392%" y="431.50"></text></g><g><title>libsystem_malloc.dylib`free (16 samples, 0.02%)</title><rect x="36.4329%" y="405" width="0.0206%" height="15" fill="rgb(210,199,37)" fg:x="28296" fg:w="16"/><text x="36.6829%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (54 samples, 0.07%)</title><rect x="36.4535%" y="405" width="0.0695%" height="15" fill="rgb(244,192,49)" fg:x="28312" fg:w="54"/><text x="36.7035%" y="415.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (25 samples, 0.03%)</title><rect x="36.4909%" y="389" width="0.0322%" height="15" fill="rgb(226,211,11)" fg:x="28341" fg:w="25"/><text x="36.7409%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (8 samples, 0.01%)</title><rect x="36.5128%" y="373" width="0.0103%" height="15" fill="rgb(236,162,54)" fg:x="28358" fg:w="8"/><text x="36.7628%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (48 samples, 0.06%)</title><rect x="36.5295%" y="405" width="0.0618%" height="15" fill="rgb(220,229,9)" fg:x="28371" fg:w="48"/><text x="36.7795%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (162 samples, 0.21%)</title><rect x="36.7677%" y="389" width="0.2086%" height="15" fill="rgb(250,87,22)" fg:x="28556" fg:w="162"/><text x="37.0177%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (310 samples, 0.40%)</title><rect x="37.8737%" y="373" width="0.3991%" height="15" fill="rgb(239,43,17)" fg:x="29415" fg:w="310"/><text x="38.1237%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (128 samples, 0.16%)</title><rect x="38.8111%" y="357" width="0.1648%" height="15" fill="rgb(231,177,25)" fg:x="30143" fg:w="128"/><text x="39.0611%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (125 samples, 0.16%)</title><rect x="39.4716%" y="341" width="0.1609%" height="15" fill="rgb(219,179,1)" fg:x="30656" fg:w="125"/><text x="39.7216%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (137 samples, 0.18%)</title><rect x="40.1064%" y="325" width="0.1764%" height="15" fill="rgb(238,219,53)" fg:x="31149" fg:w="137"/><text x="40.3564%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (86 samples, 0.11%)</title><rect x="40.6304%" y="309" width="0.1107%" height="15" fill="rgb(232,167,36)" fg:x="31556" fg:w="86"/><text x="40.8804%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (19 samples, 0.02%)</title><rect x="40.8866%" y="293" width="0.0245%" height="15" fill="rgb(244,19,51)" fg:x="31755" fg:w="19"/><text x="41.1366%" y="303.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (140 samples, 0.18%)</title><rect x="40.7411%" y="309" width="0.1803%" height="15" fill="rgb(224,6,22)" fg:x="31642" fg:w="140"/><text x="40.9911%" y="319.50"></text></g><g><title>rust_edit_history`&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (8 samples, 0.01%)</title><rect x="40.9111%" y="293" width="0.0103%" height="15" fill="rgb(224,145,5)" fg:x="31774" fg:w="8"/><text x="41.1611%" y="303.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (502 samples, 0.65%)</title><rect x="40.2827%" y="325" width="0.6464%" height="15" fill="rgb(234,130,49)" fg:x="31286" fg:w="502"/><text x="40.5327%" y="335.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (1,010 samples, 1.30%)</title><rect x="39.6325%" y="341" width="1.3004%" height="15" fill="rgb(254,6,2)" fg:x="30781" fg:w="1010"/><text x="39.8825%" y="351.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (84 samples, 0.11%)</title><rect x="40.9330%" y="341" width="0.1082%" height="15" fill="rgb(208,96,46)" fg:x="31791" fg:w="84"/><text x="41.1830%" y="351.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (1,605 samples, 2.07%)</title><rect x="38.9759%" y="357" width="2.0665%" height="15" fill="rgb(239,3,39)" fg:x="30271" fg:w="1605"/><text x="39.2259%" y="367.50">r..</text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (2,232 samples, 2.87%)</title><rect x="38.2729%" y="373" width="2.8738%" height="15" fill="rgb(233,210,1)" fg:x="29725" fg:w="2232"/><text x="38.5229%" y="383.50">ru..</text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (81 samples, 0.10%)</title><rect x="41.0424%" y="357" width="0.1043%" height="15" fill="rgb(244,137,37)" fg:x="31876" fg:w="81"/><text x="41.2924%" y="367.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (94 samples, 0.12%)</title><rect x="41.1467%" y="373" width="0.1210%" height="15" fill="rgb(240,136,2)" fg:x="31957" fg:w="94"/><text x="41.3967%" y="383.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (3,334 samples, 4.29%)</title><rect x="36.9763%" y="389" width="4.2927%" height="15" fill="rgb(239,18,37)" fg:x="28718" fg:w="3334"/><text x="37.2263%" y="399.50">rust_..</text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (31 samples, 0.04%)</title><rect x="41.2690%" y="389" width="0.0399%" height="15" fill="rgb(218,185,22)" fg:x="32052" fg:w="31"/><text x="41.5190%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (3,662 samples, 4.72%)</title><rect x="36.5977%" y="405" width="4.7151%" height="15" fill="rgb(225,218,4)" fg:x="28424" fg:w="3662"/><text x="36.8477%" y="415.50">rust_..</text></g><g><title>libsystem_malloc.dylib`free (33 samples, 0.04%)</title><rect x="41.3295%" y="389" width="0.0425%" height="15" fill="rgb(230,182,32)" fg:x="32099" fg:w="33"/><text x="41.5795%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (17 samples, 0.02%)</title><rect x="41.3501%" y="373" width="0.0219%" height="15" fill="rgb(242,56,43)" fg:x="32115" fg:w="17"/><text x="41.6001%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (116 samples, 0.15%)</title><rect x="41.3720%" y="389" width="0.1494%" height="15" fill="rgb(233,99,24)" fg:x="32132" fg:w="116"/><text x="41.6220%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (57 samples, 0.07%)</title><rect x="41.4480%" y="373" width="0.0734%" height="15" fill="rgb(234,209,42)" fg:x="32191" fg:w="57"/><text x="41.6980%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (22 samples, 0.03%)</title><rect x="41.4931%" y="357" width="0.0283%" height="15" fill="rgb(227,7,12)" fg:x="32226" fg:w="22"/><text x="41.7431%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`free (11 samples, 0.01%)</title><rect x="41.5304%" y="373" width="0.0142%" height="15" fill="rgb(245,203,43)" fg:x="32255" fg:w="11"/><text x="41.7804%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (8 samples, 0.01%)</title><rect x="41.5343%" y="357" width="0.0103%" height="15" fill="rgb(238,205,33)" fg:x="32258" fg:w="8"/><text x="41.7843%" y="367.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (198 samples, 0.25%)</title><rect x="41.3128%" y="405" width="0.2549%" height="15" fill="rgb(231,56,7)" fg:x="32086" fg:w="198"/><text x="41.5628%" y="415.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Dying,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::deallocating_next_unchecked (33 samples, 0.04%)</title><rect x="41.5252%" y="389" width="0.0425%" height="15" fill="rgb(244,186,29)" fg:x="32251" fg:w="33"/><text x="41.7752%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (18 samples, 0.02%)</title><rect x="41.5446%" y="373" width="0.0232%" height="15" fill="rgb(234,111,31)" fg:x="32266" fg:w="18"/><text x="41.7946%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (11 samples, 0.01%)</title><rect x="41.5536%" y="357" width="0.0142%" height="15" fill="rgb(241,149,10)" fg:x="32273" fg:w="11"/><text x="41.8036%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (16 samples, 0.02%)</title><rect x="41.5896%" y="389" width="0.0206%" height="15" fill="rgb(249,206,44)" fg:x="32301" fg:w="16"/><text x="41.8396%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::set::Difference&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.06%)</title><rect x="41.5677%" y="405" width="0.0592%" height="15" fill="rgb(251,153,30)" fg:x="32284" fg:w="46"/><text x="41.8177%" y="415.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (13 samples, 0.02%)</title><rect x="41.6102%" y="389" width="0.0167%" height="15" fill="rgb(239,152,38)" fg:x="32317" fg:w="13"/><text x="41.8602%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (10 samples, 0.01%)</title><rect x="41.6489%" y="389" width="0.0129%" height="15" fill="rgb(249,139,47)" fg:x="32347" fg:w="10"/><text x="41.8989%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::set::Intersection&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.06%)</title><rect x="41.6270%" y="405" width="0.0579%" height="15" fill="rgb(244,64,35)" fg:x="32330" fg:w="45"/><text x="41.8770%" y="415.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (18 samples, 0.02%)</title><rect x="41.6617%" y="389" width="0.0232%" height="15" fill="rgb(216,46,15)" fg:x="32357" fg:w="18"/><text x="41.9117%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="41.7351%" y="341" width="0.0103%" height="15" fill="rgb(250,74,19)" fg:x="32414" fg:w="8"/><text x="41.9851%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (107 samples, 0.14%)</title><rect x="41.7454%" y="341" width="0.1378%" height="15" fill="rgb(249,42,33)" fg:x="32422" fg:w="107"/><text x="41.9954%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (104 samples, 0.13%)</title><rect x="41.7493%" y="325" width="0.1339%" height="15" fill="rgb(242,149,17)" fg:x="32425" fg:w="104"/><text x="41.9993%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (30 samples, 0.04%)</title><rect x="41.8446%" y="309" width="0.0386%" height="15" fill="rgb(244,29,21)" fg:x="32499" fg:w="30"/><text x="42.0946%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (124 samples, 0.16%)</title><rect x="41.7261%" y="357" width="0.1597%" height="15" fill="rgb(220,130,37)" fg:x="32407" fg:w="124"/><text x="41.9761%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc (128 samples, 0.16%)</title><rect x="41.7235%" y="373" width="0.1648%" height="15" fill="rgb(211,67,2)" fg:x="32405" fg:w="128"/><text x="41.9735%" y="383.50"></text></g><g><title>rust_edit_history`&lt;alloc::string::String as core::clone::Clone&gt;::clone (220 samples, 0.28%)</title><rect x="41.7029%" y="389" width="0.2833%" height="15" fill="rgb(235,68,52)" fg:x="32389" fg:w="220"/><text x="41.9529%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (75 samples, 0.10%)</title><rect x="41.8896%" y="373" width="0.0966%" height="15" fill="rgb(246,142,3)" fg:x="32534" fg:w="75"/><text x="42.1396%" y="383.50"></text></g><g><title>rust_edit_history`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (253 samples, 0.33%)</title><rect x="41.6913%" y="405" width="0.3258%" height="15" fill="rgb(241,25,7)" fg:x="32380" fg:w="253"/><text x="41.9413%" y="415.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::navigate::_&lt;impl alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Immut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;&gt;::next_unchecked (24 samples, 0.03%)</title><rect x="41.9862%" y="389" width="0.0309%" height="15" fill="rgb(242,119,39)" fg:x="32609" fg:w="24"/><text x="42.2362%" y="399.50"></text></g><g><title>rust_edit_history`&lt;json_patch::diff::PatchDiffer as treediff::traitdef::Delegate&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt;::pop (17 samples, 0.02%)</title><rect x="42.0248%" y="405" width="0.0219%" height="15" fill="rgb(241,98,45)" fg:x="32639" fg:w="17"/><text x="42.2748%" y="415.50"></text></g><g><title>rust_edit_history`core::slice::memchr::memrchr (14 samples, 0.02%)</title><rect x="42.0287%" y="389" width="0.0180%" height="15" fill="rgb(254,28,30)" fg:x="32642" fg:w="14"/><text x="42.2787%" y="399.50"></text></g><g><title>rust_edit_history`&lt;json_patch::diff::PatchDiffer as treediff::traitdef::Delegate&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt;::push (16 samples, 0.02%)</title><rect x="42.0467%" y="405" width="0.0206%" height="15" fill="rgb(241,142,54)" fg:x="32656" fg:w="16"/><text x="42.2967%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (93 samples, 0.12%)</title><rect x="42.2566%" y="389" width="0.1197%" height="15" fill="rgb(222,85,15)" fg:x="32819" fg:w="93"/><text x="42.5066%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc (42 samples, 0.05%)</title><rect x="42.4407%" y="357" width="0.0541%" height="15" fill="rgb(210,85,47)" fg:x="32962" fg:w="42"/><text x="42.6907%" y="367.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (41 samples, 0.05%)</title><rect x="42.4420%" y="341" width="0.0528%" height="15" fill="rgb(224,206,25)" fg:x="32963" fg:w="41"/><text x="42.6920%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (37 samples, 0.05%)</title><rect x="42.4471%" y="325" width="0.0476%" height="15" fill="rgb(243,201,19)" fg:x="32967" fg:w="37"/><text x="42.6971%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (36 samples, 0.05%)</title><rect x="42.4484%" y="309" width="0.0464%" height="15" fill="rgb(236,59,4)" fg:x="32968" fg:w="36"/><text x="42.6984%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (13 samples, 0.02%)</title><rect x="42.4780%" y="293" width="0.0167%" height="15" fill="rgb(254,179,45)" fg:x="32991" fg:w="13"/><text x="42.7280%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="42.4961%" y="357" width="0.0167%" height="15" fill="rgb(226,14,10)" fg:x="33005" fg:w="13"/><text x="42.7461%" y="367.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (86 samples, 0.11%)</title><rect x="42.4034%" y="373" width="0.1107%" height="15" fill="rgb(244,27,41)" fg:x="32933" fg:w="86"/><text x="42.6534%" y="383.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (109 samples, 0.14%)</title><rect x="42.3763%" y="389" width="0.1403%" height="15" fill="rgb(235,35,32)" fg:x="32912" fg:w="109"/><text x="42.6263%" y="399.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (341 samples, 0.44%)</title><rect x="42.0802%" y="405" width="0.4391%" height="15" fill="rgb(218,68,31)" fg:x="32682" fg:w="341"/><text x="42.3302%" y="415.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::search::_&lt;impl alloc::collections::btree::node::NodeRef&lt;BorrowType,K,V,alloc::collections::btree::node::marker::LeafOrInternal&gt;&gt;::search_tree (171 samples, 0.22%)</title><rect x="42.5231%" y="405" width="0.2202%" height="15" fill="rgb(207,120,37)" fg:x="33026" fg:w="171"/><text x="42.7731%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (91 samples, 0.12%)</title><rect x="42.6261%" y="389" width="0.1172%" height="15" fill="rgb(227,98,0)" fg:x="33106" fg:w="91"/><text x="42.8761%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free (12 samples, 0.02%)</title><rect x="42.7677%" y="389" width="0.0155%" height="15" fill="rgb(207,7,3)" fg:x="33216" fg:w="12"/><text x="43.0177%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (20 samples, 0.03%)</title><rect x="42.7832%" y="389" width="0.0258%" height="15" fill="rgb(206,98,19)" fg:x="33228" fg:w="20"/><text x="43.0332%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (54 samples, 0.07%)</title><rect x="42.8167%" y="389" width="0.0695%" height="15" fill="rgb(217,5,26)" fg:x="33254" fg:w="54"/><text x="43.0667%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.02%)</title><rect x="42.8630%" y="373" width="0.0232%" height="15" fill="rgb(235,190,38)" fg:x="33290" fg:w="18"/><text x="43.1130%" y="383.50"></text></g><g><title>rust_edit_history`&lt;json_patch::diff::PatchDiffer as treediff::traitdef::Delegate&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt;::added (10 samples, 0.01%)</title><rect x="42.8978%" y="389" width="0.0129%" height="15" fill="rgb(247,86,24)" fg:x="33317" fg:w="10"/><text x="43.1478%" y="399.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::clone::Clone&gt;::clone::clone_subtree (10 samples, 0.01%)</title><rect x="42.8978%" y="373" width="0.0129%" height="15" fill="rgb(205,101,16)" fg:x="33317" fg:w="10"/><text x="43.1478%" y="383.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (15 samples, 0.02%)</title><rect x="42.9197%" y="389" width="0.0193%" height="15" fill="rgb(246,168,33)" fg:x="33334" fg:w="15"/><text x="43.1697%" y="399.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (242 samples, 0.31%)</title><rect x="43.4643%" y="357" width="0.3116%" height="15" fill="rgb(231,114,1)" fg:x="33757" fg:w="242"/><text x="43.7143%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (189 samples, 0.24%)</title><rect x="44.4635%" y="341" width="0.2433%" height="15" fill="rgb(207,184,53)" fg:x="34533" fg:w="189"/><text x="44.7135%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (178 samples, 0.23%)</title><rect x="45.2991%" y="325" width="0.2292%" height="15" fill="rgb(224,95,51)" fg:x="35182" fg:w="178"/><text x="45.5491%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (218 samples, 0.28%)</title><rect x="46.1965%" y="309" width="0.2807%" height="15" fill="rgb(212,188,45)" fg:x="35879" fg:w="218"/><text x="46.4465%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (97 samples, 0.12%)</title><rect x="46.9601%" y="293" width="0.1249%" height="15" fill="rgb(223,154,38)" fg:x="36472" fg:w="97"/><text x="47.2101%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (35 samples, 0.05%)</title><rect x="47.2768%" y="277" width="0.0451%" height="15" fill="rgb(251,22,52)" fg:x="36718" fg:w="35"/><text x="47.5268%" y="287.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (198 samples, 0.25%)</title><rect x="47.0850%" y="293" width="0.2549%" height="15" fill="rgb(229,209,22)" fg:x="36569" fg:w="198"/><text x="47.3350%" y="303.50"></text></g><g><title>rust_edit_history`&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (14 samples, 0.02%)</title><rect x="47.3219%" y="277" width="0.0180%" height="15" fill="rgb(234,138,34)" fg:x="36753" fg:w="14"/><text x="47.5719%" y="287.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (685 samples, 0.88%)</title><rect x="46.4772%" y="309" width="0.8820%" height="15" fill="rgb(212,95,11)" fg:x="36097" fg:w="685"/><text x="46.7272%" y="319.50"></text></g><g><title>rust_edit_history`&lt;serde_json::number::N as core::cmp::PartialEq&gt;::eq (15 samples, 0.02%)</title><rect x="47.3399%" y="293" width="0.0193%" height="15" fill="rgb(240,179,47)" fg:x="36767" fg:w="15"/><text x="47.5899%" y="303.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (1,429 samples, 1.84%)</title><rect x="45.5283%" y="325" width="1.8399%" height="15" fill="rgb(240,163,11)" fg:x="35360" fg:w="1429"/><text x="45.7783%" y="335.50">r..</text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (84 samples, 0.11%)</title><rect x="47.3695%" y="325" width="0.1082%" height="15" fill="rgb(236,37,12)" fg:x="36790" fg:w="84"/><text x="47.6195%" y="335.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (2,157 samples, 2.78%)</title><rect x="44.7068%" y="341" width="2.7773%" height="15" fill="rgb(232,164,16)" fg:x="34722" fg:w="2157"/><text x="44.9568%" y="351.50">ru..</text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (108 samples, 0.14%)</title><rect x="47.4841%" y="341" width="0.1391%" height="15" fill="rgb(244,205,15)" fg:x="36879" fg:w="108"/><text x="47.7341%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="47.6129%" y="325" width="0.0103%" height="15" fill="rgb(223,117,47)" fg:x="36979" fg:w="8"/><text x="47.8629%" y="335.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (2,992 samples, 3.85%)</title><rect x="43.7759%" y="357" width="3.8524%" height="15" fill="rgb(244,107,35)" fg:x="33999" fg:w="2992"/><text x="44.0259%" y="367.50">rust..</text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (3,732 samples, 4.81%)</title><rect x="42.9738%" y="373" width="4.8052%" height="15" fill="rgb(205,140,8)" fg:x="33376" fg:w="3732"/><text x="43.2238%" y="383.50">rust_e..</text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (117 samples, 0.15%)</title><rect x="47.6283%" y="357" width="0.1506%" height="15" fill="rgb(228,84,46)" fg:x="36991" fg:w="117"/><text x="47.8783%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="47.7687%" y="341" width="0.0103%" height="15" fill="rgb(254,188,9)" fg:x="37100" fg:w="8"/><text x="48.0187%" y="351.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::Value as core::cmp::PartialEq&gt;::eq (65 samples, 0.08%)</title><rect x="47.7790%" y="373" width="0.0837%" height="15" fill="rgb(206,112,54)" fg:x="37108" fg:w="65"/><text x="48.0290%" y="383.50"></text></g><g><title>rust_edit_history`core::cmp::impls::_&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3,818 samples, 4.92%)</title><rect x="42.9493%" y="389" width="4.9159%" height="15" fill="rgb(216,84,49)" fg:x="33357" fg:w="3818"/><text x="43.1993%" y="399.50">rust_e..</text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.01%)</title><rect x="47.8858%" y="357" width="0.0116%" height="15" fill="rgb(214,194,35)" fg:x="37191" fg:w="9"/><text x="48.1358%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.01%)</title><rect x="47.9399%" y="325" width="0.0116%" height="15" fill="rgb(249,28,3)" fg:x="37233" fg:w="9"/><text x="48.1899%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (8 samples, 0.01%)</title><rect x="47.9824%" y="309" width="0.0103%" height="15" fill="rgb(222,56,52)" fg:x="37266" fg:w="8"/><text x="48.2324%" y="319.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (62 samples, 0.08%)</title><rect x="47.9515%" y="325" width="0.0798%" height="15" fill="rgb(245,217,50)" fg:x="37242" fg:w="62"/><text x="48.2015%" y="335.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (30 samples, 0.04%)</title><rect x="47.9927%" y="309" width="0.0386%" height="15" fill="rgb(213,201,24)" fg:x="37274" fg:w="30"/><text x="48.2427%" y="319.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (14 samples, 0.02%)</title><rect x="48.0133%" y="293" width="0.0180%" height="15" fill="rgb(248,116,28)" fg:x="37290" fg:w="14"/><text x="48.2633%" y="303.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (93 samples, 0.12%)</title><rect x="47.9180%" y="341" width="0.1197%" height="15" fill="rgb(219,72,43)" fg:x="37216" fg:w="93"/><text x="48.1680%" y="351.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (111 samples, 0.14%)</title><rect x="47.8974%" y="357" width="0.1429%" height="15" fill="rgb(209,138,14)" fg:x="37200" fg:w="111"/><text x="48.1474%" y="367.50"></text></g><g><title>rust_edit_history`&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::cmp::PartialEq&gt;::eq (133 samples, 0.17%)</title><rect x="47.8742%" y="373" width="0.1712%" height="15" fill="rgb(222,18,33)" fg:x="37182" fg:w="133"/><text x="48.1242%" y="383.50"></text></g><g><title>rust_edit_history`&lt;json_patch::diff::PatchDiffer as treediff::traitdef::Delegate&lt;treediff::value::shared::Key,serde_json::value::Value&gt;&gt;::added (8 samples, 0.01%)</title><rect x="48.0648%" y="373" width="0.0103%" height="15" fill="rgb(213,199,7)" fg:x="37330" fg:w="8"/><text x="48.3148%" y="383.50"></text></g><g><title>rust_edit_history`treediff::diff::diff (22 samples, 0.03%)</title><rect x="48.1021%" y="357" width="0.0283%" height="15" fill="rgb(250,110,10)" fg:x="37359" fg:w="22"/><text x="48.3521%" y="367.50"></text></g><g><title>rust_edit_history`treediff::diff::diff (17 samples, 0.02%)</title><rect x="48.1086%" y="341" width="0.0219%" height="15" fill="rgb(248,123,6)" fg:x="37364" fg:w="17"/><text x="48.3586%" y="351.50"></text></g><g><title>rust_edit_history`treediff::diff::diff (10 samples, 0.01%)</title><rect x="48.1176%" y="325" width="0.0129%" height="15" fill="rgb(206,91,31)" fg:x="37371" fg:w="10"/><text x="48.3676%" y="335.50"></text></g><g><title>rust_edit_history`treediff::diff::diff (39 samples, 0.05%)</title><rect x="48.0815%" y="373" width="0.0502%" height="15" fill="rgb(211,154,13)" fg:x="37343" fg:w="39"/><text x="48.3315%" y="383.50"></text></g><g><title>rust_edit_history`treediff::diff::diff (215 samples, 0.28%)</title><rect x="47.8652%" y="389" width="0.2768%" height="15" fill="rgb(225,148,7)" fg:x="37175" fg:w="215"/><text x="48.1152%" y="399.50"></text></g><g><title>rust_edit_history`treediff::value::serde_json::_&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (8 samples, 0.01%)</title><rect x="48.1317%" y="373" width="0.0103%" height="15" fill="rgb(220,160,43)" fg:x="37382" fg:w="8"/><text x="48.3817%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="48.2708%" y="309" width="0.0155%" height="15" fill="rgb(213,52,39)" fg:x="37490" fg:w="12"/><text x="48.5208%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (100 samples, 0.13%)</title><rect x="48.1820%" y="341" width="0.1288%" height="15" fill="rgb(243,137,7)" fg:x="37421" fg:w="100"/><text x="48.4320%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (92 samples, 0.12%)</title><rect x="48.1923%" y="325" width="0.1185%" height="15" fill="rgb(230,79,13)" fg:x="37429" fg:w="92"/><text x="48.4423%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.02%)</title><rect x="48.2863%" y="309" width="0.0245%" height="15" fill="rgb(247,105,23)" fg:x="37502" fg:w="19"/><text x="48.5363%" y="319.50"></text></g><g><title>rust_edit_history`treediff::diff::diff (4,319 samples, 5.56%)</title><rect x="42.7510%" y="405" width="5.5610%" height="15" fill="rgb(223,179,41)" fg:x="33203" fg:w="4319"/><text x="43.0010%" y="415.50">rust_ed..</text></g><g><title>rust_edit_history`treediff::value::serde_json::_&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (132 samples, 0.17%)</title><rect x="48.1420%" y="389" width="0.1700%" height="15" fill="rgb(218,9,34)" fg:x="37390" fg:w="132"/><text x="48.3920%" y="399.50"></text></g><g><title>libsystem_malloc.dylib`malloc (117 samples, 0.15%)</title><rect x="48.1614%" y="373" width="0.1506%" height="15" fill="rgb(222,106,8)" fg:x="37405" fg:w="117"/><text x="48.4114%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (111 samples, 0.14%)</title><rect x="48.1691%" y="357" width="0.1429%" height="15" fill="rgb(211,220,0)" fg:x="37411" fg:w="111"/><text x="48.4191%" y="367.50"></text></g><g><title>rust_edit_history`json_patch::diff::diff (12,466 samples, 16.05%)</title><rect x="32.2728%" y="453" width="16.0508%" height="15" fill="rgb(229,52,16)" fg:x="25065" fg:w="12466"/><text x="32.5228%" y="463.50">rust_edit_history`json_pa..</text></g><g><title>rust_edit_history`treediff::diff::diff (12,463 samples, 16.05%)</title><rect x="32.2767%" y="437" width="16.0469%" height="15" fill="rgb(212,155,18)" fg:x="25068" fg:w="12463"/><text x="32.5267%" y="447.50">rust_edit_history`treedif..</text></g><g><title>rust_edit_history`treediff::diff::diff (9,248 samples, 11.91%)</title><rect x="36.4162%" y="421" width="11.9074%" height="15" fill="rgb(242,21,14)" fg:x="28283" fg:w="9248"/><text x="36.6662%" y="431.50">rust_edit_history`..</text></g><g><title>rust_edit_history`treediff::value::serde_json::_&lt;impl treediff::traitdef::Value for serde_json::value::Value&gt;::items (9 samples, 0.01%)</title><rect x="48.3120%" y="405" width="0.0116%" height="15" fill="rgb(222,19,48)" fg:x="37522" fg:w="9"/><text x="48.5620%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (110 samples, 0.14%)</title><rect x="48.3300%" y="437" width="0.1416%" height="15" fill="rgb(232,45,27)" fg:x="37536" fg:w="110"/><text x="48.5800%" y="447.50"></text></g><g><title>rust_edit_history`memchr::memchr::x86::avx::memchr2 (405 samples, 0.52%)</title><rect x="48.4729%" y="437" width="0.5215%" height="15" fill="rgb(249,103,42)" fg:x="37647" fg:w="405"/><text x="48.7229%" y="447.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (832 samples, 1.07%)</title><rect x="53.8897%" y="421" width="1.0713%" height="15" fill="rgb(246,81,33)" fg:x="41854" fg:w="832"/><text x="54.1397%" y="431.50"></text></g><g><title>rust_edit_history`memchr::memchr::x86::avx::memchr2 (1,818 samples, 2.34%)</title><rect x="54.9610%" y="421" width="2.3408%" height="15" fill="rgb(252,33,42)" fg:x="42686" fg:w="1818"/><text x="55.2110%" y="431.50">r..</text></g><g><title>rust_edit_history`quick_xml::events::BytesText::unescaped (7,006 samples, 9.02%)</title><rect x="48.3300%" y="453" width="9.0207%" height="15" fill="rgb(209,212,41)" fg:x="37536" fg:w="7006"/><text x="48.5800%" y="463.50">rust_edit_his..</text></g><g><title>rust_edit_history`quick_xml::escapei::do_unescape (6,490 samples, 8.36%)</title><rect x="48.9944%" y="437" width="8.3563%" height="15" fill="rgb(207,154,6)" fg:x="38052" fg:w="6490"/><text x="49.2444%" y="447.50">rust_edit_hi..</text></g><g><title>rust_edit_history`memchr::memchr::x86::avx::memchr2 (33 samples, 0.04%)</title><rect x="57.3082%" y="421" width="0.0425%" height="15" fill="rgb(223,64,47)" fg:x="44509" fg:w="33"/><text x="57.5582%" y="431.50"></text></g><g><title>rust_edit_history`memchr::memchr::x86::avx::memchr2::matched (33 samples, 0.04%)</title><rect x="57.3082%" y="405" width="0.0425%" height="15" fill="rgb(211,161,38)" fg:x="44509" fg:w="33"/><text x="57.5582%" y="415.50"></text></g><g><title>rust_edit_history`quick_xml::reader::Reader&lt;B&gt;::read_event (16 samples, 0.02%)</title><rect x="57.3752%" y="437" width="0.0206%" height="15" fill="rgb(219,138,40)" fg:x="44561" fg:w="16"/><text x="57.6252%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`read (1,211 samples, 1.56%)</title><rect x="57.4215%" y="421" width="1.5592%" height="15" fill="rgb(241,228,46)" fg:x="44597" fg:w="1211"/><text x="57.6715%" y="431.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (269 samples, 0.35%)</title><rect x="58.9808%" y="421" width="0.3464%" height="15" fill="rgb(223,209,38)" fg:x="45808" fg:w="269"/><text x="59.2308%" y="431.50"></text></g><g><title>rust_edit_history`quick_xml::reader::Reader&lt;B&gt;::read_event (1,583 samples, 2.04%)</title><rect x="57.3507%" y="453" width="2.0382%" height="15" fill="rgb(236,164,45)" fg:x="44542" fg:w="1583"/><text x="57.6007%" y="463.50">r..</text></g><g><title>rust_edit_history`quick_xml::reader::read_until (1,548 samples, 1.99%)</title><rect x="57.3958%" y="437" width="1.9932%" height="15" fill="rgb(231,15,5)" fg:x="44577" fg:w="1548"/><text x="57.6458%" y="447.50">r..</text></g><g><title>rust_edit_history`memchr::memchr::x86::avx::memchr (44 samples, 0.06%)</title><rect x="59.3323%" y="421" width="0.0567%" height="15" fill="rgb(252,35,15)" fg:x="46081" fg:w="44"/><text x="59.5823%" y="431.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (8 samples, 0.01%)</title><rect x="59.4108%" y="405" width="0.0103%" height="15" fill="rgb(248,181,18)" fg:x="46142" fg:w="8"/><text x="59.6608%" y="415.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (32 samples, 0.04%)</title><rect x="59.5434%" y="373" width="0.0412%" height="15" fill="rgb(233,39,42)" fg:x="46245" fg:w="32"/><text x="59.7934%" y="383.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (23 samples, 0.03%)</title><rect x="59.7005%" y="325" width="0.0296%" height="15" fill="rgb(238,110,33)" fg:x="46367" fg:w="23"/><text x="59.9505%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (287 samples, 0.37%)</title><rect x="59.7301%" y="325" width="0.3695%" height="15" fill="rgb(233,195,10)" fg:x="46390" fg:w="287"/><text x="59.9801%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (279 samples, 0.36%)</title><rect x="59.7404%" y="309" width="0.3592%" height="15" fill="rgb(254,105,3)" fg:x="46398" fg:w="279"/><text x="59.9904%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (99 samples, 0.13%)</title><rect x="59.9722%" y="293" width="0.1275%" height="15" fill="rgb(221,225,9)" fg:x="46578" fg:w="99"/><text x="60.2222%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (331 samples, 0.43%)</title><rect x="59.6760%" y="341" width="0.4262%" height="15" fill="rgb(224,227,45)" fg:x="46348" fg:w="331"/><text x="59.9260%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`malloc (353 samples, 0.45%)</title><rect x="59.6503%" y="357" width="0.4545%" height="15" fill="rgb(229,198,43)" fg:x="46328" fg:w="353"/><text x="59.9003%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (20 samples, 0.03%)</title><rect x="60.1074%" y="357" width="0.0258%" height="15" fill="rgb(206,209,35)" fg:x="46683" fg:w="20"/><text x="60.3574%" y="367.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (211 samples, 0.27%)</title><rect x="60.1331%" y="357" width="0.2717%" height="15" fill="rgb(245,195,53)" fg:x="46703" fg:w="211"/><text x="60.3831%" y="367.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (86 samples, 0.11%)</title><rect x="60.2941%" y="341" width="0.1107%" height="15" fill="rgb(240,92,26)" fg:x="46828" fg:w="86"/><text x="60.5441%" y="351.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (641 samples, 0.83%)</title><rect x="59.5898%" y="373" width="0.8253%" height="15" fill="rgb(207,40,23)" fg:x="46281" fg:w="641"/><text x="59.8398%" y="383.50"></text></g><g><title>rust_edit_history`DYLD-STUB$$memcmp (22 samples, 0.03%)</title><rect x="60.4228%" y="373" width="0.0283%" height="15" fill="rgb(223,111,35)" fg:x="46928" fg:w="22"/><text x="60.6728%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (254 samples, 0.33%)</title><rect x="60.9082%" y="357" width="0.3270%" height="15" fill="rgb(229,147,28)" fg:x="47305" fg:w="254"/><text x="61.1582%" y="367.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="61.2894%" y="341" width="0.0129%" height="15" fill="rgb(211,29,28)" fg:x="47601" fg:w="10"/><text x="61.5394%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (13 samples, 0.02%)</title><rect x="61.4992%" y="261" width="0.0167%" height="15" fill="rgb(228,72,33)" fg:x="47764" fg:w="13"/><text x="61.7492%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (75 samples, 0.10%)</title><rect x="61.4542%" y="293" width="0.0966%" height="15" fill="rgb(205,214,31)" fg:x="47729" fg:w="75"/><text x="61.7042%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (75 samples, 0.10%)</title><rect x="61.4542%" y="277" width="0.0966%" height="15" fill="rgb(224,111,15)" fg:x="47729" fg:w="75"/><text x="61.7042%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (21 samples, 0.03%)</title><rect x="61.5237%" y="261" width="0.0270%" height="15" fill="rgb(253,21,26)" fg:x="47783" fg:w="21"/><text x="61.7737%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (86 samples, 0.11%)</title><rect x="61.4413%" y="325" width="0.1107%" height="15" fill="rgb(245,139,43)" fg:x="47719" fg:w="86"/><text x="61.6913%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (82 samples, 0.11%)</title><rect x="61.4465%" y="309" width="0.1056%" height="15" fill="rgb(252,170,7)" fg:x="47723" fg:w="82"/><text x="61.6965%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (155 samples, 0.20%)</title><rect x="61.5533%" y="325" width="0.1996%" height="15" fill="rgb(231,118,14)" fg:x="47806" fg:w="155"/><text x="61.8033%" y="335.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (349 samples, 0.45%)</title><rect x="61.3061%" y="341" width="0.4494%" height="15" fill="rgb(238,83,0)" fg:x="47614" fg:w="349"/><text x="61.5561%" y="351.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (408 samples, 0.53%)</title><rect x="61.2353%" y="357" width="0.5253%" height="15" fill="rgb(221,39,39)" fg:x="47559" fg:w="408"/><text x="61.4853%" y="367.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (1,012 samples, 1.30%)</title><rect x="60.4602%" y="373" width="1.3030%" height="15" fill="rgb(222,119,46)" fg:x="46957" fg:w="1012"/><text x="60.7102%" y="383.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="62.2035%" y="341" width="0.0142%" height="15" fill="rgb(222,165,49)" fg:x="48311" fg:w="11"/><text x="62.4535%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (16 samples, 0.02%)</title><rect x="62.3606%" y="293" width="0.0206%" height="15" fill="rgb(219,113,52)" fg:x="48433" fg:w="16"/><text x="62.6106%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (365 samples, 0.47%)</title><rect x="62.3812%" y="293" width="0.4700%" height="15" fill="rgb(214,7,15)" fg:x="48449" fg:w="365"/><text x="62.6312%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (349 samples, 0.45%)</title><rect x="62.4018%" y="277" width="0.4494%" height="15" fill="rgb(235,32,4)" fg:x="48465" fg:w="349"/><text x="62.6518%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (112 samples, 0.14%)</title><rect x="62.7070%" y="261" width="0.1442%" height="15" fill="rgb(238,90,54)" fg:x="48702" fg:w="112"/><text x="62.9570%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (420 samples, 0.54%)</title><rect x="62.3143%" y="309" width="0.5408%" height="15" fill="rgb(213,208,19)" fg:x="48397" fg:w="420"/><text x="62.5643%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (451 samples, 0.58%)</title><rect x="62.2898%" y="325" width="0.5807%" height="15" fill="rgb(233,156,4)" fg:x="48378" fg:w="451"/><text x="62.5398%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (12 samples, 0.02%)</title><rect x="62.8550%" y="309" width="0.0155%" height="15" fill="rgb(207,194,5)" fg:x="48817" fg:w="12"/><text x="63.1050%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (37 samples, 0.05%)</title><rect x="62.8718%" y="325" width="0.0476%" height="15" fill="rgb(206,111,30)" fg:x="48830" fg:w="37"/><text x="63.1218%" y="335.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (168 samples, 0.22%)</title><rect x="62.9194%" y="325" width="0.2163%" height="15" fill="rgb(243,70,54)" fg:x="48867" fg:w="168"/><text x="63.1694%" y="335.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (87 samples, 0.11%)</title><rect x="63.0237%" y="309" width="0.1120%" height="15" fill="rgb(242,28,8)" fg:x="48948" fg:w="87"/><text x="63.2737%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.02%)</title><rect x="63.1731%" y="277" width="0.0180%" height="15" fill="rgb(219,106,18)" fg:x="49064" fg:w="14"/><text x="63.4231%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (282 samples, 0.36%)</title><rect x="63.1589%" y="293" width="0.3631%" height="15" fill="rgb(244,222,10)" fg:x="49053" fg:w="282"/><text x="63.4089%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (257 samples, 0.33%)</title><rect x="63.1911%" y="277" width="0.3309%" height="15" fill="rgb(236,179,52)" fg:x="49078" fg:w="257"/><text x="63.4411%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (240 samples, 0.31%)</title><rect x="63.2130%" y="261" width="0.3090%" height="15" fill="rgb(213,23,39)" fg:x="49095" fg:w="240"/><text x="63.4630%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (86 samples, 0.11%)</title><rect x="63.4113%" y="245" width="0.1107%" height="15" fill="rgb(238,48,10)" fg:x="49249" fg:w="86"/><text x="63.6613%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (293 samples, 0.38%)</title><rect x="63.1486%" y="309" width="0.3773%" height="15" fill="rgb(251,196,23)" fg:x="49045" fg:w="293"/><text x="63.3986%" y="319.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (132 samples, 0.17%)</title><rect x="63.5349%" y="309" width="0.1700%" height="15" fill="rgb(250,152,24)" fg:x="49345" fg:w="132"/><text x="63.7849%" y="319.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (65 samples, 0.08%)</title><rect x="63.6211%" y="293" width="0.0837%" height="15" fill="rgb(209,150,17)" fg:x="49412" fg:w="65"/><text x="63.8711%" y="303.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (443 samples, 0.57%)</title><rect x="63.1357%" y="325" width="0.5704%" height="15" fill="rgb(234,202,34)" fg:x="49035" fg:w="443"/><text x="63.3857%" y="335.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,170 samples, 1.51%)</title><rect x="62.2177%" y="341" width="1.5065%" height="15" fill="rgb(253,148,53)" fg:x="48322" fg:w="1170"/><text x="62.4677%" y="351.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (12 samples, 0.02%)</title><rect x="63.7242%" y="341" width="0.0155%" height="15" fill="rgb(218,129,16)" fg:x="49492" fg:w="12"/><text x="63.9742%" y="351.50"></text></g><g><title>rust_edit_history`__rdl_alloc (12 samples, 0.02%)</title><rect x="63.7512%" y="341" width="0.0155%" height="15" fill="rgb(216,85,19)" fg:x="49513" fg:w="12"/><text x="64.0012%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (23 samples, 0.03%)</title><rect x="64.2495%" y="261" width="0.0296%" height="15" fill="rgb(235,228,7)" fg:x="49900" fg:w="23"/><text x="64.4995%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (54 samples, 0.07%)</title><rect x="64.2791%" y="261" width="0.0695%" height="15" fill="rgb(245,175,0)" fg:x="49923" fg:w="54"/><text x="64.5291%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.01%)</title><rect x="64.3345%" y="245" width="0.0142%" height="15" fill="rgb(208,168,36)" fg:x="49966" fg:w="11"/><text x="64.5845%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (40 samples, 0.05%)</title><rect x="64.3538%" y="261" width="0.0515%" height="15" fill="rgb(246,171,24)" fg:x="49981" fg:w="40"/><text x="64.6038%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (514 samples, 0.66%)</title><rect x="63.9018%" y="293" width="0.6618%" height="15" fill="rgb(215,142,24)" fg:x="49630" fg:w="514"/><text x="64.1518%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (502 samples, 0.65%)</title><rect x="63.9173%" y="277" width="0.6464%" height="15" fill="rgb(250,187,7)" fg:x="49642" fg:w="502"/><text x="64.1673%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (123 samples, 0.16%)</title><rect x="64.4053%" y="261" width="0.1584%" height="15" fill="rgb(228,66,33)" fg:x="50021" fg:w="123"/><text x="64.6553%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (533 samples, 0.69%)</title><rect x="63.8787%" y="309" width="0.6863%" height="15" fill="rgb(234,215,21)" fg:x="49612" fg:w="533"/><text x="64.1287%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (538 samples, 0.69%)</title><rect x="63.8748%" y="325" width="0.6927%" height="15" fill="rgb(222,191,20)" fg:x="49609" fg:w="538"/><text x="64.1248%" y="335.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (184 samples, 0.24%)</title><rect x="64.5727%" y="325" width="0.2369%" height="15" fill="rgb(245,79,54)" fg:x="50151" fg:w="184"/><text x="64.8227%" y="335.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (131 samples, 0.17%)</title><rect x="64.6409%" y="309" width="0.1687%" height="15" fill="rgb(240,10,37)" fg:x="50204" fg:w="131"/><text x="64.8909%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (15 samples, 0.02%)</title><rect x="64.7903%" y="293" width="0.0193%" height="15" fill="rgb(214,192,32)" fg:x="50320" fg:w="15"/><text x="65.0403%" y="303.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (808 samples, 1.04%)</title><rect x="63.7731%" y="341" width="1.0404%" height="15" fill="rgb(209,36,54)" fg:x="49530" fg:w="808"/><text x="64.0231%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (22 samples, 0.03%)</title><rect x="65.0027%" y="293" width="0.0283%" height="15" fill="rgb(220,10,11)" fg:x="50485" fg:w="22"/><text x="65.2527%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="65.4958%" y="261" width="0.0155%" height="15" fill="rgb(221,106,17)" fg:x="50868" fg:w="12"/><text x="65.7458%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (9 samples, 0.01%)</title><rect x="65.5152%" y="261" width="0.0116%" height="15" fill="rgb(251,142,44)" fg:x="50883" fg:w="9"/><text x="65.7652%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (515 samples, 0.66%)</title><rect x="65.0310%" y="293" width="0.6631%" height="15" fill="rgb(238,13,15)" fg:x="50507" fg:w="515"/><text x="65.2810%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (485 samples, 0.62%)</title><rect x="65.0697%" y="277" width="0.6245%" height="15" fill="rgb(208,107,27)" fg:x="50537" fg:w="485"/><text x="65.3197%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (127 samples, 0.16%)</title><rect x="65.5306%" y="261" width="0.1635%" height="15" fill="rgb(205,136,37)" fg:x="50895" fg:w="127"/><text x="65.7806%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (572 samples, 0.74%)</title><rect x="64.9628%" y="309" width="0.7365%" height="15" fill="rgb(250,205,27)" fg:x="50454" fg:w="572"/><text x="65.2128%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`malloc (602 samples, 0.78%)</title><rect x="64.9383%" y="325" width="0.7751%" height="15" fill="rgb(210,80,43)" fg:x="50435" fg:w="602"/><text x="65.1883%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.01%)</title><rect x="65.6993%" y="309" width="0.0142%" height="15" fill="rgb(247,160,36)" fg:x="51026" fg:w="11"/><text x="65.9493%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (45 samples, 0.06%)</title><rect x="65.7160%" y="325" width="0.0579%" height="15" fill="rgb(234,13,49)" fg:x="51039" fg:w="45"/><text x="65.9660%" y="335.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (43 samples, 0.06%)</title><rect x="66.2143%" y="309" width="0.0554%" height="15" fill="rgb(234,122,0)" fg:x="51426" fg:w="43"/><text x="66.4643%" y="319.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (213 samples, 0.27%)</title><rect x="66.2787%" y="309" width="0.2743%" height="15" fill="rgb(207,146,38)" fg:x="51476" fg:w="213"/><text x="66.5287%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (42 samples, 0.05%)</title><rect x="66.7268%" y="293" width="0.0541%" height="15" fill="rgb(207,177,25)" fg:x="51824" fg:w="42"/><text x="66.9768%" y="303.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::decode_hex_escape (101 samples, 0.13%)</title><rect x="66.7808%" y="293" width="0.1300%" height="15" fill="rgb(211,178,42)" fg:x="51866" fg:w="101"/><text x="67.0308%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (9 samples, 0.01%)</title><rect x="66.9160%" y="229" width="0.0116%" height="15" fill="rgb(230,69,54)" fg:x="51971" fg:w="9"/><text x="67.1660%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (897 samples, 1.15%)</title><rect x="65.7740%" y="325" width="1.1549%" height="15" fill="rgb(214,135,41)" fg:x="51084" fg:w="897"/><text x="66.0240%" y="335.50"></text></g><g><title>rust_edit_history`serde_json::read::parse_escape (292 samples, 0.38%)</title><rect x="66.5529%" y="309" width="0.3760%" height="15" fill="rgb(237,67,25)" fg:x="51689" fg:w="292"/><text x="66.8029%" y="319.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.02%)</title><rect x="66.9109%" y="293" width="0.0180%" height="15" fill="rgb(222,189,50)" fg:x="51967" fg:w="14"/><text x="67.1609%" y="303.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::finish_grow (12 samples, 0.02%)</title><rect x="66.9134%" y="277" width="0.0155%" height="15" fill="rgb(245,148,34)" fg:x="51969" fg:w="12"/><text x="67.1634%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`realloc (12 samples, 0.02%)</title><rect x="66.9134%" y="261" width="0.0155%" height="15" fill="rgb(222,29,6)" fg:x="51969" fg:w="12"/><text x="67.1634%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (10 samples, 0.01%)</title><rect x="66.9160%" y="245" width="0.0129%" height="15" fill="rgb(221,189,43)" fg:x="51971" fg:w="10"/><text x="67.1660%" y="255.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,915 samples, 5.04%)</title><rect x="61.9241%" y="357" width="5.0408%" height="15" fill="rgb(207,36,27)" fg:x="48094" fg:w="3915"/><text x="62.1741%" y="367.50">rust_e..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (1,664 samples, 2.14%)</title><rect x="64.8224%" y="341" width="2.1425%" height="15" fill="rgb(217,90,24)" fg:x="50345" fg:w="1664"/><text x="65.0724%" y="351.50">r..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (10 samples, 0.01%)</title><rect x="66.9521%" y="325" width="0.0129%" height="15" fill="rgb(224,66,35)" fg:x="51999" fg:w="10"/><text x="67.2021%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (10 samples, 0.01%)</title><rect x="67.0448%" y="261" width="0.0129%" height="15" fill="rgb(221,13,50)" fg:x="52071" fg:w="10"/><text x="67.2948%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (88 samples, 0.11%)</title><rect x="66.9753%" y="325" width="0.1133%" height="15" fill="rgb(236,68,49)" fg:x="52017" fg:w="88"/><text x="67.2253%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (82 samples, 0.11%)</title><rect x="66.9830%" y="309" width="0.1056%" height="15" fill="rgb(229,146,28)" fg:x="52023" fg:w="82"/><text x="67.2330%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.10%)</title><rect x="66.9881%" y="293" width="0.1004%" height="15" fill="rgb(225,31,38)" fg:x="52027" fg:w="78"/><text x="67.2381%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (77 samples, 0.10%)</title><rect x="66.9894%" y="277" width="0.0991%" height="15" fill="rgb(250,208,3)" fg:x="52028" fg:w="77"/><text x="67.2394%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (20 samples, 0.03%)</title><rect x="67.0628%" y="261" width="0.0258%" height="15" fill="rgb(246,54,23)" fg:x="52085" fg:w="20"/><text x="67.3128%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (9 samples, 0.01%)</title><rect x="67.0976%" y="277" width="0.0116%" height="15" fill="rgb(243,76,11)" fg:x="52112" fg:w="9"/><text x="67.3476%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (11 samples, 0.01%)</title><rect x="67.1130%" y="261" width="0.0142%" height="15" fill="rgb(245,21,50)" fg:x="52124" fg:w="11"/><text x="67.3630%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (30 samples, 0.04%)</title><rect x="67.1104%" y="277" width="0.0386%" height="15" fill="rgb(228,9,43)" fg:x="52122" fg:w="30"/><text x="67.3604%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (17 samples, 0.02%)</title><rect x="67.1272%" y="261" width="0.0219%" height="15" fill="rgb(208,100,47)" fg:x="52135" fg:w="17"/><text x="67.3772%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (57 samples, 0.07%)</title><rect x="67.0950%" y="293" width="0.0734%" height="15" fill="rgb(232,26,8)" fg:x="52110" fg:w="57"/><text x="67.3450%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (63 samples, 0.08%)</title><rect x="67.0898%" y="309" width="0.0811%" height="15" fill="rgb(216,166,38)" fg:x="52106" fg:w="63"/><text x="67.3398%" y="319.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (170 samples, 0.22%)</title><rect x="66.9650%" y="357" width="0.2189%" height="15" fill="rgb(251,202,51)" fg:x="52009" fg:w="170"/><text x="67.2150%" y="367.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::finish_grow (164 samples, 0.21%)</title><rect x="66.9727%" y="341" width="0.2112%" height="15" fill="rgb(254,216,34)" fg:x="52015" fg:w="164"/><text x="67.2227%" y="351.50"></text></g><g><title>libsystem_malloc.dylib`realloc (74 samples, 0.10%)</title><rect x="67.0886%" y="325" width="0.0953%" height="15" fill="rgb(251,32,27)" fg:x="52105" fg:w="74"/><text x="67.3386%" y="335.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (13 samples, 0.02%)</title><rect x="67.2521%" y="341" width="0.0167%" height="15" fill="rgb(208,127,28)" fg:x="52232" fg:w="13"/><text x="67.5021%" y="351.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (18 samples, 0.02%)</title><rect x="67.6087%" y="325" width="0.0232%" height="15" fill="rgb(224,137,22)" fg:x="52509" fg:w="18"/><text x="67.8587%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (24 samples, 0.03%)</title><rect x="67.9049%" y="277" width="0.0309%" height="15" fill="rgb(254,70,32)" fg:x="52739" fg:w="24"/><text x="68.1549%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (660 samples, 0.85%)</title><rect x="67.9358%" y="277" width="0.8498%" height="15" fill="rgb(229,75,37)" fg:x="52763" fg:w="660"/><text x="68.1858%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (630 samples, 0.81%)</title><rect x="67.9744%" y="261" width="0.8112%" height="15" fill="rgb(252,64,23)" fg:x="52793" fg:w="630"/><text x="68.2244%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (188 samples, 0.24%)</title><rect x="68.5435%" y="245" width="0.2421%" height="15" fill="rgb(232,162,48)" fg:x="53235" fg:w="188"/><text x="68.7935%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (733 samples, 0.94%)</title><rect x="67.8444%" y="293" width="0.9438%" height="15" fill="rgb(246,160,12)" fg:x="52692" fg:w="733"/><text x="68.0944%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (774 samples, 1.00%)</title><rect x="67.8006%" y="309" width="0.9966%" height="15" fill="rgb(247,166,0)" fg:x="52658" fg:w="774"/><text x="68.0506%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (36 samples, 0.05%)</title><rect x="68.7972%" y="309" width="0.0464%" height="15" fill="rgb(249,219,21)" fg:x="53432" fg:w="36"/><text x="69.0472%" y="319.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (413 samples, 0.53%)</title><rect x="68.8435%" y="309" width="0.5318%" height="15" fill="rgb(205,209,3)" fg:x="53468" fg:w="413"/><text x="69.0935%" y="319.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (198 samples, 0.25%)</title><rect x="69.1203%" y="293" width="0.2549%" height="15" fill="rgb(243,44,1)" fg:x="53683" fg:w="198"/><text x="69.3703%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (205 samples, 0.26%)</title><rect x="69.3959%" y="277" width="0.2640%" height="15" fill="rgb(206,159,16)" fg:x="53897" fg:w="205"/><text x="69.6459%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (185 samples, 0.24%)</title><rect x="69.4216%" y="261" width="0.2382%" height="15" fill="rgb(244,77,30)" fg:x="53917" fg:w="185"/><text x="69.6716%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (177 samples, 0.23%)</title><rect x="69.4319%" y="245" width="0.2279%" height="15" fill="rgb(218,69,12)" fg:x="53925" fg:w="177"/><text x="69.6819%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (55 samples, 0.07%)</title><rect x="69.5890%" y="229" width="0.0708%" height="15" fill="rgb(212,87,7)" fg:x="54047" fg:w="55"/><text x="69.8390%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (213 samples, 0.27%)</title><rect x="69.3881%" y="293" width="0.2743%" height="15" fill="rgb(245,114,25)" fg:x="53891" fg:w="213"/><text x="69.6381%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="69.6624%" y="293" width="0.0142%" height="15" fill="rgb(210,61,42)" fg:x="54104" fg:w="11"/><text x="69.9124%" y="303.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (113 samples, 0.15%)</title><rect x="69.6766%" y="293" width="0.1455%" height="15" fill="rgb(211,52,33)" fg:x="54115" fg:w="113"/><text x="69.9266%" y="303.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (61 samples, 0.08%)</title><rect x="69.7435%" y="277" width="0.0785%" height="15" fill="rgb(234,58,33)" fg:x="54167" fg:w="61"/><text x="69.9935%" y="287.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (350 samples, 0.45%)</title><rect x="69.3753%" y="309" width="0.4506%" height="15" fill="rgb(220,115,36)" fg:x="53881" fg:w="350"/><text x="69.6253%" y="319.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,710 samples, 2.20%)</title><rect x="67.6396%" y="325" width="2.2017%" height="15" fill="rgb(243,153,54)" fg:x="52533" fg:w="1710"/><text x="67.8896%" y="335.50">r..</text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (8 samples, 0.01%)</title><rect x="69.8414%" y="325" width="0.0103%" height="15" fill="rgb(251,47,18)" fg:x="54243" fg:w="8"/><text x="70.0914%" y="335.50"></text></g><g><title>rust_edit_history`__rdl_alloc (10 samples, 0.01%)</title><rect x="69.8658%" y="325" width="0.0129%" height="15" fill="rgb(242,102,42)" fg:x="54262" fg:w="10"/><text x="70.1158%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (16 samples, 0.02%)</title><rect x="70.3886%" y="245" width="0.0206%" height="15" fill="rgb(234,31,38)" fg:x="54668" fg:w="16"/><text x="70.6386%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (60 samples, 0.08%)</title><rect x="70.4092%" y="245" width="0.0773%" height="15" fill="rgb(221,117,51)" fg:x="54684" fg:w="60"/><text x="70.6592%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (23 samples, 0.03%)</title><rect x="70.4568%" y="229" width="0.0296%" height="15" fill="rgb(212,20,18)" fg:x="54721" fg:w="23"/><text x="70.7068%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (36 samples, 0.05%)</title><rect x="70.4890%" y="245" width="0.0464%" height="15" fill="rgb(245,133,36)" fg:x="54746" fg:w="36"/><text x="70.7390%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (382 samples, 0.49%)</title><rect x="70.1684%" y="277" width="0.4918%" height="15" fill="rgb(212,6,19)" fg:x="54497" fg:w="382"/><text x="70.4184%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (374 samples, 0.48%)</title><rect x="70.1787%" y="261" width="0.4815%" height="15" fill="rgb(218,1,36)" fg:x="54505" fg:w="374"/><text x="70.4287%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (97 samples, 0.12%)</title><rect x="70.5354%" y="245" width="0.1249%" height="15" fill="rgb(246,84,54)" fg:x="54782" fg:w="97"/><text x="70.7854%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (401 samples, 0.52%)</title><rect x="70.1452%" y="293" width="0.5163%" height="15" fill="rgb(242,110,6)" fg:x="54479" fg:w="401"/><text x="70.3952%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (407 samples, 0.52%)</title><rect x="70.1388%" y="309" width="0.5240%" height="15" fill="rgb(214,47,5)" fg:x="54474" fg:w="407"/><text x="70.3888%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (62 samples, 0.08%)</title><rect x="70.6628%" y="309" width="0.0798%" height="15" fill="rgb(218,159,25)" fg:x="54881" fg:w="62"/><text x="70.9128%" y="319.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="70.8431%" y="293" width="0.0142%" height="15" fill="rgb(215,211,28)" fg:x="55021" fg:w="11"/><text x="71.0931%" y="303.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (327 samples, 0.42%)</title><rect x="70.7427%" y="309" width="0.4210%" height="15" fill="rgb(238,59,32)" fg:x="54943" fg:w="327"/><text x="70.9927%" y="319.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (235 samples, 0.30%)</title><rect x="70.8611%" y="293" width="0.3026%" height="15" fill="rgb(226,82,3)" fg:x="55035" fg:w="235"/><text x="71.1111%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (61 samples, 0.08%)</title><rect x="71.0852%" y="277" width="0.0785%" height="15" fill="rgb(240,164,32)" fg:x="55209" fg:w="61"/><text x="71.3352%" y="287.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (999 samples, 1.29%)</title><rect x="69.8864%" y="325" width="1.2863%" height="15" fill="rgb(232,46,7)" fg:x="54278" fg:w="999"/><text x="70.1364%" y="335.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (9 samples, 0.01%)</title><rect x="71.1727%" y="325" width="0.0116%" height="15" fill="rgb(229,129,53)" fg:x="55277" fg:w="9"/><text x="71.4227%" y="335.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (15 samples, 0.02%)</title><rect x="71.5049%" y="277" width="0.0193%" height="15" fill="rgb(234,188,29)" fg:x="55535" fg:w="15"/><text x="71.7549%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (18 samples, 0.02%)</title><rect x="71.9221%" y="245" width="0.0232%" height="15" fill="rgb(246,141,4)" fg:x="55859" fg:w="18"/><text x="72.1721%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (484 samples, 0.62%)</title><rect x="71.5242%" y="277" width="0.6232%" height="15" fill="rgb(229,23,39)" fg:x="55550" fg:w="484"/><text x="71.7742%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (456 samples, 0.59%)</title><rect x="71.5603%" y="261" width="0.5871%" height="15" fill="rgb(206,12,3)" fg:x="55578" fg:w="456"/><text x="71.8103%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (145 samples, 0.19%)</title><rect x="71.9607%" y="245" width="0.1867%" height="15" fill="rgb(252,226,20)" fg:x="55889" fg:w="145"/><text x="72.2107%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (528 samples, 0.68%)</title><rect x="71.4701%" y="293" width="0.6798%" height="15" fill="rgb(216,123,35)" fg:x="55508" fg:w="528"/><text x="71.7201%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (555 samples, 0.71%)</title><rect x="71.4508%" y="309" width="0.7146%" height="15" fill="rgb(212,68,40)" fg:x="55493" fg:w="555"/><text x="71.7008%" y="319.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (11 samples, 0.01%)</title><rect x="72.1513%" y="293" width="0.0142%" height="15" fill="rgb(254,125,32)" fg:x="56037" fg:w="11"/><text x="72.4013%" y="303.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (33 samples, 0.04%)</title><rect x="72.1667%" y="309" width="0.0425%" height="15" fill="rgb(253,97,22)" fg:x="56049" fg:w="33"/><text x="72.4167%" y="319.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (182 samples, 0.23%)</title><rect x="72.5594%" y="293" width="0.2343%" height="15" fill="rgb(241,101,14)" fg:x="56354" fg:w="182"/><text x="72.8094%" y="303.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (476 samples, 0.61%)</title><rect x="72.2182%" y="309" width="0.6129%" height="15" fill="rgb(238,103,29)" fg:x="56089" fg:w="476"/><text x="72.4682%" y="319.50"></text></g><g><title>rust_edit_history`serde_json::read::parse_escape (29 samples, 0.04%)</title><rect x="72.7938%" y="293" width="0.0373%" height="15" fill="rgb(233,195,47)" fg:x="56536" fg:w="29"/><text x="73.0438%" y="303.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::decode_hex_escape (16 samples, 0.02%)</title><rect x="72.8105%" y="277" width="0.0206%" height="15" fill="rgb(246,218,30)" fg:x="56549" fg:w="16"/><text x="73.0605%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="73.1607%" y="293" width="0.0103%" height="15" fill="rgb(219,145,47)" fg:x="56821" fg:w="8"/><text x="73.4107%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.02%)</title><rect x="73.3577%" y="245" width="0.0167%" height="15" fill="rgb(243,12,26)" fg:x="56974" fg:w="13"/><text x="73.6077%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (495 samples, 0.64%)</title><rect x="73.3255%" y="261" width="0.6373%" height="15" fill="rgb(214,87,16)" fg:x="56949" fg:w="495"/><text x="73.5755%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (457 samples, 0.59%)</title><rect x="73.3744%" y="245" width="0.5884%" height="15" fill="rgb(208,99,42)" fg:x="56987" fg:w="457"/><text x="73.6244%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (437 samples, 0.56%)</title><rect x="73.4002%" y="229" width="0.5627%" height="15" fill="rgb(253,99,2)" fg:x="57007" fg:w="437"/><text x="73.6502%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (152 samples, 0.20%)</title><rect x="73.7672%" y="213" width="0.1957%" height="15" fill="rgb(220,168,23)" fg:x="57292" fg:w="152"/><text x="74.0172%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (510 samples, 0.66%)</title><rect x="73.3088%" y="277" width="0.6567%" height="15" fill="rgb(242,38,24)" fg:x="56936" fg:w="510"/><text x="73.5588%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (24 samples, 0.03%)</title><rect x="73.9693%" y="277" width="0.0309%" height="15" fill="rgb(225,182,9)" fg:x="57449" fg:w="24"/><text x="74.2193%" y="287.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (239 samples, 0.31%)</title><rect x="74.0002%" y="277" width="0.3077%" height="15" fill="rgb(243,178,37)" fg:x="57473" fg:w="239"/><text x="74.2502%" y="287.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (107 samples, 0.14%)</title><rect x="74.1702%" y="261" width="0.1378%" height="15" fill="rgb(232,139,19)" fg:x="57605" fg:w="107"/><text x="74.4202%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.02%)</title><rect x="74.3581%" y="229" width="0.0155%" height="15" fill="rgb(225,201,24)" fg:x="57751" fg:w="12"/><text x="74.6081%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (226 samples, 0.29%)</title><rect x="74.3736%" y="229" width="0.2910%" height="15" fill="rgb(221,47,46)" fg:x="57763" fg:w="226"/><text x="74.6236%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (213 samples, 0.27%)</title><rect x="74.3903%" y="213" width="0.2743%" height="15" fill="rgb(249,23,13)" fg:x="57776" fg:w="213"/><text x="74.6403%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (70 samples, 0.09%)</title><rect x="74.5745%" y="197" width="0.0901%" height="15" fill="rgb(219,9,5)" fg:x="57919" fg:w="70"/><text x="74.8245%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (253 samples, 0.33%)</title><rect x="74.3414%" y="245" width="0.3258%" height="15" fill="rgb(254,171,16)" fg:x="57738" fg:w="253"/><text x="74.5914%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (266 samples, 0.34%)</title><rect x="74.3272%" y="261" width="0.3425%" height="15" fill="rgb(230,171,20)" fg:x="57727" fg:w="266"/><text x="74.5772%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="74.6697%" y="261" width="0.0103%" height="15" fill="rgb(210,71,41)" fg:x="57993" fg:w="8"/><text x="74.9197%" y="271.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (119 samples, 0.15%)</title><rect x="74.6800%" y="261" width="0.1532%" height="15" fill="rgb(206,173,20)" fg:x="58001" fg:w="119"/><text x="74.9300%" y="271.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (41 samples, 0.05%)</title><rect x="74.7805%" y="245" width="0.0528%" height="15" fill="rgb(233,88,34)" fg:x="58079" fg:w="41"/><text x="75.0305%" y="255.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (409 samples, 0.53%)</title><rect x="74.3079%" y="277" width="0.5266%" height="15" fill="rgb(223,209,46)" fg:x="57712" fg:w="409"/><text x="74.5579%" y="287.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (1,304 samples, 1.68%)</title><rect x="73.1710%" y="293" width="1.6790%" height="15" fill="rgb(250,43,18)" fg:x="56829" fg:w="1304"/><text x="73.4210%" y="303.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (8 samples, 0.01%)</title><rect x="74.8500%" y="293" width="0.0103%" height="15" fill="rgb(208,13,10)" fg:x="58133" fg:w="8"/><text x="75.1000%" y="303.50"></text></g><g><title>rust_edit_history`__rdl_alloc (9 samples, 0.01%)</title><rect x="74.8706%" y="293" width="0.0116%" height="15" fill="rgb(212,200,36)" fg:x="58149" fg:w="9"/><text x="75.1206%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (31 samples, 0.04%)</title><rect x="75.2839%" y="213" width="0.0399%" height="15" fill="rgb(225,90,30)" fg:x="58470" fg:w="31"/><text x="75.5339%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (88 samples, 0.11%)</title><rect x="75.3238%" y="213" width="0.1133%" height="15" fill="rgb(236,182,39)" fg:x="58501" fg:w="88"/><text x="75.5738%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (32 samples, 0.04%)</title><rect x="75.3959%" y="197" width="0.0412%" height="15" fill="rgb(212,144,35)" fg:x="58557" fg:w="32"/><text x="75.6459%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (54 samples, 0.07%)</title><rect x="75.4410%" y="213" width="0.0695%" height="15" fill="rgb(228,63,44)" fg:x="58592" fg:w="54"/><text x="75.6910%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (487 samples, 0.63%)</title><rect x="75.0354%" y="245" width="0.6270%" height="15" fill="rgb(228,109,6)" fg:x="58277" fg:w="487"/><text x="75.2854%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (479 samples, 0.62%)</title><rect x="75.0457%" y="229" width="0.6167%" height="15" fill="rgb(238,117,24)" fg:x="58285" fg:w="479"/><text x="75.2957%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (118 samples, 0.15%)</title><rect x="75.5105%" y="213" width="0.1519%" height="15" fill="rgb(242,26,26)" fg:x="58646" fg:w="118"/><text x="75.7605%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (502 samples, 0.65%)</title><rect x="75.0174%" y="261" width="0.6464%" height="15" fill="rgb(221,92,48)" fg:x="58263" fg:w="502"/><text x="75.2674%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (512 samples, 0.66%)</title><rect x="75.0097%" y="277" width="0.6592%" height="15" fill="rgb(209,209,32)" fg:x="58257" fg:w="512"/><text x="75.2597%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (12 samples, 0.02%)</title><rect x="75.6689%" y="277" width="0.0155%" height="15" fill="rgb(221,70,22)" fg:x="58769" fg:w="12"/><text x="75.9189%" y="287.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (299 samples, 0.38%)</title><rect x="75.6843%" y="277" width="0.3850%" height="15" fill="rgb(248,145,5)" fg:x="58781" fg:w="299"/><text x="75.9343%" y="287.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (237 samples, 0.31%)</title><rect x="75.7642%" y="261" width="0.3052%" height="15" fill="rgb(226,116,26)" fg:x="58843" fg:w="237"/><text x="76.0142%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (86 samples, 0.11%)</title><rect x="75.9586%" y="245" width="0.1107%" height="15" fill="rgb(244,5,17)" fg:x="58994" fg:w="86"/><text x="76.2086%" y="255.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (926 samples, 1.19%)</title><rect x="74.8848%" y="293" width="1.1923%" height="15" fill="rgb(252,159,33)" fg:x="58160" fg:w="926"/><text x="75.1348%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (18 samples, 0.02%)</title><rect x="76.2998%" y="245" width="0.0232%" height="15" fill="rgb(206,71,0)" fg:x="59259" fg:w="18"/><text x="76.5498%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (19 samples, 0.02%)</title><rect x="76.7183%" y="213" width="0.0245%" height="15" fill="rgb(233,118,54)" fg:x="59584" fg:w="19"/><text x="76.9683%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (466 samples, 0.60%)</title><rect x="76.3230%" y="245" width="0.6000%" height="15" fill="rgb(234,83,48)" fg:x="59277" fg:w="466"/><text x="76.5730%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (442 samples, 0.57%)</title><rect x="76.3539%" y="229" width="0.5691%" height="15" fill="rgb(228,3,54)" fg:x="59301" fg:w="442"/><text x="76.6039%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (132 samples, 0.17%)</title><rect x="76.7530%" y="213" width="0.1700%" height="15" fill="rgb(226,155,13)" fg:x="59611" fg:w="132"/><text x="77.0030%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (511 samples, 0.66%)</title><rect x="76.2740%" y="261" width="0.6579%" height="15" fill="rgb(241,28,37)" fg:x="59239" fg:w="511"/><text x="76.5240%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc (526 samples, 0.68%)</title><rect x="76.2599%" y="277" width="0.6773%" height="15" fill="rgb(233,93,10)" fg:x="59228" fg:w="526"/><text x="76.5099%" y="287.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (77 samples, 0.10%)</title><rect x="76.9384%" y="277" width="0.0991%" height="15" fill="rgb(225,113,19)" fg:x="59755" fg:w="77"/><text x="77.1884%" y="287.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (323 samples, 0.42%)</title><rect x="77.0466%" y="277" width="0.4159%" height="15" fill="rgb(241,2,18)" fg:x="59839" fg:w="323"/><text x="77.2966%" y="287.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (107 samples, 0.14%)</title><rect x="77.3247%" y="261" width="0.1378%" height="15" fill="rgb(228,207,21)" fg:x="60055" fg:w="107"/><text x="77.5747%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (163 samples, 0.21%)</title><rect x="77.6762%" y="229" width="0.2099%" height="15" fill="rgb(213,211,35)" fg:x="60328" fg:w="163"/><text x="77.9262%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (149 samples, 0.19%)</title><rect x="77.6942%" y="213" width="0.1918%" height="15" fill="rgb(209,83,10)" fg:x="60342" fg:w="149"/><text x="77.9442%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (145 samples, 0.19%)</title><rect x="77.6994%" y="197" width="0.1867%" height="15" fill="rgb(209,164,1)" fg:x="60346" fg:w="145"/><text x="77.9494%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (47 samples, 0.06%)</title><rect x="77.8256%" y="181" width="0.0605%" height="15" fill="rgb(213,184,43)" fg:x="60444" fg:w="47"/><text x="78.0756%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (172 samples, 0.22%)</title><rect x="77.6659%" y="245" width="0.2215%" height="15" fill="rgb(231,61,34)" fg:x="60320" fg:w="172"/><text x="77.9159%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="77.8874%" y="245" width="0.0103%" height="15" fill="rgb(235,75,3)" fg:x="60492" fg:w="8"/><text x="78.1374%" y="255.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (62 samples, 0.08%)</title><rect x="77.8977%" y="245" width="0.0798%" height="15" fill="rgb(220,106,47)" fg:x="60500" fg:w="62"/><text x="78.1477%" y="255.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (23 samples, 0.03%)</title><rect x="77.9479%" y="229" width="0.0296%" height="15" fill="rgb(210,196,33)" fg:x="60539" fg:w="23"/><text x="78.1979%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (150 samples, 0.19%)</title><rect x="77.9942%" y="213" width="0.1931%" height="15" fill="rgb(229,154,42)" fg:x="60575" fg:w="150"/><text x="78.2442%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (141 samples, 0.18%)</title><rect x="78.0058%" y="197" width="0.1815%" height="15" fill="rgb(228,114,26)" fg:x="60584" fg:w="141"/><text x="78.2558%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (136 samples, 0.18%)</title><rect x="78.0123%" y="181" width="0.1751%" height="15" fill="rgb(208,144,1)" fg:x="60589" fg:w="136"/><text x="78.2623%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (44 samples, 0.06%)</title><rect x="78.1307%" y="165" width="0.0567%" height="15" fill="rgb(239,112,37)" fg:x="60681" fg:w="44"/><text x="78.3807%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (157 samples, 0.20%)</title><rect x="77.9865%" y="229" width="0.2021%" height="15" fill="rgb(210,96,50)" fg:x="60569" fg:w="157"/><text x="78.2365%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="78.1887%" y="229" width="0.0167%" height="15" fill="rgb(222,178,2)" fg:x="60726" fg:w="13"/><text x="78.4387%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (50 samples, 0.06%)</title><rect x="78.2054%" y="229" width="0.0644%" height="15" fill="rgb(226,74,18)" fg:x="60739" fg:w="50"/><text x="78.4554%" y="239.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (20 samples, 0.03%)</title><rect x="78.2440%" y="213" width="0.0258%" height="15" fill="rgb(225,67,54)" fg:x="60769" fg:w="20"/><text x="78.4940%" y="223.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (228 samples, 0.29%)</title><rect x="77.9775%" y="245" width="0.2936%" height="15" fill="rgb(251,92,32)" fg:x="60562" fg:w="228"/><text x="78.2275%" y="255.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (506 samples, 0.65%)</title><rect x="77.6247%" y="261" width="0.6515%" height="15" fill="rgb(228,149,22)" fg:x="60288" fg:w="506"/><text x="77.8747%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (24 samples, 0.03%)</title><rect x="78.5736%" y="181" width="0.0309%" height="15" fill="rgb(243,54,13)" fg:x="61025" fg:w="24"/><text x="78.8236%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (54 samples, 0.07%)</title><rect x="78.6045%" y="181" width="0.0695%" height="15" fill="rgb(243,180,28)" fg:x="61049" fg:w="54"/><text x="78.8545%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (26 samples, 0.03%)</title><rect x="78.6406%" y="165" width="0.0335%" height="15" fill="rgb(208,167,24)" fg:x="61077" fg:w="26"/><text x="78.8906%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (40 samples, 0.05%)</title><rect x="78.6741%" y="181" width="0.0515%" height="15" fill="rgb(245,73,45)" fg:x="61103" fg:w="40"/><text x="78.9241%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (346 samples, 0.45%)</title><rect x="78.3754%" y="213" width="0.4455%" height="15" fill="rgb(237,203,48)" fg:x="60871" fg:w="346"/><text x="78.6254%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (338 samples, 0.44%)</title><rect x="78.3857%" y="197" width="0.4352%" height="15" fill="rgb(211,197,16)" fg:x="60879" fg:w="338"/><text x="78.6357%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (74 samples, 0.10%)</title><rect x="78.7256%" y="181" width="0.0953%" height="15" fill="rgb(243,99,51)" fg:x="61143" fg:w="74"/><text x="78.9756%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (355 samples, 0.46%)</title><rect x="78.3651%" y="229" width="0.4571%" height="15" fill="rgb(215,123,29)" fg:x="60863" fg:w="355"/><text x="78.6151%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (364 samples, 0.47%)</title><rect x="78.3560%" y="245" width="0.4687%" height="15" fill="rgb(239,186,37)" fg:x="60856" fg:w="364"/><text x="78.6060%" y="255.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (116 samples, 0.15%)</title><rect x="78.8299%" y="245" width="0.1494%" height="15" fill="rgb(252,136,39)" fg:x="61224" fg:w="116"/><text x="79.0799%" y="255.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (85 samples, 0.11%)</title><rect x="78.8698%" y="229" width="0.1094%" height="15" fill="rgb(223,213,32)" fg:x="61255" fg:w="85"/><text x="79.1198%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="78.9651%" y="213" width="0.0142%" height="15" fill="rgb(233,115,5)" fg:x="61329" fg:w="11"/><text x="79.2151%" y="223.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (539 samples, 0.69%)</title><rect x="78.2904%" y="261" width="0.6940%" height="15" fill="rgb(207,226,44)" fg:x="60805" fg:w="539"/><text x="78.5404%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (14 samples, 0.02%)</title><rect x="79.0642%" y="213" width="0.0180%" height="15" fill="rgb(208,126,0)" fg:x="61406" fg:w="14"/><text x="79.3142%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (221 samples, 0.28%)</title><rect x="79.0397%" y="245" width="0.2846%" height="15" fill="rgb(244,66,21)" fg:x="61387" fg:w="221"/><text x="79.2897%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (217 samples, 0.28%)</title><rect x="79.0449%" y="229" width="0.2794%" height="15" fill="rgb(222,97,12)" fg:x="61391" fg:w="217"/><text x="79.2949%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (188 samples, 0.24%)</title><rect x="79.0822%" y="213" width="0.2421%" height="15" fill="rgb(219,213,19)" fg:x="61420" fg:w="188"/><text x="79.3322%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (179 samples, 0.23%)</title><rect x="79.0938%" y="197" width="0.2305%" height="15" fill="rgb(252,169,30)" fg:x="61429" fg:w="179"/><text x="79.3438%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (59 samples, 0.08%)</title><rect x="79.2483%" y="181" width="0.0760%" height="15" fill="rgb(206,32,51)" fg:x="61549" fg:w="59"/><text x="79.4983%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.02%)</title><rect x="79.3243%" y="245" width="0.0245%" height="15" fill="rgb(250,172,42)" fg:x="61608" fg:w="19"/><text x="79.5743%" y="255.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (94 samples, 0.12%)</title><rect x="79.4698%" y="229" width="0.1210%" height="15" fill="rgb(209,34,43)" fg:x="61721" fg:w="94"/><text x="79.7198%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (188 samples, 0.24%)</title><rect x="79.3513%" y="245" width="0.2421%" height="15" fill="rgb(223,11,35)" fg:x="61629" fg:w="188"/><text x="79.6013%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.01%)</title><rect x="79.8084%" y="181" width="0.0129%" height="15" fill="rgb(251,219,26)" fg:x="61984" fg:w="10"/><text x="80.0584%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (187 samples, 0.24%)</title><rect x="79.8213%" y="181" width="0.2408%" height="15" fill="rgb(231,119,3)" fg:x="61994" fg:w="187"/><text x="80.0713%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (175 samples, 0.23%)</title><rect x="79.8367%" y="165" width="0.2253%" height="15" fill="rgb(216,97,11)" fg:x="62006" fg:w="175"/><text x="80.0867%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (48 samples, 0.06%)</title><rect x="80.0003%" y="149" width="0.0618%" height="15" fill="rgb(223,59,9)" fg:x="62133" fg:w="48"/><text x="80.2503%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (207 samples, 0.27%)</title><rect x="79.7968%" y="197" width="0.2665%" height="15" fill="rgb(233,93,31)" fg:x="61975" fg:w="207"/><text x="80.0468%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (221 samples, 0.28%)</title><rect x="79.7839%" y="213" width="0.2846%" height="15" fill="rgb(239,81,33)" fg:x="61965" fg:w="221"/><text x="80.0339%" y="223.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (135 samples, 0.17%)</title><rect x="80.0801%" y="213" width="0.1738%" height="15" fill="rgb(213,120,34)" fg:x="62195" fg:w="135"/><text x="80.3301%" y="223.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (55 samples, 0.07%)</title><rect x="80.1831%" y="197" width="0.0708%" height="15" fill="rgb(243,49,53)" fg:x="62275" fg:w="55"/><text x="80.4331%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (118 samples, 0.15%)</title><rect x="80.2668%" y="181" width="0.1519%" height="15" fill="rgb(247,216,33)" fg:x="62340" fg:w="118"/><text x="80.5168%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (107 samples, 0.14%)</title><rect x="80.2809%" y="165" width="0.1378%" height="15" fill="rgb(226,26,14)" fg:x="62351" fg:w="107"/><text x="80.5309%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (100 samples, 0.13%)</title><rect x="80.2900%" y="149" width="0.1288%" height="15" fill="rgb(215,49,53)" fg:x="62358" fg:w="100"/><text x="80.5400%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.05%)</title><rect x="80.3711%" y="133" width="0.0476%" height="15" fill="rgb(245,162,40)" fg:x="62421" fg:w="37"/><text x="80.6211%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (123 samples, 0.16%)</title><rect x="80.2629%" y="197" width="0.1584%" height="15" fill="rgb(229,68,17)" fg:x="62337" fg:w="123"/><text x="80.5129%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="80.4213%" y="197" width="0.0103%" height="15" fill="rgb(213,182,10)" fg:x="62460" fg:w="8"/><text x="80.6713%" y="207.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (78 samples, 0.10%)</title><rect x="80.4316%" y="197" width="0.1004%" height="15" fill="rgb(245,125,30)" fg:x="62468" fg:w="78"/><text x="80.6816%" y="207.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (38 samples, 0.05%)</title><rect x="80.4831%" y="181" width="0.0489%" height="15" fill="rgb(232,202,2)" fg:x="62508" fg:w="38"/><text x="80.7331%" y="191.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (217 samples, 0.28%)</title><rect x="80.2539%" y="213" width="0.2794%" height="15" fill="rgb(237,140,51)" fg:x="62330" fg:w="217"/><text x="80.5039%" y="223.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (629 samples, 0.81%)</title><rect x="79.7312%" y="229" width="0.8099%" height="15" fill="rgb(236,157,25)" fg:x="61924" fg:w="629"/><text x="79.9812%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (17 samples, 0.02%)</title><rect x="80.7715%" y="149" width="0.0219%" height="15" fill="rgb(219,209,0)" fg:x="62732" fg:w="17"/><text x="81.0215%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (47 samples, 0.06%)</title><rect x="80.7934%" y="149" width="0.0605%" height="15" fill="rgb(240,116,54)" fg:x="62749" fg:w="47"/><text x="81.0434%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (19 samples, 0.02%)</title><rect x="80.8294%" y="133" width="0.0245%" height="15" fill="rgb(216,10,36)" fg:x="62777" fg:w="19"/><text x="81.0794%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (27 samples, 0.03%)</title><rect x="80.8565%" y="149" width="0.0348%" height="15" fill="rgb(222,72,44)" fg:x="62798" fg:w="27"/><text x="81.1065%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (272 samples, 0.35%)</title><rect x="80.6247%" y="213" width="0.3502%" height="15" fill="rgb(232,159,9)" fg:x="62618" fg:w="272"/><text x="80.8747%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (268 samples, 0.35%)</title><rect x="80.6299%" y="197" width="0.3451%" height="15" fill="rgb(210,39,32)" fg:x="62622" fg:w="268"/><text x="80.8799%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (260 samples, 0.33%)</title><rect x="80.6402%" y="181" width="0.3348%" height="15" fill="rgb(216,194,45)" fg:x="62630" fg:w="260"/><text x="80.8902%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (254 samples, 0.33%)</title><rect x="80.6479%" y="165" width="0.3270%" height="15" fill="rgb(218,18,35)" fg:x="62636" fg:w="254"/><text x="80.8979%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (65 samples, 0.08%)</title><rect x="80.8913%" y="149" width="0.0837%" height="15" fill="rgb(207,83,51)" fg:x="62825" fg:w="65"/><text x="81.1413%" y="159.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (94 samples, 0.12%)</title><rect x="80.9814%" y="213" width="0.1210%" height="15" fill="rgb(225,63,43)" fg:x="62895" fg:w="94"/><text x="81.2314%" y="223.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (63 samples, 0.08%)</title><rect x="81.0213%" y="197" width="0.0811%" height="15" fill="rgb(207,57,36)" fg:x="62926" fg:w="63"/><text x="81.2713%" y="207.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (423 samples, 0.54%)</title><rect x="80.5591%" y="229" width="0.5446%" height="15" fill="rgb(216,99,33)" fg:x="62567" fg:w="423"/><text x="80.8091%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.01%)</title><rect x="81.1977%" y="181" width="0.0129%" height="15" fill="rgb(225,42,16)" fg:x="63063" fg:w="10"/><text x="81.4477%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="81.3921%" y="149" width="0.0103%" height="15" fill="rgb(220,201,45)" fg:x="63214" fg:w="8"/><text x="81.6421%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (250 samples, 0.32%)</title><rect x="81.1861%" y="197" width="0.3219%" height="15" fill="rgb(225,33,4)" fg:x="63054" fg:w="250"/><text x="81.4361%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (231 samples, 0.30%)</title><rect x="81.2106%" y="181" width="0.2974%" height="15" fill="rgb(224,33,50)" fg:x="63073" fg:w="231"/><text x="81.4606%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (224 samples, 0.29%)</title><rect x="81.2196%" y="165" width="0.2884%" height="15" fill="rgb(246,198,51)" fg:x="63080" fg:w="224"/><text x="81.4696%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (76 samples, 0.10%)</title><rect x="81.4101%" y="149" width="0.0979%" height="15" fill="rgb(205,22,4)" fg:x="63228" fg:w="76"/><text x="81.6601%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (263 samples, 0.34%)</title><rect x="81.1745%" y="213" width="0.3386%" height="15" fill="rgb(206,3,8)" fg:x="63045" fg:w="263"/><text x="81.4245%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (16 samples, 0.02%)</title><rect x="81.5144%" y="213" width="0.0206%" height="15" fill="rgb(251,23,15)" fg:x="63309" fg:w="16"/><text x="81.7644%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="81.6792%" y="197" width="0.0142%" height="15" fill="rgb(252,88,28)" fg:x="63437" fg:w="11"/><text x="81.9292%" y="207.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (58 samples, 0.07%)</title><rect x="81.6947%" y="197" width="0.0747%" height="15" fill="rgb(212,127,14)" fg:x="63449" fg:w="58"/><text x="81.9447%" y="207.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (199 samples, 0.26%)</title><rect x="81.5350%" y="213" width="0.2562%" height="15" fill="rgb(247,145,37)" fg:x="63325" fg:w="199"/><text x="81.7850%" y="223.50"></text></g><g><title>rust_edit_history`serde_json::read::parse_escape (17 samples, 0.02%)</title><rect x="81.7694%" y="197" width="0.0219%" height="15" fill="rgb(209,117,53)" fg:x="63507" fg:w="17"/><text x="82.0194%" y="207.50"></text></g><g><title>rust_edit_history`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (37 samples, 0.05%)</title><rect x="81.7925%" y="213" width="0.0476%" height="15" fill="rgb(212,90,42)" fg:x="63525" fg:w="37"/><text x="82.0425%" y="223.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,746 samples, 2.25%)</title><rect x="79.5934%" y="245" width="2.2481%" height="15" fill="rgb(218,164,37)" fg:x="61817" fg:w="1746"/><text x="79.8434%" y="255.50">r..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (565 samples, 0.73%)</title><rect x="81.1140%" y="229" width="0.7275%" height="15" fill="rgb(246,65,34)" fg:x="62998" fg:w="565"/><text x="81.3640%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,404 samples, 4.38%)</title><rect x="77.4625%" y="277" width="4.3829%" height="15" fill="rgb(231,100,33)" fg:x="60162" fg:w="3404"/><text x="77.7125%" y="287.50">rust_..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,221 samples, 2.86%)</title><rect x="78.9857%" y="261" width="2.8597%" height="15" fill="rgb(228,126,14)" fg:x="61345" fg:w="2221"/><text x="79.2357%" y="271.50">ru..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (12 samples, 0.02%)</title><rect x="81.9548%" y="181" width="0.0155%" height="15" fill="rgb(215,173,21)" fg:x="63651" fg:w="12"/><text x="82.2048%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (9 samples, 0.01%)</title><rect x="81.9702%" y="181" width="0.0116%" height="15" fill="rgb(210,6,40)" fg:x="63663" fg:w="9"/><text x="82.2202%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (126 samples, 0.16%)</title><rect x="81.8659%" y="245" width="0.1622%" height="15" fill="rgb(212,48,18)" fg:x="63582" fg:w="126"/><text x="82.1159%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (124 samples, 0.16%)</title><rect x="81.8685%" y="229" width="0.1597%" height="15" fill="rgb(230,214,11)" fg:x="63584" fg:w="124"/><text x="82.1185%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (119 samples, 0.15%)</title><rect x="81.8750%" y="213" width="0.1532%" height="15" fill="rgb(254,105,39)" fg:x="63589" fg:w="119"/><text x="82.1250%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (119 samples, 0.15%)</title><rect x="81.8750%" y="197" width="0.1532%" height="15" fill="rgb(245,158,5)" fg:x="63589" fg:w="119"/><text x="82.1250%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (29 samples, 0.04%)</title><rect x="81.9908%" y="181" width="0.0373%" height="15" fill="rgb(249,208,11)" fg:x="63679" fg:w="29"/><text x="82.2408%" y="191.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (142 samples, 0.18%)</title><rect x="81.8466%" y="277" width="0.1828%" height="15" fill="rgb(210,39,28)" fg:x="63567" fg:w="142"/><text x="82.0966%" y="287.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::finish_grow (132 samples, 0.17%)</title><rect x="81.8595%" y="261" width="0.1700%" height="15" fill="rgb(211,56,53)" fg:x="63577" fg:w="132"/><text x="82.1095%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.02%)</title><rect x="82.3449%" y="197" width="0.0155%" height="15" fill="rgb(226,201,30)" fg:x="63954" fg:w="12"/><text x="82.5949%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (263 samples, 0.34%)</title><rect x="82.3604%" y="197" width="0.3386%" height="15" fill="rgb(239,101,34)" fg:x="63966" fg:w="263"/><text x="82.6104%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (252 samples, 0.32%)</title><rect x="82.3745%" y="181" width="0.3245%" height="15" fill="rgb(226,209,5)" fg:x="63977" fg:w="252"/><text x="82.6245%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (87 samples, 0.11%)</title><rect x="82.5870%" y="165" width="0.1120%" height="15" fill="rgb(250,105,47)" fg:x="64142" fg:w="87"/><text x="82.8370%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (291 samples, 0.37%)</title><rect x="82.3307%" y="213" width="0.3747%" height="15" fill="rgb(230,72,3)" fg:x="63943" fg:w="291"/><text x="82.5807%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (306 samples, 0.39%)</title><rect x="82.3140%" y="229" width="0.3940%" height="15" fill="rgb(232,218,39)" fg:x="63930" fg:w="306"/><text x="82.5640%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (12 samples, 0.02%)</title><rect x="82.7132%" y="229" width="0.0155%" height="15" fill="rgb(248,166,6)" fg:x="64240" fg:w="12"/><text x="82.9632%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (162 samples, 0.21%)</title><rect x="82.7286%" y="229" width="0.2086%" height="15" fill="rgb(247,89,20)" fg:x="64252" fg:w="162"/><text x="82.9786%" y="239.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (79 samples, 0.10%)</title><rect x="82.8355%" y="213" width="0.1017%" height="15" fill="rgb(248,130,54)" fg:x="64335" fg:w="79"/><text x="83.0855%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="82.9501%" y="181" width="0.0103%" height="15" fill="rgb(234,196,4)" fg:x="64424" fg:w="8"/><text x="83.2001%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (86 samples, 0.11%)</title><rect x="82.9604%" y="181" width="0.1107%" height="15" fill="rgb(250,143,31)" fg:x="64432" fg:w="86"/><text x="83.2104%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (84 samples, 0.11%)</title><rect x="82.9629%" y="165" width="0.1082%" height="15" fill="rgb(211,110,34)" fg:x="64434" fg:w="84"/><text x="83.2129%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.03%)</title><rect x="83.0363%" y="149" width="0.0348%" height="15" fill="rgb(215,124,48)" fg:x="64491" fg:w="27"/><text x="83.2863%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (99 samples, 0.13%)</title><rect x="82.9449%" y="197" width="0.1275%" height="15" fill="rgb(216,46,13)" fg:x="64420" fg:w="99"/><text x="83.1949%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (103 samples, 0.13%)</title><rect x="82.9411%" y="213" width="0.1326%" height="15" fill="rgb(205,184,25)" fg:x="64417" fg:w="103"/><text x="83.1911%" y="223.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (166 samples, 0.21%)</title><rect x="82.9372%" y="229" width="0.2137%" height="15" fill="rgb(228,1,10)" fg:x="64414" fg:w="166"/><text x="83.1872%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (57 samples, 0.07%)</title><rect x="83.0775%" y="213" width="0.0734%" height="15" fill="rgb(213,116,27)" fg:x="64523" fg:w="57"/><text x="83.3275%" y="223.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (33 samples, 0.04%)</title><rect x="83.1084%" y="197" width="0.0425%" height="15" fill="rgb(241,95,50)" fg:x="64547" fg:w="33"/><text x="83.3584%" y="207.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (701 samples, 0.90%)</title><rect x="82.2535%" y="245" width="0.9026%" height="15" fill="rgb(238,48,32)" fg:x="63883" fg:w="701"/><text x="82.5035%" y="255.50"></text></g><g><title>rust_edit_history`__rdl_alloc (9 samples, 0.01%)</title><rect x="83.1664%" y="245" width="0.0116%" height="15" fill="rgb(235,113,49)" fg:x="64592" fg:w="9"/><text x="83.4164%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.01%)</title><rect x="83.3724%" y="165" width="0.0142%" height="15" fill="rgb(205,127,43)" fg:x="64752" fg:w="11"/><text x="83.6224%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (37 samples, 0.05%)</title><rect x="83.3866%" y="165" width="0.0476%" height="15" fill="rgb(250,162,2)" fg:x="64763" fg:w="37"/><text x="83.6366%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="83.4149%" y="149" width="0.0193%" height="15" fill="rgb(220,13,41)" fg:x="64785" fg:w="15"/><text x="83.6649%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (25 samples, 0.03%)</title><rect x="83.4368%" y="165" width="0.0322%" height="15" fill="rgb(249,221,25)" fg:x="64802" fg:w="25"/><text x="83.6868%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (234 samples, 0.30%)</title><rect x="83.2514%" y="213" width="0.3013%" height="15" fill="rgb(215,208,19)" fg:x="64658" fg:w="234"/><text x="83.5014%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (229 samples, 0.29%)</title><rect x="83.2578%" y="197" width="0.2949%" height="15" fill="rgb(236,175,2)" fg:x="64663" fg:w="229"/><text x="83.5078%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (222 samples, 0.29%)</title><rect x="83.2668%" y="181" width="0.2858%" height="15" fill="rgb(241,52,2)" fg:x="64670" fg:w="222"/><text x="83.5168%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (65 samples, 0.08%)</title><rect x="83.4690%" y="165" width="0.0837%" height="15" fill="rgb(248,140,14)" fg:x="64827" fg:w="65"/><text x="83.7190%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (241 samples, 0.31%)</title><rect x="83.2449%" y="229" width="0.3103%" height="15" fill="rgb(253,22,42)" fg:x="64653" fg:w="241"/><text x="83.4949%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="83.6042%" y="213" width="0.0116%" height="15" fill="rgb(234,61,47)" fg:x="64932" fg:w="9"/><text x="83.8542%" y="223.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (172 samples, 0.22%)</title><rect x="83.5629%" y="229" width="0.2215%" height="15" fill="rgb(208,226,15)" fg:x="64900" fg:w="172"/><text x="83.8129%" y="239.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (129 samples, 0.17%)</title><rect x="83.6183%" y="213" width="0.1661%" height="15" fill="rgb(217,221,4)" fg:x="64943" fg:w="129"/><text x="83.8683%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (59 samples, 0.08%)</title><rect x="83.7084%" y="197" width="0.0760%" height="15" fill="rgb(212,174,34)" fg:x="65013" fg:w="59"/><text x="83.9584%" y="207.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (477 samples, 0.61%)</title><rect x="83.1780%" y="245" width="0.6142%" height="15" fill="rgb(253,83,4)" fg:x="64601" fg:w="477"/><text x="83.4280%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.01%)</title><rect x="84.1951%" y="165" width="0.0116%" height="15" fill="rgb(250,195,49)" fg:x="65391" fg:w="9"/><text x="84.4451%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (318 samples, 0.41%)</title><rect x="83.9248%" y="197" width="0.4094%" height="15" fill="rgb(241,192,25)" fg:x="65181" fg:w="318"/><text x="84.1748%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (309 samples, 0.40%)</title><rect x="83.9363%" y="181" width="0.3979%" height="15" fill="rgb(208,124,10)" fg:x="65190" fg:w="309"/><text x="84.1863%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (92 samples, 0.12%)</title><rect x="84.2157%" y="165" width="0.1185%" height="15" fill="rgb(222,33,0)" fg:x="65407" fg:w="92"/><text x="84.4657%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (343 samples, 0.44%)</title><rect x="83.8939%" y="213" width="0.4416%" height="15" fill="rgb(234,209,28)" fg:x="65157" fg:w="343"/><text x="84.1439%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (357 samples, 0.46%)</title><rect x="83.8823%" y="229" width="0.4597%" height="15" fill="rgb(224,11,23)" fg:x="65148" fg:w="357"/><text x="84.1323%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (40 samples, 0.05%)</title><rect x="84.3419%" y="229" width="0.0515%" height="15" fill="rgb(232,99,1)" fg:x="65505" fg:w="40"/><text x="84.5919%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (197 samples, 0.25%)</title><rect x="84.3960%" y="229" width="0.2537%" height="15" fill="rgb(237,95,45)" fg:x="65547" fg:w="197"/><text x="84.6460%" y="239.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (59 samples, 0.08%)</title><rect x="84.5737%" y="213" width="0.0760%" height="15" fill="rgb(208,109,11)" fg:x="65685" fg:w="59"/><text x="84.8237%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (125 samples, 0.16%)</title><rect x="84.7939%" y="181" width="0.1609%" height="15" fill="rgb(216,190,48)" fg:x="65856" fg:w="125"/><text x="85.0439%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (109 samples, 0.14%)</title><rect x="84.8145%" y="165" width="0.1403%" height="15" fill="rgb(251,171,36)" fg:x="65872" fg:w="109"/><text x="85.0645%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (105 samples, 0.14%)</title><rect x="84.8196%" y="149" width="0.1352%" height="15" fill="rgb(230,62,22)" fg:x="65876" fg:w="105"/><text x="85.0696%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (37 samples, 0.05%)</title><rect x="84.9072%" y="133" width="0.0476%" height="15" fill="rgb(225,114,35)" fg:x="65944" fg:w="37"/><text x="85.1572%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (131 samples, 0.17%)</title><rect x="84.7887%" y="197" width="0.1687%" height="15" fill="rgb(215,118,42)" fg:x="65852" fg:w="131"/><text x="85.0387%" y="207.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (43 samples, 0.06%)</title><rect x="84.9625%" y="197" width="0.0554%" height="15" fill="rgb(243,119,21)" fg:x="65987" fg:w="43"/><text x="85.2125%" y="207.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (19 samples, 0.02%)</title><rect x="84.9934%" y="181" width="0.0245%" height="15" fill="rgb(252,177,53)" fg:x="66011" fg:w="19"/><text x="85.2434%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (113 samples, 0.15%)</title><rect x="85.0230%" y="165" width="0.1455%" height="15" fill="rgb(237,209,29)" fg:x="66034" fg:w="113"/><text x="85.2730%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (99 samples, 0.13%)</title><rect x="85.0411%" y="149" width="0.1275%" height="15" fill="rgb(212,65,23)" fg:x="66048" fg:w="99"/><text x="85.2911%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (95 samples, 0.12%)</title><rect x="85.0462%" y="133" width="0.1223%" height="15" fill="rgb(230,222,46)" fg:x="66052" fg:w="95"/><text x="85.2962%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (33 samples, 0.04%)</title><rect x="85.1261%" y="117" width="0.0425%" height="15" fill="rgb(215,135,32)" fg:x="66114" fg:w="33"/><text x="85.3761%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc (116 samples, 0.15%)</title><rect x="85.0218%" y="181" width="0.1494%" height="15" fill="rgb(246,101,22)" fg:x="66033" fg:w="116"/><text x="85.2718%" y="191.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (49 samples, 0.06%)</title><rect x="85.1788%" y="181" width="0.0631%" height="15" fill="rgb(206,107,13)" fg:x="66155" fg:w="49"/><text x="85.4288%" y="191.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (23 samples, 0.03%)</title><rect x="85.2123%" y="165" width="0.0296%" height="15" fill="rgb(250,100,44)" fg:x="66181" fg:w="23"/><text x="85.4623%" y="175.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (175 samples, 0.23%)</title><rect x="85.0179%" y="197" width="0.2253%" height="15" fill="rgb(231,147,38)" fg:x="66030" fg:w="175"/><text x="85.2679%" y="207.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (386 samples, 0.50%)</title><rect x="84.7527%" y="213" width="0.4970%" height="15" fill="rgb(229,8,40)" fg:x="65824" fg:w="386"/><text x="85.0027%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.01%)</title><rect x="85.4248%" y="133" width="0.0142%" height="15" fill="rgb(221,135,30)" fg:x="66346" fg:w="11"/><text x="85.6748%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (45 samples, 0.06%)</title><rect x="85.4389%" y="133" width="0.0579%" height="15" fill="rgb(249,193,18)" fg:x="66357" fg:w="45"/><text x="85.6889%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (16 samples, 0.02%)</title><rect x="85.4763%" y="117" width="0.0206%" height="15" fill="rgb(209,133,39)" fg:x="66386" fg:w="16"/><text x="85.7263%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (28 samples, 0.04%)</title><rect x="85.4994%" y="133" width="0.0361%" height="15" fill="rgb(232,100,14)" fg:x="66404" fg:w="28"/><text x="85.7494%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (229 samples, 0.29%)</title><rect x="85.3140%" y="165" width="0.2949%" height="15" fill="rgb(224,185,1)" fg:x="66260" fg:w="229"/><text x="85.5640%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (226 samples, 0.29%)</title><rect x="85.3179%" y="149" width="0.2910%" height="15" fill="rgb(223,139,8)" fg:x="66263" fg:w="226"/><text x="85.5679%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (57 samples, 0.07%)</title><rect x="85.5355%" y="133" width="0.0734%" height="15" fill="rgb(232,213,38)" fg:x="66432" fg:w="57"/><text x="85.7855%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (236 samples, 0.30%)</title><rect x="85.3063%" y="181" width="0.3039%" height="15" fill="rgb(207,94,22)" fg:x="66254" fg:w="236"/><text x="85.5563%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc (245 samples, 0.32%)</title><rect x="85.2960%" y="197" width="0.3155%" height="15" fill="rgb(219,183,54)" fg:x="66246" fg:w="245"/><text x="85.5460%" y="207.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (77 samples, 0.10%)</title><rect x="85.6179%" y="197" width="0.0991%" height="15" fill="rgb(216,185,54)" fg:x="66496" fg:w="77"/><text x="85.8679%" y="207.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (50 samples, 0.06%)</title><rect x="85.6527%" y="181" width="0.0644%" height="15" fill="rgb(254,217,39)" fg:x="66523" fg:w="50"/><text x="85.9027%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="85.7067%" y="165" width="0.0103%" height="15" fill="rgb(240,178,23)" fg:x="66565" fg:w="8"/><text x="85.9567%" y="175.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (355 samples, 0.46%)</title><rect x="85.2625%" y="213" width="0.4571%" height="15" fill="rgb(218,11,47)" fg:x="66220" fg:w="355"/><text x="85.5125%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (145 samples, 0.19%)</title><rect x="85.7776%" y="181" width="0.1867%" height="15" fill="rgb(218,51,51)" fg:x="66620" fg:w="145"/><text x="86.0276%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (135 samples, 0.17%)</title><rect x="85.7904%" y="165" width="0.1738%" height="15" fill="rgb(238,126,27)" fg:x="66630" fg:w="135"/><text x="86.0404%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (132 samples, 0.17%)</title><rect x="85.7943%" y="149" width="0.1700%" height="15" fill="rgb(249,202,22)" fg:x="66633" fg:w="132"/><text x="86.0443%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.05%)</title><rect x="85.9102%" y="133" width="0.0541%" height="15" fill="rgb(254,195,49)" fg:x="66723" fg:w="42"/><text x="86.1602%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (155 samples, 0.20%)</title><rect x="85.7660%" y="197" width="0.1996%" height="15" fill="rgb(208,123,14)" fg:x="66611" fg:w="155"/><text x="86.0160%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (14 samples, 0.02%)</title><rect x="85.9655%" y="197" width="0.0180%" height="15" fill="rgb(224,200,8)" fg:x="66766" fg:w="14"/><text x="86.2155%" y="207.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (78 samples, 0.10%)</title><rect x="85.9887%" y="197" width="0.1004%" height="15" fill="rgb(217,61,36)" fg:x="66784" fg:w="78"/><text x="86.2387%" y="207.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (32 samples, 0.04%)</title><rect x="86.0479%" y="181" width="0.0412%" height="15" fill="rgb(206,35,45)" fg:x="66830" fg:w="32"/><text x="86.2979%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (331 samples, 0.43%)</title><rect x="86.3892%" y="133" width="0.4262%" height="15" fill="rgb(217,65,33)" fg:x="67095" fg:w="331"/><text x="86.6392%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (319 samples, 0.41%)</title><rect x="86.4046%" y="117" width="0.4107%" height="15" fill="rgb(222,158,48)" fg:x="67107" fg:w="319"/><text x="86.6546%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (98 samples, 0.13%)</title><rect x="86.6892%" y="101" width="0.1262%" height="15" fill="rgb(254,2,54)" fg:x="67328" fg:w="98"/><text x="86.9392%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (367 samples, 0.47%)</title><rect x="86.3454%" y="149" width="0.4725%" height="15" fill="rgb(250,143,38)" fg:x="67061" fg:w="367"/><text x="86.5954%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (387 samples, 0.50%)</title><rect x="86.3248%" y="165" width="0.4983%" height="15" fill="rgb(248,25,0)" fg:x="67045" fg:w="387"/><text x="86.5748%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (23 samples, 0.03%)</title><rect x="86.8256%" y="165" width="0.0296%" height="15" fill="rgb(206,152,27)" fg:x="67434" fg:w="23"/><text x="87.0756%" y="175.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (226 samples, 0.29%)</title><rect x="86.8553%" y="165" width="0.2910%" height="15" fill="rgb(240,77,30)" fg:x="67457" fg:w="226"/><text x="87.1053%" y="175.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (97 samples, 0.12%)</title><rect x="87.0213%" y="149" width="0.1249%" height="15" fill="rgb(231,5,3)" fg:x="67586" fg:w="97"/><text x="87.2713%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (94 samples, 0.12%)</title><rect x="87.1578%" y="133" width="0.1210%" height="15" fill="rgb(207,226,32)" fg:x="67692" fg:w="94"/><text x="87.4078%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (87 samples, 0.11%)</title><rect x="87.1668%" y="117" width="0.1120%" height="15" fill="rgb(222,207,47)" fg:x="67699" fg:w="87"/><text x="87.4168%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (82 samples, 0.11%)</title><rect x="87.1733%" y="101" width="0.1056%" height="15" fill="rgb(229,115,45)" fg:x="67704" fg:w="82"/><text x="87.4233%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.03%)</title><rect x="87.2492%" y="85" width="0.0296%" height="15" fill="rgb(224,191,6)" fg:x="67763" fg:w="23"/><text x="87.4992%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (100 samples, 0.13%)</title><rect x="87.1527%" y="149" width="0.1288%" height="15" fill="rgb(230,227,24)" fg:x="67688" fg:w="100"/><text x="87.4027%" y="159.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (60 samples, 0.08%)</title><rect x="87.2866%" y="149" width="0.0773%" height="15" fill="rgb(228,80,19)" fg:x="67792" fg:w="60"/><text x="87.5366%" y="159.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (23 samples, 0.03%)</title><rect x="87.3342%" y="133" width="0.0296%" height="15" fill="rgb(247,229,0)" fg:x="67829" fg:w="23"/><text x="87.5842%" y="143.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (170 samples, 0.22%)</title><rect x="87.1462%" y="165" width="0.2189%" height="15" fill="rgb(237,194,15)" fg:x="67683" fg:w="170"/><text x="87.3962%" y="175.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (860 samples, 1.11%)</title><rect x="86.2643%" y="181" width="1.1073%" height="15" fill="rgb(219,203,20)" fg:x="66998" fg:w="860"/><text x="86.5143%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.02%)</title><rect x="87.6265%" y="101" width="0.0180%" height="15" fill="rgb(234,128,8)" fg:x="68056" fg:w="14"/><text x="87.8765%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (50 samples, 0.06%)</title><rect x="87.6445%" y="101" width="0.0644%" height="15" fill="rgb(248,202,8)" fg:x="68070" fg:w="50"/><text x="87.8945%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="87.6896%" y="85" width="0.0193%" height="15" fill="rgb(206,104,37)" fg:x="68105" fg:w="15"/><text x="87.9396%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (26 samples, 0.03%)</title><rect x="87.7102%" y="101" width="0.0335%" height="15" fill="rgb(223,8,27)" fg:x="68121" fg:w="26"/><text x="87.9602%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (257 samples, 0.33%)</title><rect x="87.4823%" y="149" width="0.3309%" height="15" fill="rgb(216,217,28)" fg:x="67944" fg:w="257"/><text x="87.7323%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (250 samples, 0.32%)</title><rect x="87.4913%" y="133" width="0.3219%" height="15" fill="rgb(249,199,1)" fg:x="67951" fg:w="250"/><text x="87.7413%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (244 samples, 0.31%)</title><rect x="87.4990%" y="117" width="0.3142%" height="15" fill="rgb(240,85,17)" fg:x="67957" fg:w="244"/><text x="87.7490%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (54 samples, 0.07%)</title><rect x="87.7437%" y="101" width="0.0695%" height="15" fill="rgb(206,108,45)" fg:x="68147" fg:w="54"/><text x="87.9937%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (260 samples, 0.33%)</title><rect x="87.4797%" y="165" width="0.3348%" height="15" fill="rgb(245,210,41)" fg:x="67942" fg:w="260"/><text x="87.7297%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (11 samples, 0.01%)</title><rect x="87.8145%" y="165" width="0.0142%" height="15" fill="rgb(206,13,37)" fg:x="68202" fg:w="11"/><text x="88.0645%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="87.8750%" y="149" width="0.0142%" height="15" fill="rgb(250,61,18)" fg:x="68249" fg:w="11"/><text x="88.1250%" y="159.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (172 samples, 0.22%)</title><rect x="87.8287%" y="165" width="0.2215%" height="15" fill="rgb(235,172,48)" fg:x="68213" fg:w="172"/><text x="88.0787%" y="175.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (123 samples, 0.16%)</title><rect x="87.8917%" y="149" width="0.1584%" height="15" fill="rgb(249,201,17)" fg:x="68262" fg:w="123"/><text x="88.1417%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (44 samples, 0.06%)</title><rect x="87.9935%" y="133" width="0.0567%" height="15" fill="rgb(219,208,6)" fg:x="68341" fg:w="44"/><text x="88.2435%" y="143.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (514 samples, 0.66%)</title><rect x="87.3896%" y="181" width="0.6618%" height="15" fill="rgb(248,31,23)" fg:x="67872" fg:w="514"/><text x="87.6396%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (14 samples, 0.02%)</title><rect x="88.3578%" y="101" width="0.0180%" height="15" fill="rgb(245,15,42)" fg:x="68624" fg:w="14"/><text x="88.6078%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (216 samples, 0.28%)</title><rect x="88.1995%" y="133" width="0.2781%" height="15" fill="rgb(222,217,39)" fg:x="68501" fg:w="216"/><text x="88.4495%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (212 samples, 0.27%)</title><rect x="88.2046%" y="117" width="0.2730%" height="15" fill="rgb(210,219,27)" fg:x="68505" fg:w="212"/><text x="88.4546%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (67 samples, 0.09%)</title><rect x="88.3913%" y="101" width="0.0863%" height="15" fill="rgb(252,166,36)" fg:x="68650" fg:w="67"/><text x="88.6413%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (235 samples, 0.30%)</title><rect x="88.1763%" y="149" width="0.3026%" height="15" fill="rgb(245,132,34)" fg:x="68483" fg:w="235"/><text x="88.4263%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (241 samples, 0.31%)</title><rect x="88.1711%" y="165" width="0.3103%" height="15" fill="rgb(236,54,3)" fg:x="68479" fg:w="241"/><text x="88.4211%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (9 samples, 0.01%)</title><rect x="88.4814%" y="165" width="0.0116%" height="15" fill="rgb(241,173,43)" fg:x="68720" fg:w="9"/><text x="88.7314%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (21 samples, 0.03%)</title><rect x="88.6772%" y="149" width="0.0270%" height="15" fill="rgb(215,190,9)" fg:x="68872" fg:w="21"/><text x="88.9272%" y="159.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (56 samples, 0.07%)</title><rect x="88.7042%" y="149" width="0.0721%" height="15" fill="rgb(242,101,16)" fg:x="68893" fg:w="56"/><text x="88.9542%" y="159.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (235 samples, 0.30%)</title><rect x="88.4930%" y="165" width="0.3026%" height="15" fill="rgb(223,190,21)" fg:x="68729" fg:w="235"/><text x="88.7430%" y="175.50"></text></g><g><title>rust_edit_history`serde_json::read::parse_escape (15 samples, 0.02%)</title><rect x="88.7763%" y="149" width="0.0193%" height="15" fill="rgb(215,228,25)" fg:x="68949" fg:w="15"/><text x="89.0263%" y="159.50"></text></g><g><title>rust_edit_history`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (38 samples, 0.05%)</title><rect x="88.8008%" y="165" width="0.0489%" height="15" fill="rgb(225,36,22)" fg:x="68968" fg:w="38"/><text x="89.0508%" y="175.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (2,145 samples, 2.76%)</title><rect x="86.0892%" y="197" width="2.7618%" height="15" fill="rgb(251,106,46)" fg:x="66862" fg:w="2145"/><text x="86.3392%" y="207.50">ru..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (612 samples, 0.79%)</title><rect x="88.0630%" y="181" width="0.7880%" height="15" fill="rgb(208,90,1)" fg:x="68395" fg:w="612"/><text x="88.3130%" y="191.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,270 samples, 4.21%)</title><rect x="84.6497%" y="229" width="4.2103%" height="15" fill="rgb(243,10,4)" fg:x="65744" fg:w="3270"/><text x="84.8997%" y="239.50">rust_..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,439 samples, 3.14%)</title><rect x="85.7196%" y="213" width="3.1404%" height="15" fill="rgb(212,137,27)" fg:x="66575" fg:w="2439"/><text x="85.9696%" y="223.50">rus..</text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,272 samples, 6.79%)</title><rect x="82.0784%" y="261" width="6.7880%" height="15" fill="rgb(231,220,49)" fg:x="63747" fg:w="5272"/><text x="82.3284%" y="271.50">rust_edit..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (3,938 samples, 5.07%)</title><rect x="83.7960%" y="245" width="5.0704%" height="15" fill="rgb(237,96,20)" fg:x="65081" fg:w="3938"/><text x="84.0460%" y="255.50">rust_e..</text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (12,456 samples, 16.04%)</title><rect x="72.8311%" y="309" width="16.0379%" height="15" fill="rgb(239,229,30)" fg:x="56565" fg:w="12456"/><text x="73.0811%" y="319.50">rust_edit_history`&lt;serde_..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (9,931 samples, 12.79%)</title><rect x="76.0822%" y="293" width="12.7868%" height="15" fill="rgb(219,65,33)" fg:x="59090" fg:w="9931"/><text x="76.3322%" y="303.50">rust_edit_history`s..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (5,308 samples, 6.83%)</title><rect x="82.0346%" y="277" width="6.8344%" height="15" fill="rgb(243,134,7)" fg:x="63713" fg:w="5308"/><text x="82.2846%" y="287.50">rust_edit..</text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.01%)</title><rect x="88.9179%" y="245" width="0.0129%" height="15" fill="rgb(216,177,54)" fg:x="69059" fg:w="10"/><text x="89.1679%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (20 samples, 0.03%)</title><rect x="89.0557%" y="213" width="0.0258%" height="15" fill="rgb(211,160,20)" fg:x="69166" fg:w="20"/><text x="89.3057%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (17 samples, 0.02%)</title><rect x="89.0815%" y="213" width="0.0219%" height="15" fill="rgb(239,85,39)" fg:x="69186" fg:w="17"/><text x="89.3315%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (11 samples, 0.01%)</title><rect x="89.1072%" y="213" width="0.0142%" height="15" fill="rgb(232,125,22)" fg:x="69206" fg:w="11"/><text x="89.3572%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (208 samples, 0.27%)</title><rect x="88.9128%" y="261" width="0.2678%" height="15" fill="rgb(244,57,34)" fg:x="69055" fg:w="208"/><text x="89.1628%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (194 samples, 0.25%)</title><rect x="88.9308%" y="245" width="0.2498%" height="15" fill="rgb(214,203,32)" fg:x="69069" fg:w="194"/><text x="89.1808%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (188 samples, 0.24%)</title><rect x="88.9385%" y="229" width="0.2421%" height="15" fill="rgb(207,58,43)" fg:x="69075" fg:w="188"/><text x="89.1885%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (46 samples, 0.06%)</title><rect x="89.1214%" y="213" width="0.0592%" height="15" fill="rgb(215,193,15)" fg:x="69217" fg:w="46"/><text x="89.3714%" y="223.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (241 samples, 0.31%)</title><rect x="88.8742%" y="309" width="0.3103%" height="15" fill="rgb(232,15,44)" fg:x="69025" fg:w="241"/><text x="89.1242%" y="319.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::finish_grow (229 samples, 0.29%)</title><rect x="88.8896%" y="293" width="0.2949%" height="15" fill="rgb(212,3,48)" fg:x="69037" fg:w="229"/><text x="89.1396%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc (216 samples, 0.28%)</title><rect x="88.9063%" y="277" width="0.2781%" height="15" fill="rgb(218,128,7)" fg:x="69050" fg:w="216"/><text x="89.1563%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc (104 samples, 0.13%)</title><rect x="89.2437%" y="293" width="0.1339%" height="15" fill="rgb(226,216,39)" fg:x="69312" fg:w="104"/><text x="89.4937%" y="303.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (103 samples, 0.13%)</title><rect x="89.2450%" y="277" width="0.1326%" height="15" fill="rgb(243,47,51)" fg:x="69313" fg:w="103"/><text x="89.4950%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (97 samples, 0.12%)</title><rect x="89.2527%" y="261" width="0.1249%" height="15" fill="rgb(241,183,40)" fg:x="69319" fg:w="97"/><text x="89.5027%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (92 samples, 0.12%)</title><rect x="89.2591%" y="245" width="0.1185%" height="15" fill="rgb(231,217,32)" fg:x="69324" fg:w="92"/><text x="89.5091%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.05%)</title><rect x="89.3287%" y="229" width="0.0489%" height="15" fill="rgb(229,61,38)" fg:x="69378" fg:w="38"/><text x="89.5787%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (47 samples, 0.06%)</title><rect x="89.3840%" y="293" width="0.0605%" height="15" fill="rgb(225,210,5)" fg:x="69421" fg:w="47"/><text x="89.6340%" y="303.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (16 samples, 0.02%)</title><rect x="89.4239%" y="277" width="0.0206%" height="15" fill="rgb(231,79,45)" fg:x="69452" fg:w="16"/><text x="89.6739%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (125 samples, 0.16%)</title><rect x="89.5759%" y="245" width="0.1609%" height="15" fill="rgb(224,100,7)" fg:x="69570" fg:w="125"/><text x="89.8259%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (116 samples, 0.15%)</title><rect x="89.5875%" y="229" width="0.1494%" height="15" fill="rgb(241,198,18)" fg:x="69579" fg:w="116"/><text x="89.8375%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (110 samples, 0.14%)</title><rect x="89.5952%" y="213" width="0.1416%" height="15" fill="rgb(252,97,53)" fg:x="69585" fg:w="110"/><text x="89.8452%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (35 samples, 0.05%)</title><rect x="89.6918%" y="197" width="0.0451%" height="15" fill="rgb(220,88,7)" fg:x="69660" fg:w="35"/><text x="89.9418%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (135 samples, 0.17%)</title><rect x="89.5656%" y="261" width="0.1738%" height="15" fill="rgb(213,176,14)" fg:x="69562" fg:w="135"/><text x="89.8156%" y="271.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="89.7394%" y="261" width="0.0232%" height="15" fill="rgb(246,73,7)" fg:x="69697" fg:w="18"/><text x="89.9894%" y="271.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (99 samples, 0.13%)</title><rect x="89.7626%" y="261" width="0.1275%" height="15" fill="rgb(245,64,36)" fg:x="69715" fg:w="99"/><text x="90.0126%" y="271.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (41 samples, 0.05%)</title><rect x="89.8373%" y="245" width="0.0528%" height="15" fill="rgb(245,80,10)" fg:x="69773" fg:w="41"/><text x="90.0873%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (74 samples, 0.10%)</title><rect x="89.9003%" y="245" width="0.0953%" height="15" fill="rgb(232,107,50)" fg:x="69822" fg:w="74"/><text x="90.1503%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (73 samples, 0.09%)</title><rect x="89.9016%" y="229" width="0.0940%" height="15" fill="rgb(253,3,0)" fg:x="69823" fg:w="73"/><text x="90.1516%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (67 samples, 0.09%)</title><rect x="89.9094%" y="213" width="0.0863%" height="15" fill="rgb(212,99,53)" fg:x="69829" fg:w="67"/><text x="90.1594%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (63 samples, 0.08%)</title><rect x="89.9145%" y="197" width="0.0811%" height="15" fill="rgb(249,111,54)" fg:x="69833" fg:w="63"/><text x="90.1645%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (27 samples, 0.03%)</title><rect x="89.9609%" y="181" width="0.0348%" height="15" fill="rgb(249,55,30)" fg:x="69869" fg:w="27"/><text x="90.2109%" y="191.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (112 samples, 0.14%)</title><rect x="89.8900%" y="261" width="0.1442%" height="15" fill="rgb(237,47,42)" fg:x="69814" fg:w="112"/><text x="90.1400%" y="271.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (27 samples, 0.03%)</title><rect x="89.9995%" y="245" width="0.0348%" height="15" fill="rgb(211,20,18)" fg:x="69899" fg:w="27"/><text x="90.2495%" y="255.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (18 samples, 0.02%)</title><rect x="90.0111%" y="229" width="0.0232%" height="15" fill="rgb(231,203,46)" fg:x="69908" fg:w="18"/><text x="90.2611%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (392 samples, 0.50%)</title><rect x="89.5347%" y="277" width="0.5047%" height="15" fill="rgb(237,142,3)" fg:x="69538" fg:w="392"/><text x="89.7847%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (8 samples, 0.01%)</title><rect x="90.1733%" y="197" width="0.0103%" height="15" fill="rgb(241,107,1)" fg:x="70034" fg:w="8"/><text x="90.4233%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (30 samples, 0.04%)</title><rect x="90.1836%" y="197" width="0.0386%" height="15" fill="rgb(229,83,13)" fg:x="70042" fg:w="30"/><text x="90.4336%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.01%)</title><rect x="90.2081%" y="181" width="0.0142%" height="15" fill="rgb(241,91,40)" fg:x="70061" fg:w="11"/><text x="90.4581%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (10 samples, 0.01%)</title><rect x="90.2222%" y="197" width="0.0129%" height="15" fill="rgb(225,3,45)" fg:x="70072" fg:w="10"/><text x="90.4722%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (148 samples, 0.19%)</title><rect x="90.0986%" y="245" width="0.1906%" height="15" fill="rgb(244,223,14)" fg:x="69976" fg:w="148"/><text x="90.3486%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (145 samples, 0.19%)</title><rect x="90.1025%" y="229" width="0.1867%" height="15" fill="rgb(224,124,37)" fg:x="69979" fg:w="145"/><text x="90.3525%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (145 samples, 0.19%)</title><rect x="90.1025%" y="213" width="0.1867%" height="15" fill="rgb(251,171,30)" fg:x="69979" fg:w="145"/><text x="90.3525%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (42 samples, 0.05%)</title><rect x="90.2351%" y="197" width="0.0541%" height="15" fill="rgb(236,46,54)" fg:x="70082" fg:w="42"/><text x="90.4851%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc (150 samples, 0.19%)</title><rect x="90.0973%" y="261" width="0.1931%" height="15" fill="rgb(245,213,5)" fg:x="69975" fg:w="150"/><text x="90.3473%" y="271.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (47 samples, 0.06%)</title><rect x="90.2995%" y="261" width="0.0605%" height="15" fill="rgb(230,144,27)" fg:x="70132" fg:w="47"/><text x="90.5495%" y="271.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (29 samples, 0.04%)</title><rect x="90.3227%" y="245" width="0.0373%" height="15" fill="rgb(220,86,6)" fg:x="70150" fg:w="29"/><text x="90.5727%" y="255.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (239 samples, 0.31%)</title><rect x="90.0536%" y="277" width="0.3077%" height="15" fill="rgb(240,20,13)" fg:x="69941" fg:w="239"/><text x="90.3036%" y="287.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (11 samples, 0.01%)</title><rect x="90.5531%" y="197" width="0.0142%" height="15" fill="rgb(217,89,34)" fg:x="70329" fg:w="11"/><text x="90.8031%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (84 samples, 0.11%)</title><rect x="90.4939%" y="229" width="0.1082%" height="15" fill="rgb(229,13,5)" fg:x="70283" fg:w="84"/><text x="90.7439%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (78 samples, 0.10%)</title><rect x="90.5016%" y="213" width="0.1004%" height="15" fill="rgb(244,67,35)" fg:x="70289" fg:w="78"/><text x="90.7516%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (24 samples, 0.03%)</title><rect x="90.5712%" y="197" width="0.0309%" height="15" fill="rgb(221,40,2)" fg:x="70343" fg:w="24"/><text x="90.8212%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (93 samples, 0.12%)</title><rect x="90.4836%" y="245" width="0.1197%" height="15" fill="rgb(237,157,21)" fg:x="70275" fg:w="93"/><text x="90.7336%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc (97 samples, 0.12%)</title><rect x="90.4797%" y="261" width="0.1249%" height="15" fill="rgb(222,94,11)" fg:x="70272" fg:w="97"/><text x="90.7297%" y="271.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (87 samples, 0.11%)</title><rect x="90.6149%" y="261" width="0.1120%" height="15" fill="rgb(249,113,6)" fg:x="70377" fg:w="87"/><text x="90.8649%" y="271.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (16 samples, 0.02%)</title><rect x="90.7064%" y="245" width="0.0206%" height="15" fill="rgb(238,137,36)" fg:x="70448" fg:w="16"/><text x="90.9564%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (72 samples, 0.09%)</title><rect x="90.8235%" y="213" width="0.0927%" height="15" fill="rgb(210,102,26)" fg:x="70539" fg:w="72"/><text x="91.0735%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (62 samples, 0.08%)</title><rect x="90.8364%" y="197" width="0.0798%" height="15" fill="rgb(218,30,30)" fg:x="70549" fg:w="62"/><text x="91.0864%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (61 samples, 0.08%)</title><rect x="90.8377%" y="181" width="0.0785%" height="15" fill="rgb(214,67,26)" fg:x="70550" fg:w="61"/><text x="91.0877%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (19 samples, 0.02%)</title><rect x="90.8918%" y="165" width="0.0245%" height="15" fill="rgb(251,9,53)" fg:x="70592" fg:w="19"/><text x="91.1418%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (77 samples, 0.10%)</title><rect x="90.8184%" y="229" width="0.0991%" height="15" fill="rgb(228,204,25)" fg:x="70535" fg:w="77"/><text x="91.0684%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (44 samples, 0.06%)</title><rect x="90.9265%" y="229" width="0.0567%" height="15" fill="rgb(207,153,8)" fg:x="70619" fg:w="44"/><text x="91.1765%" y="239.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (22 samples, 0.03%)</title><rect x="90.9549%" y="213" width="0.0283%" height="15" fill="rgb(242,9,16)" fg:x="70641" fg:w="22"/><text x="91.2049%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (83 samples, 0.11%)</title><rect x="90.9922%" y="197" width="0.1069%" height="15" fill="rgb(217,211,10)" fg:x="70670" fg:w="83"/><text x="91.2422%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (78 samples, 0.10%)</title><rect x="90.9986%" y="181" width="0.1004%" height="15" fill="rgb(219,228,52)" fg:x="70675" fg:w="78"/><text x="91.2486%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (74 samples, 0.10%)</title><rect x="91.0038%" y="165" width="0.0953%" height="15" fill="rgb(231,92,29)" fg:x="70679" fg:w="74"/><text x="91.2538%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (25 samples, 0.03%)</title><rect x="91.0669%" y="149" width="0.0322%" height="15" fill="rgb(232,8,23)" fg:x="70728" fg:w="25"/><text x="91.3169%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (88 samples, 0.11%)</title><rect x="90.9870%" y="213" width="0.1133%" height="15" fill="rgb(216,211,34)" fg:x="70666" fg:w="88"/><text x="91.2370%" y="223.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (30 samples, 0.04%)</title><rect x="91.1068%" y="213" width="0.0386%" height="15" fill="rgb(236,151,0)" fg:x="70759" fg:w="30"/><text x="91.3568%" y="223.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (14 samples, 0.02%)</title><rect x="91.1274%" y="197" width="0.0180%" height="15" fill="rgb(209,168,3)" fg:x="70775" fg:w="14"/><text x="91.3774%" y="207.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (127 samples, 0.16%)</title><rect x="90.9832%" y="229" width="0.1635%" height="15" fill="rgb(208,129,28)" fg:x="70663" fg:w="127"/><text x="91.2332%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (280 samples, 0.36%)</title><rect x="90.7875%" y="245" width="0.3605%" height="15" fill="rgb(229,78,22)" fg:x="70511" fg:w="280"/><text x="91.0375%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (25 samples, 0.03%)</title><rect x="91.2716%" y="165" width="0.0322%" height="15" fill="rgb(228,187,13)" fg:x="70887" fg:w="25"/><text x="91.5216%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (11 samples, 0.01%)</title><rect x="91.2896%" y="149" width="0.0142%" height="15" fill="rgb(240,119,24)" fg:x="70901" fg:w="11"/><text x="91.5396%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (14 samples, 0.02%)</title><rect x="91.3051%" y="165" width="0.0180%" height="15" fill="rgb(209,194,42)" fg:x="70913" fg:w="14"/><text x="91.5551%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (133 samples, 0.17%)</title><rect x="91.1956%" y="213" width="0.1712%" height="15" fill="rgb(247,200,46)" fg:x="70828" fg:w="133"/><text x="91.4456%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (126 samples, 0.16%)</title><rect x="91.2046%" y="197" width="0.1622%" height="15" fill="rgb(218,76,16)" fg:x="70835" fg:w="126"/><text x="91.4546%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (124 samples, 0.16%)</title><rect x="91.2072%" y="181" width="0.1597%" height="15" fill="rgb(225,21,48)" fg:x="70837" fg:w="124"/><text x="91.4572%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (34 samples, 0.04%)</title><rect x="91.3231%" y="165" width="0.0438%" height="15" fill="rgb(239,223,50)" fg:x="70927" fg:w="34"/><text x="91.5731%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (136 samples, 0.18%)</title><rect x="91.1943%" y="229" width="0.1751%" height="15" fill="rgb(244,45,21)" fg:x="70827" fg:w="136"/><text x="91.4443%" y="239.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (54 samples, 0.07%)</title><rect x="91.3733%" y="229" width="0.0695%" height="15" fill="rgb(232,33,43)" fg:x="70966" fg:w="54"/><text x="91.6233%" y="239.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (44 samples, 0.06%)</title><rect x="91.3862%" y="213" width="0.0567%" height="15" fill="rgb(209,8,3)" fg:x="70976" fg:w="44"/><text x="91.6362%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (11 samples, 0.01%)</title><rect x="91.4287%" y="197" width="0.0142%" height="15" fill="rgb(214,25,53)" fg:x="71009" fg:w="11"/><text x="91.6787%" y="207.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (226 samples, 0.29%)</title><rect x="91.1557%" y="245" width="0.2910%" height="15" fill="rgb(254,186,54)" fg:x="70797" fg:w="226"/><text x="91.4057%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (16 samples, 0.02%)</title><rect x="91.7132%" y="133" width="0.0206%" height="15" fill="rgb(208,174,49)" fg:x="71230" fg:w="16"/><text x="91.9632%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (13 samples, 0.02%)</title><rect x="91.7338%" y="133" width="0.0167%" height="15" fill="rgb(233,191,51)" fg:x="71246" fg:w="13"/><text x="91.9838%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (10 samples, 0.01%)</title><rect x="91.7531%" y="133" width="0.0129%" height="15" fill="rgb(222,134,10)" fg:x="71261" fg:w="10"/><text x="92.0031%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (210 samples, 0.27%)</title><rect x="91.5446%" y="181" width="0.2704%" height="15" fill="rgb(230,226,20)" fg:x="71099" fg:w="210"/><text x="91.7946%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (198 samples, 0.25%)</title><rect x="91.5600%" y="165" width="0.2549%" height="15" fill="rgb(251,111,25)" fg:x="71111" fg:w="198"/><text x="91.8100%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (187 samples, 0.24%)</title><rect x="91.5742%" y="149" width="0.2408%" height="15" fill="rgb(224,40,46)" fg:x="71122" fg:w="187"/><text x="91.8242%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.05%)</title><rect x="91.7660%" y="133" width="0.0489%" height="15" fill="rgb(236,108,47)" fg:x="71271" fg:w="38"/><text x="92.0160%" y="143.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (233 samples, 0.30%)</title><rect x="91.5162%" y="229" width="0.3000%" height="15" fill="rgb(234,93,0)" fg:x="71077" fg:w="233"/><text x="91.7662%" y="239.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::finish_grow (224 samples, 0.29%)</title><rect x="91.5278%" y="213" width="0.2884%" height="15" fill="rgb(224,213,32)" fg:x="71086" fg:w="224"/><text x="91.7778%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`malloc (217 samples, 0.28%)</title><rect x="91.5368%" y="197" width="0.2794%" height="15" fill="rgb(251,11,48)" fg:x="71093" fg:w="217"/><text x="91.7868%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (8 samples, 0.01%)</title><rect x="92.0454%" y="197" width="0.0103%" height="15" fill="rgb(236,173,5)" fg:x="71488" fg:w="8"/><text x="92.2954%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (11 samples, 0.01%)</title><rect x="92.1871%" y="149" width="0.0142%" height="15" fill="rgb(230,95,12)" fg:x="71598" fg:w="11"/><text x="92.4371%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (396 samples, 0.51%)</title><rect x="92.2012%" y="149" width="0.5099%" height="15" fill="rgb(232,209,1)" fg:x="71609" fg:w="396"/><text x="92.4512%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (377 samples, 0.49%)</title><rect x="92.2257%" y="133" width="0.4854%" height="15" fill="rgb(232,6,1)" fg:x="71628" fg:w="377"/><text x="92.4757%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (139 samples, 0.18%)</title><rect x="92.5321%" y="117" width="0.1790%" height="15" fill="rgb(210,224,50)" fg:x="71866" fg:w="139"/><text x="92.7821%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (430 samples, 0.55%)</title><rect x="92.1626%" y="165" width="0.5537%" height="15" fill="rgb(228,127,35)" fg:x="71579" fg:w="430"/><text x="92.4126%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (458 samples, 0.59%)</title><rect x="92.1381%" y="181" width="0.5897%" height="15" fill="rgb(245,102,45)" fg:x="71560" fg:w="458"/><text x="92.3881%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.01%)</title><rect x="92.7162%" y="165" width="0.0116%" height="15" fill="rgb(214,1,49)" fg:x="72009" fg:w="9"/><text x="92.9662%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (17 samples, 0.02%)</title><rect x="92.7291%" y="181" width="0.0219%" height="15" fill="rgb(226,163,40)" fg:x="72019" fg:w="17"/><text x="92.9791%" y="191.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (212 samples, 0.27%)</title><rect x="92.7510%" y="181" width="0.2730%" height="15" fill="rgb(239,212,28)" fg:x="72036" fg:w="212"/><text x="93.0010%" y="191.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (100 samples, 0.13%)</title><rect x="92.8952%" y="165" width="0.1288%" height="15" fill="rgb(220,20,13)" fg:x="72148" fg:w="100"/><text x="93.1452%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.01%)</title><rect x="93.0484%" y="133" width="0.0129%" height="15" fill="rgb(210,164,35)" fg:x="72267" fg:w="10"/><text x="93.2984%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (115 samples, 0.15%)</title><rect x="93.0613%" y="133" width="0.1481%" height="15" fill="rgb(248,109,41)" fg:x="72277" fg:w="115"/><text x="93.3113%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (109 samples, 0.14%)</title><rect x="93.0690%" y="117" width="0.1403%" height="15" fill="rgb(238,23,50)" fg:x="72283" fg:w="109"/><text x="93.3190%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (32 samples, 0.04%)</title><rect x="93.1682%" y="101" width="0.0412%" height="15" fill="rgb(211,48,49)" fg:x="72360" fg:w="32"/><text x="93.4182%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (135 samples, 0.17%)</title><rect x="93.0381%" y="149" width="0.1738%" height="15" fill="rgb(223,36,21)" fg:x="72259" fg:w="135"/><text x="93.2881%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`malloc (140 samples, 0.18%)</title><rect x="93.0343%" y="165" width="0.1803%" height="15" fill="rgb(207,123,46)" fg:x="72256" fg:w="140"/><text x="93.2843%" y="175.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (65 samples, 0.08%)</title><rect x="93.2248%" y="165" width="0.0837%" height="15" fill="rgb(240,218,32)" fg:x="72404" fg:w="65"/><text x="93.4748%" y="175.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (31 samples, 0.04%)</title><rect x="93.2686%" y="149" width="0.0399%" height="15" fill="rgb(252,5,43)" fg:x="72438" fg:w="31"/><text x="93.5186%" y="159.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (222 samples, 0.29%)</title><rect x="93.0240%" y="181" width="0.2858%" height="15" fill="rgb(252,84,19)" fg:x="72248" fg:w="222"/><text x="93.2740%" y="191.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (987 samples, 1.27%)</title><rect x="92.0557%" y="197" width="1.2708%" height="15" fill="rgb(243,152,39)" fg:x="71496" fg:w="987"/><text x="92.3057%" y="207.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (9 samples, 0.01%)</title><rect x="93.3150%" y="181" width="0.0116%" height="15" fill="rgb(234,160,15)" fg:x="72474" fg:w="9"/><text x="93.5650%" y="191.50"></text></g><g><title>rust_edit_history`__rdl_alloc (9 samples, 0.01%)</title><rect x="93.3472%" y="197" width="0.0116%" height="15" fill="rgb(237,34,20)" fg:x="72499" fg:w="9"/><text x="93.5972%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (20 samples, 0.03%)</title><rect x="93.6549%" y="117" width="0.0258%" height="15" fill="rgb(229,97,13)" fg:x="72738" fg:w="20"/><text x="93.9049%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (61 samples, 0.08%)</title><rect x="93.6806%" y="117" width="0.0785%" height="15" fill="rgb(234,71,50)" fg:x="72758" fg:w="61"/><text x="93.9306%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (19 samples, 0.02%)</title><rect x="93.7347%" y="101" width="0.0245%" height="15" fill="rgb(253,155,4)" fg:x="72800" fg:w="19"/><text x="93.9847%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (48 samples, 0.06%)</title><rect x="93.7630%" y="117" width="0.0618%" height="15" fill="rgb(222,185,37)" fg:x="72822" fg:w="48"/><text x="94.0130%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (361 samples, 0.46%)</title><rect x="93.4849%" y="149" width="0.4648%" height="15" fill="rgb(251,177,13)" fg:x="72606" fg:w="361"/><text x="93.7349%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (358 samples, 0.46%)</title><rect x="93.4888%" y="133" width="0.4609%" height="15" fill="rgb(250,179,40)" fg:x="72609" fg:w="358"/><text x="93.7388%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (97 samples, 0.12%)</title><rect x="93.8248%" y="117" width="0.1249%" height="15" fill="rgb(242,44,2)" fg:x="72870" fg:w="97"/><text x="94.0748%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (372 samples, 0.48%)</title><rect x="93.4720%" y="165" width="0.4790%" height="15" fill="rgb(216,177,13)" fg:x="72596" fg:w="372"/><text x="93.7220%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (380 samples, 0.49%)</title><rect x="93.4643%" y="181" width="0.4893%" height="15" fill="rgb(216,106,43)" fg:x="72590" fg:w="380"/><text x="93.7143%" y="191.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (234 samples, 0.30%)</title><rect x="93.9626%" y="181" width="0.3013%" height="15" fill="rgb(216,183,2)" fg:x="72977" fg:w="234"/><text x="94.2126%" y="191.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (185 samples, 0.24%)</title><rect x="94.0257%" y="165" width="0.2382%" height="15" fill="rgb(249,75,3)" fg:x="73026" fg:w="185"/><text x="94.2757%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (55 samples, 0.07%)</title><rect x="94.1931%" y="149" width="0.0708%" height="15" fill="rgb(219,67,39)" fg:x="73156" fg:w="55"/><text x="94.4431%" y="159.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (705 samples, 0.91%)</title><rect x="93.3613%" y="197" width="0.9077%" height="15" fill="rgb(253,228,2)" fg:x="72510" fg:w="705"/><text x="93.6113%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (12 samples, 0.02%)</title><rect x="94.4120%" y="149" width="0.0155%" height="15" fill="rgb(235,138,27)" fg:x="73326" fg:w="12"/><text x="94.6620%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (25 samples, 0.03%)</title><rect x="94.7738%" y="117" width="0.0322%" height="15" fill="rgb(236,97,51)" fg:x="73607" fg:w="25"/><text x="95.0238%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (418 samples, 0.54%)</title><rect x="94.4274%" y="149" width="0.5382%" height="15" fill="rgb(240,80,30)" fg:x="73338" fg:w="418"/><text x="94.6774%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (396 samples, 0.51%)</title><rect x="94.4557%" y="133" width="0.5099%" height="15" fill="rgb(230,178,19)" fg:x="73360" fg:w="396"/><text x="94.7057%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (114 samples, 0.15%)</title><rect x="94.8188%" y="117" width="0.1468%" height="15" fill="rgb(210,190,27)" fg:x="73642" fg:w="114"/><text x="95.0688%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (453 samples, 0.58%)</title><rect x="94.3849%" y="165" width="0.5833%" height="15" fill="rgb(222,107,31)" fg:x="73305" fg:w="453"/><text x="94.6349%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (467 samples, 0.60%)</title><rect x="94.3746%" y="181" width="0.6013%" height="15" fill="rgb(216,127,34)" fg:x="73297" fg:w="467"/><text x="94.6246%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (19 samples, 0.02%)</title><rect x="94.9772%" y="181" width="0.0245%" height="15" fill="rgb(234,116,52)" fg:x="73765" fg:w="19"/><text x="95.2272%" y="191.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (260 samples, 0.33%)</title><rect x="95.0017%" y="181" width="0.3348%" height="15" fill="rgb(222,124,15)" fg:x="73784" fg:w="260"/><text x="95.2517%" y="191.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (93 samples, 0.12%)</title><rect x="95.2167%" y="165" width="0.1197%" height="15" fill="rgb(231,179,28)" fg:x="73951" fg:w="93"/><text x="95.4667%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (140 samples, 0.18%)</title><rect x="95.5206%" y="133" width="0.1803%" height="15" fill="rgb(226,93,45)" fg:x="74187" fg:w="140"/><text x="95.7706%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (127 samples, 0.16%)</title><rect x="95.5373%" y="117" width="0.1635%" height="15" fill="rgb(215,8,51)" fg:x="74200" fg:w="127"/><text x="95.7873%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (118 samples, 0.15%)</title><rect x="95.5489%" y="101" width="0.1519%" height="15" fill="rgb(223,106,5)" fg:x="74209" fg:w="118"/><text x="95.7989%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (34 samples, 0.04%)</title><rect x="95.6570%" y="85" width="0.0438%" height="15" fill="rgb(250,191,5)" fg:x="74293" fg:w="34"/><text x="95.9070%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (147 samples, 0.19%)</title><rect x="95.5128%" y="149" width="0.1893%" height="15" fill="rgb(242,132,44)" fg:x="74181" fg:w="147"/><text x="95.7628%" y="159.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (53 samples, 0.07%)</title><rect x="95.7098%" y="149" width="0.0682%" height="15" fill="rgb(251,152,29)" fg:x="74334" fg:w="53"/><text x="95.9598%" y="159.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (21 samples, 0.03%)</title><rect x="95.7510%" y="133" width="0.0270%" height="15" fill="rgb(218,179,5)" fg:x="74366" fg:w="21"/><text x="96.0010%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (10 samples, 0.01%)</title><rect x="95.8090%" y="101" width="0.0129%" height="15" fill="rgb(227,67,19)" fg:x="74411" fg:w="10"/><text x="96.0590%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (131 samples, 0.17%)</title><rect x="95.7922%" y="133" width="0.1687%" height="15" fill="rgb(233,119,31)" fg:x="74398" fg:w="131"/><text x="96.0422%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (128 samples, 0.16%)</title><rect x="95.7961%" y="117" width="0.1648%" height="15" fill="rgb(241,120,22)" fg:x="74401" fg:w="128"/><text x="96.0461%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (108 samples, 0.14%)</title><rect x="95.8219%" y="101" width="0.1391%" height="15" fill="rgb(224,102,30)" fg:x="74421" fg:w="108"/><text x="96.0719%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (104 samples, 0.13%)</title><rect x="95.8270%" y="85" width="0.1339%" height="15" fill="rgb(210,164,37)" fg:x="74425" fg:w="104"/><text x="96.0770%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (34 samples, 0.04%)</title><rect x="95.9171%" y="69" width="0.0438%" height="15" fill="rgb(226,191,16)" fg:x="74495" fg:w="34"/><text x="96.1671%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="95.9609%" y="133" width="0.0129%" height="15" fill="rgb(214,40,45)" fg:x="74529" fg:w="10"/><text x="96.2109%" y="143.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (58 samples, 0.07%)</title><rect x="95.9738%" y="133" width="0.0747%" height="15" fill="rgb(244,29,26)" fg:x="74539" fg:w="58"/><text x="96.2238%" y="143.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (26 samples, 0.03%)</title><rect x="96.0150%" y="117" width="0.0335%" height="15" fill="rgb(216,16,5)" fg:x="74571" fg:w="26"/><text x="96.2650%" y="127.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (212 samples, 0.27%)</title><rect x="95.7781%" y="149" width="0.2730%" height="15" fill="rgb(249,76,35)" fg:x="74387" fg:w="212"/><text x="96.0281%" y="159.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (456 samples, 0.59%)</title><rect x="95.4703%" y="165" width="0.5871%" height="15" fill="rgb(207,11,44)" fg:x="74148" fg:w="456"/><text x="95.7203%" y="175.50"></text></g><g><title>rust_edit_history`__rdl_alloc (10 samples, 0.01%)</title><rect x="96.0639%" y="165" width="0.0129%" height="15" fill="rgb(228,190,49)" fg:x="74609" fg:w="10"/><text x="96.3139%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (17 samples, 0.02%)</title><rect x="96.2764%" y="85" width="0.0219%" height="15" fill="rgb(214,173,12)" fg:x="74774" fg:w="17"/><text x="96.5264%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (57 samples, 0.07%)</title><rect x="96.2983%" y="85" width="0.0734%" height="15" fill="rgb(218,26,35)" fg:x="74791" fg:w="57"/><text x="96.5483%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (19 samples, 0.02%)</title><rect x="96.3472%" y="69" width="0.0245%" height="15" fill="rgb(220,200,19)" fg:x="74829" fg:w="19"/><text x="96.5972%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (37 samples, 0.05%)</title><rect x="96.3755%" y="85" width="0.0476%" height="15" fill="rgb(239,95,49)" fg:x="74851" fg:w="37"/><text x="96.6255%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (316 samples, 0.41%)</title><rect x="96.1296%" y="133" width="0.4069%" height="15" fill="rgb(235,85,53)" fg:x="74660" fg:w="316"/><text x="96.3796%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (309 samples, 0.40%)</title><rect x="96.1386%" y="117" width="0.3979%" height="15" fill="rgb(233,133,31)" fg:x="74667" fg:w="309"/><text x="96.3886%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (305 samples, 0.39%)</title><rect x="96.1437%" y="101" width="0.3927%" height="15" fill="rgb(218,25,20)" fg:x="74671" fg:w="305"/><text x="96.3937%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (88 samples, 0.11%)</title><rect x="96.4231%" y="85" width="0.1133%" height="15" fill="rgb(252,210,38)" fg:x="74888" fg:w="88"/><text x="96.6731%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc (324 samples, 0.42%)</title><rect x="96.1206%" y="149" width="0.4172%" height="15" fill="rgb(242,134,21)" fg:x="74653" fg:w="324"/><text x="96.3706%" y="159.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (118 samples, 0.15%)</title><rect x="96.5403%" y="149" width="0.1519%" height="15" fill="rgb(213,28,48)" fg:x="74979" fg:w="118"/><text x="96.7903%" y="159.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (86 samples, 0.11%)</title><rect x="96.5815%" y="133" width="0.1107%" height="15" fill="rgb(250,196,2)" fg:x="75011" fg:w="86"/><text x="96.8315%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="96.6691%" y="117" width="0.0232%" height="15" fill="rgb(227,5,17)" fg:x="75079" fg:w="18"/><text x="96.9191%" y="127.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (480 samples, 0.62%)</title><rect x="96.0794%" y="165" width="0.6180%" height="15" fill="rgb(221,226,24)" fg:x="74621" fg:w="480"/><text x="96.3294%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (22 samples, 0.03%)</title><rect x="96.9536%" y="85" width="0.0283%" height="15" fill="rgb(211,5,48)" fg:x="75300" fg:w="22"/><text x="97.2036%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (227 samples, 0.29%)</title><rect x="96.7759%" y="117" width="0.2923%" height="15" fill="rgb(219,150,6)" fg:x="75162" fg:w="227"/><text x="97.0259%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (220 samples, 0.28%)</title><rect x="96.7850%" y="101" width="0.2833%" height="15" fill="rgb(251,46,16)" fg:x="75169" fg:w="220"/><text x="97.0350%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (57 samples, 0.07%)</title><rect x="96.9948%" y="85" width="0.0734%" height="15" fill="rgb(220,204,40)" fg:x="75332" fg:w="57"/><text x="97.2448%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (243 samples, 0.31%)</title><rect x="96.7566%" y="133" width="0.3129%" height="15" fill="rgb(211,85,2)" fg:x="75147" fg:w="243"/><text x="97.0066%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc (252 samples, 0.32%)</title><rect x="96.7476%" y="149" width="0.3245%" height="15" fill="rgb(229,17,7)" fg:x="75140" fg:w="252"/><text x="96.9976%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (30 samples, 0.04%)</title><rect x="97.0734%" y="149" width="0.0386%" height="15" fill="rgb(239,72,28)" fg:x="75393" fg:w="30"/><text x="97.3234%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (13 samples, 0.02%)</title><rect x="97.3335%" y="133" width="0.0167%" height="15" fill="rgb(230,47,54)" fg:x="75595" fg:w="13"/><text x="97.5835%" y="143.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (62 samples, 0.08%)</title><rect x="97.3502%" y="133" width="0.0798%" height="15" fill="rgb(214,50,8)" fg:x="75608" fg:w="62"/><text x="97.6002%" y="143.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (272 samples, 0.35%)</title><rect x="97.1146%" y="149" width="0.3502%" height="15" fill="rgb(216,198,43)" fg:x="75425" fg:w="272"/><text x="97.3646%" y="159.50"></text></g><g><title>rust_edit_history`serde_json::read::parse_escape (27 samples, 0.03%)</title><rect x="97.4300%" y="133" width="0.0348%" height="15" fill="rgb(234,20,35)" fg:x="75670" fg:w="27"/><text x="97.6800%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (13 samples, 0.02%)</title><rect x="97.6824%" y="85" width="0.0167%" height="15" fill="rgb(254,45,19)" fg:x="75866" fg:w="13"/><text x="97.9324%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (254 samples, 0.33%)</title><rect x="97.6991%" y="85" width="0.3270%" height="15" fill="rgb(219,14,44)" fg:x="75879" fg:w="254"/><text x="97.9491%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (244 samples, 0.31%)</title><rect x="97.7120%" y="69" width="0.3142%" height="15" fill="rgb(217,220,26)" fg:x="75889" fg:w="244"/><text x="97.9620%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (68 samples, 0.09%)</title><rect x="97.9386%" y="53" width="0.0876%" height="15" fill="rgb(213,158,28)" fg:x="76065" fg:w="68"/><text x="98.1886%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (281 samples, 0.36%)</title><rect x="97.6656%" y="101" width="0.3618%" height="15" fill="rgb(252,51,52)" fg:x="75853" fg:w="281"/><text x="97.9156%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc (287 samples, 0.37%)</title><rect x="97.6605%" y="117" width="0.3695%" height="15" fill="rgb(246,89,16)" fg:x="75849" fg:w="287"/><text x="97.9105%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (18 samples, 0.02%)</title><rect x="98.0313%" y="117" width="0.0232%" height="15" fill="rgb(216,158,49)" fg:x="76137" fg:w="18"/><text x="98.2813%" y="127.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (130 samples, 0.17%)</title><rect x="98.0545%" y="117" width="0.1674%" height="15" fill="rgb(236,107,19)" fg:x="76155" fg:w="130"/><text x="98.3045%" y="127.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (58 samples, 0.07%)</title><rect x="98.1472%" y="101" width="0.0747%" height="15" fill="rgb(228,185,30)" fg:x="76227" fg:w="58"/><text x="98.3972%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (91 samples, 0.12%)</title><rect x="98.2335%" y="85" width="0.1172%" height="15" fill="rgb(246,134,8)" fg:x="76294" fg:w="91"/><text x="98.4835%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (84 samples, 0.11%)</title><rect x="98.2425%" y="69" width="0.1082%" height="15" fill="rgb(214,143,50)" fg:x="76301" fg:w="84"/><text x="98.4925%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (75 samples, 0.10%)</title><rect x="98.2541%" y="53" width="0.0966%" height="15" fill="rgb(228,75,8)" fg:x="76310" fg:w="75"/><text x="98.5041%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (25 samples, 0.03%)</title><rect x="98.3184%" y="37" width="0.0322%" height="15" fill="rgb(207,175,4)" fg:x="76360" fg:w="25"/><text x="98.5684%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`malloc (98 samples, 0.13%)</title><rect x="98.2257%" y="101" width="0.1262%" height="15" fill="rgb(205,108,24)" fg:x="76288" fg:w="98"/><text x="98.4757%" y="111.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (63 samples, 0.08%)</title><rect x="98.3584%" y="101" width="0.0811%" height="15" fill="rgb(244,120,49)" fg:x="76391" fg:w="63"/><text x="98.6084%" y="111.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (31 samples, 0.04%)</title><rect x="98.3996%" y="85" width="0.0399%" height="15" fill="rgb(223,47,38)" fg:x="76423" fg:w="31"/><text x="98.6496%" y="95.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::KeyClassifier as serde::de::DeserializeSeed&gt;::deserialize (170 samples, 0.22%)</title><rect x="98.2219%" y="117" width="0.2189%" height="15" fill="rgb(229,179,11)" fg:x="76285" fg:w="170"/><text x="98.4719%" y="127.50"></text></g><g><title>rust_edit_history`&lt;serde_json::de::MapAccess&lt;R&gt; as serde::de::MapAccess&gt;::next_key_seed (657 samples, 0.85%)</title><rect x="97.6026%" y="133" width="0.8459%" height="15" fill="rgb(231,122,1)" fg:x="75804" fg:w="657"/><text x="97.8526%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="98.5360%" y="85" width="0.0103%" height="15" fill="rgb(245,119,9)" fg:x="76529" fg:w="8"/><text x="98.7860%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.01%)</title><rect x="98.6275%" y="53" width="0.0116%" height="15" fill="rgb(241,163,25)" fg:x="76600" fg:w="9"/><text x="98.8775%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (36 samples, 0.05%)</title><rect x="98.6390%" y="53" width="0.0464%" height="15" fill="rgb(217,214,3)" fg:x="76609" fg:w="36"/><text x="98.8890%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (15 samples, 0.02%)</title><rect x="98.6661%" y="37" width="0.0193%" height="15" fill="rgb(240,86,28)" fg:x="76630" fg:w="15"/><text x="98.9161%" y="47.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_reattach_region (17 samples, 0.02%)</title><rect x="98.6880%" y="53" width="0.0219%" height="15" fill="rgb(215,47,9)" fg:x="76647" fg:w="17"/><text x="98.9380%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (196 samples, 0.25%)</title><rect x="98.5309%" y="101" width="0.2524%" height="15" fill="rgb(252,25,45)" fg:x="76525" fg:w="196"/><text x="98.7809%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (184 samples, 0.24%)</title><rect x="98.5463%" y="85" width="0.2369%" height="15" fill="rgb(251,164,9)" fg:x="76537" fg:w="184"/><text x="98.7963%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (182 samples, 0.23%)</title><rect x="98.5489%" y="69" width="0.2343%" height="15" fill="rgb(233,194,0)" fg:x="76539" fg:w="182"/><text x="98.7989%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (57 samples, 0.07%)</title><rect x="98.7099%" y="53" width="0.0734%" height="15" fill="rgb(249,111,24)" fg:x="76664" fg:w="57"/><text x="98.9599%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc (200 samples, 0.26%)</title><rect x="98.5283%" y="117" width="0.2575%" height="15" fill="rgb(250,223,3)" fg:x="76523" fg:w="200"/><text x="98.7783%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memcmp (9 samples, 0.01%)</title><rect x="98.7858%" y="117" width="0.0116%" height="15" fill="rgb(236,178,37)" fg:x="76723" fg:w="9"/><text x="99.0358%" y="127.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::entry::VacantEntry&lt;K,V&gt;::insert (104 samples, 0.13%)</title><rect x="98.7974%" y="117" width="0.1339%" height="15" fill="rgb(241,158,50)" fg:x="76732" fg:w="104"/><text x="99.0474%" y="127.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (75 samples, 0.10%)</title><rect x="98.8348%" y="101" width="0.0966%" height="15" fill="rgb(213,121,41)" fg:x="76761" fg:w="75"/><text x="99.0848%" y="111.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (10 samples, 0.01%)</title><rect x="98.9184%" y="85" width="0.0129%" height="15" fill="rgb(240,92,3)" fg:x="76826" fg:w="10"/><text x="99.1684%" y="95.50"></text></g><g><title>rust_edit_history`alloc::collections::btree::map::BTreeMap&lt;K,V&gt;::insert (367 samples, 0.47%)</title><rect x="98.4614%" y="133" width="0.4725%" height="15" fill="rgb(205,123,3)" fg:x="76471" fg:w="367"/><text x="98.7114%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_malloc (8 samples, 0.01%)</title><rect x="99.0305%" y="85" width="0.0103%" height="15" fill="rgb(205,97,47)" fg:x="76913" fg:w="8"/><text x="99.2805%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (189 samples, 0.24%)</title><rect x="99.0240%" y="101" width="0.2433%" height="15" fill="rgb(247,152,14)" fg:x="76908" fg:w="189"/><text x="99.2740%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (176 samples, 0.23%)</title><rect x="99.0408%" y="85" width="0.2266%" height="15" fill="rgb(248,195,53)" fg:x="76921" fg:w="176"/><text x="99.2908%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (160 samples, 0.21%)</title><rect x="99.0614%" y="69" width="0.2060%" height="15" fill="rgb(226,201,16)" fg:x="76937" fg:w="160"/><text x="99.3114%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (48 samples, 0.06%)</title><rect x="99.2056%" y="53" width="0.0618%" height="15" fill="rgb(205,98,0)" fg:x="77049" fg:w="48"/><text x="99.4556%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`malloc (192 samples, 0.25%)</title><rect x="99.0215%" y="117" width="0.2472%" height="15" fill="rgb(214,191,48)" fg:x="76906" fg:w="192"/><text x="99.2715%" y="127.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (62 samples, 0.08%)</title><rect x="99.3923%" y="101" width="0.0798%" height="15" fill="rgb(237,112,39)" fg:x="77194" fg:w="62"/><text x="99.6423%" y="111.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (158 samples, 0.20%)</title><rect x="99.2777%" y="117" width="0.2034%" height="15" fill="rgb(247,203,27)" fg:x="77105" fg:w="158"/><text x="99.5277%" y="127.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (1,610 samples, 2.07%)</title><rect x="97.4648%" y="149" width="2.0730%" height="15" fill="rgb(235,124,28)" fg:x="75697" fg:w="1610"/><text x="97.7148%" y="159.50">r..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (466 samples, 0.60%)</title><rect x="98.9378%" y="133" width="0.6000%" height="15" fill="rgb(208,207,46)" fg:x="76841" fg:w="466"/><text x="99.1878%" y="143.50"></text></g><g><title>rust_edit_history`serde_json::de::Deserializer&lt;R&gt;::parse_any_number (42 samples, 0.05%)</title><rect x="99.4837%" y="117" width="0.0541%" height="15" fill="rgb(234,176,4)" fg:x="77265" fg:w="42"/><text x="99.7337%" y="127.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (3,269 samples, 4.21%)</title><rect x="95.3364%" y="181" width="4.2090%" height="15" fill="rgb(230,133,28)" fg:x="74044" fg:w="3269"/><text x="95.5864%" y="191.50">rust_..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (2,210 samples, 2.85%)</title><rect x="96.7000%" y="165" width="2.8455%" height="15" fill="rgb(211,137,40)" fg:x="75103" fg:w="2210"/><text x="96.9500%" y="175.50">ru..</text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (5,974 samples, 7.69%)</title><rect x="91.8600%" y="213" width="7.6919%" height="15" fill="rgb(254,35,13)" fg:x="71344" fg:w="5974"/><text x="92.1100%" y="223.50">rust_edit_h..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (4,099 samples, 5.28%)</title><rect x="94.2742%" y="197" width="5.2777%" height="15" fill="rgb(225,49,51)" fg:x="73219" fg:w="4099"/><text x="94.5242%" y="207.50">rust_e..</text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (6,859 samples, 8.83%)</title><rect x="90.7270%" y="261" width="8.8314%" height="15" fill="rgb(251,10,15)" fg:x="70464" fg:w="6859"/><text x="90.9770%" y="271.50">rust_edit_hi..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,299 samples, 8.11%)</title><rect x="91.4480%" y="245" width="8.1104%" height="15" fill="rgb(228,207,15)" fg:x="71024" fg:w="6299"/><text x="91.6980%" y="255.50">rust_edit_h..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (6,013 samples, 7.74%)</title><rect x="91.8162%" y="229" width="7.7421%" height="15" fill="rgb(241,99,19)" fg:x="71310" fg:w="6013"/><text x="92.0662%" y="239.50">rust_edit_h..</text></g><g><title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (9 samples, 0.01%)</title><rect x="99.6356%" y="165" width="0.0116%" height="15" fill="rgb(207,104,49)" fg:x="77383" fg:w="9"/><text x="99.8856%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_detach_region (8 samples, 0.01%)</title><rect x="99.6472%" y="165" width="0.0103%" height="15" fill="rgb(234,99,18)" fg:x="77392" fg:w="8"/><text x="99.8972%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc (99 samples, 0.13%)</title><rect x="99.5674%" y="229" width="0.1275%" height="15" fill="rgb(213,191,49)" fg:x="77330" fg:w="99"/><text x="99.8174%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (98 samples, 0.13%)</title><rect x="99.5687%" y="213" width="0.1262%" height="15" fill="rgb(210,226,19)" fg:x="77331" fg:w="98"/><text x="99.8187%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (94 samples, 0.12%)</title><rect x="99.5738%" y="197" width="0.1210%" height="15" fill="rgb(229,97,18)" fg:x="77335" fg:w="94"/><text x="99.8238%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (91 samples, 0.12%)</title><rect x="99.5777%" y="181" width="0.1172%" height="15" fill="rgb(211,167,15)" fg:x="77338" fg:w="91"/><text x="99.8277%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (23 samples, 0.03%)</title><rect x="99.6652%" y="165" width="0.0296%" height="15" fill="rgb(210,169,34)" fg:x="77406" fg:w="23"/><text x="99.9152%" y="175.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (107 samples, 0.14%)</title><rect x="99.5609%" y="261" width="0.1378%" height="15" fill="rgb(241,121,31)" fg:x="77325" fg:w="107"/><text x="99.8109%" y="271.50"></text></g><g><title>rust_edit_history`alloc::raw_vec::finish_grow (102 samples, 0.13%)</title><rect x="99.5674%" y="245" width="0.1313%" height="15" fill="rgb(232,40,11)" fg:x="77330" fg:w="102"/><text x="99.8174%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (130 samples, 0.17%)</title><rect x="99.7476%" y="213" width="0.1674%" height="15" fill="rgb(205,86,26)" fg:x="77470" fg:w="130"/><text x="99.9976%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (122 samples, 0.16%)</title><rect x="99.7579%" y="197" width="0.1571%" height="15" fill="rgb(231,126,28)" fg:x="77478" fg:w="122"/><text x="100.0079%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (38 samples, 0.05%)</title><rect x="99.8661%" y="181" width="0.0489%" height="15" fill="rgb(219,221,18)" fg:x="77562" fg:w="38"/><text x="100.1161%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_malloc (144 samples, 0.19%)</title><rect x="99.7309%" y="229" width="0.1854%" height="15" fill="rgb(211,40,0)" fg:x="77457" fg:w="144"/><text x="99.9809%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc (149 samples, 0.19%)</title><rect x="99.7257%" y="245" width="0.1918%" height="15" fill="rgb(239,85,43)" fg:x="77453" fg:w="149"/><text x="99.9757%" y="255.50"></text></g><g><title>rust_edit_history`&lt;serde_json::read::SliceRead as serde_json::read::Read&gt;::parse_str (50 samples, 0.06%)</title><rect x="99.9240%" y="245" width="0.0644%" height="15" fill="rgb(231,55,21)" fg:x="77607" fg:w="50"/><text x="100.1740%" y="255.50"></text></g><g><title>rust_edit_history`core::str::converts::from_utf8 (16 samples, 0.02%)</title><rect x="99.9678%" y="229" width="0.0206%" height="15" fill="rgb(225,184,43)" fg:x="77641" fg:w="16"/><text x="100.2178%" y="239.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (25,414 samples, 32.72%)</title><rect x="67.2688%" y="341" width="32.7222%" height="15" fill="rgb(251,158,41)" fg:x="52245" fg:w="25414"/><text x="67.5188%" y="351.50">rust_edit_history`&lt;serde_json::value::de::&lt;impl serde..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (22,372 samples, 28.81%)</title><rect x="71.1856%" y="325" width="28.8054%" height="15" fill="rgb(234,159,37)" fg:x="55287" fg:w="22372"/><text x="71.4356%" y="335.50">rust_edit_history`serde_json::value::de::_&lt;imp..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (8,387 samples, 10.80%)</title><rect x="89.1922%" y="309" width="10.7988%" height="15" fill="rgb(216,204,22)" fg:x="69272" fg:w="8387"/><text x="89.4422%" y="319.50">rust_edit_histor..</text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (8,191 samples, 10.55%)</title><rect x="89.4445%" y="293" width="10.5464%" height="15" fill="rgb(214,17,3)" fg:x="69468" fg:w="8191"/><text x="89.6945%" y="303.50">rust_edit_histo..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (7,475 samples, 9.62%)</title><rect x="90.3664%" y="277" width="9.6245%" height="15" fill="rgb(212,111,17)" fg:x="70184" fg:w="7475"/><text x="90.6164%" y="287.50">rust_edit_hist..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (227 samples, 0.29%)</title><rect x="99.6987%" y="261" width="0.2923%" height="15" fill="rgb(221,157,24)" fg:x="77432" fg:w="227"/><text x="99.9487%" y="271.50"></text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31,505 samples, 40.56%)</title><rect x="59.4340%" y="389" width="40.5647%" height="15" fill="rgb(252,16,13)" fg:x="46160" fg:w="31505"/><text x="59.6840%" y="399.50">rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deseria..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (29,688 samples, 38.23%)</title><rect x="61.7735%" y="373" width="38.2252%" height="15" fill="rgb(221,62,2)" fg:x="47977" fg:w="29688"/><text x="62.0235%" y="383.50">rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Des..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (25,486 samples, 32.81%)</title><rect x="67.1838%" y="357" width="32.8149%" height="15" fill="rgb(247,87,22)" fg:x="52179" fg:w="25486"/><text x="67.4338%" y="367.50">rust_edit_history`serde_json::value::de::_&lt;impl serde..</text></g><g><title>all (77,666 samples, 100%)</title><rect x="0.0000%" y="581" width="100.0000%" height="15" fill="rgb(215,73,9)" fg:x="0" fg:w="77666"/><text x="0.2500%" y="591.50"></text></g><g><title>rust_edit_history`0x1 (77,666 samples, 100.00%)</title><rect x="0.0000%" y="565" width="100.0000%" height="15" fill="rgb(207,175,33)" fg:x="0" fg:w="77666"/><text x="0.2500%" y="575.50">rust_edit_history`0x1</text></g><g><title>libdyld.dylib`start (77,666 samples, 100.00%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(243,129,54)" fg:x="0" fg:w="77666"/><text x="0.2500%" y="559.50">libdyld.dylib`start</text></g><g><title>rust_edit_history`main (77,663 samples, 100.00%)</title><rect x="0.0039%" y="533" width="99.9961%" height="15" fill="rgb(227,119,45)" fg:x="3" fg:w="77663"/><text x="0.2539%" y="543.50">rust_edit_history`main</text></g><g><title>rust_edit_history`std::rt::lang_start_internal (77,663 samples, 100.00%)</title><rect x="0.0039%" y="517" width="99.9961%" height="15" fill="rgb(205,109,36)" fg:x="3" fg:w="77663"/><text x="0.2539%" y="527.50">rust_edit_history`std::rt::lang_start_internal</text></g><g><title>rust_edit_history`std::rt::lang_start::_{{closure}} (77,663 samples, 100.00%)</title><rect x="0.0039%" y="501" width="99.9961%" height="15" fill="rgb(205,6,39)" fg:x="3" fg:w="77663"/><text x="0.2539%" y="511.50">rust_edit_history`std::rt::lang_start::_{{closure}}</text></g><g><title>rust_edit_history`std::sys_common::backtrace::__rust_begin_short_backtrace (77,663 samples, 100.00%)</title><rect x="0.0039%" y="485" width="99.9961%" height="15" fill="rgb(221,32,16)" fg:x="3" fg:w="77663"/><text x="0.2539%" y="495.50">rust_edit_history`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>rust_edit_history`rust_edit_history::main (77,661 samples, 99.99%)</title><rect x="0.0064%" y="469" width="99.9936%" height="15" fill="rgb(228,144,50)" fg:x="5" fg:w="77661"/><text x="0.2564%" y="479.50">rust_edit_history`rust_edit_history::main</text></g><g><title>rust_edit_history`serde_json::de::from_slice (31,540 samples, 40.61%)</title><rect x="59.3902%" y="453" width="40.6098%" height="15" fill="rgb(229,201,53)" fg:x="46126" fg:w="31540"/><text x="59.6402%" y="463.50">rust_edit_history`serde_json::de::from_slice</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (31,538 samples, 40.61%)</title><rect x="59.3928%" y="437" width="40.6072%" height="15" fill="rgb(249,153,27)" fg:x="46128" fg:w="31538"/><text x="59.6428%" y="447.50">rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deseria..</text></g><g><title>rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize::ValueVisitor as serde::de::Visitor&gt;::visit_map (31,535 samples, 40.60%)</title><rect x="59.3966%" y="421" width="40.6034%" height="15" fill="rgb(227,106,25)" fg:x="46131" fg:w="31535"/><text x="59.6466%" y="431.50">rust_edit_history`&lt;serde_json::value::de::&lt;impl serde::de::Deseria..</text></g><g><title>rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deserialize for serde_json::value::Value&gt;::deserialize (31,516 samples, 40.58%)</title><rect x="59.4211%" y="405" width="40.5789%" height="15" fill="rgb(230,65,29)" fg:x="46150" fg:w="31516"/><text x="59.6711%" y="415.50">rust_edit_history`serde_json::value::de::_&lt;impl serde::de::Deseria..</text></g></svg></svg>